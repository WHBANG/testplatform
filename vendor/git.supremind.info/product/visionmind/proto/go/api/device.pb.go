// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: device.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type DeviceType int32

const (
	DeviceType_DEVICE_TYPE_HIKVISION   DeviceType = 0
	DeviceType_DEVICE_TYPE_STREAM_ADDR DeviceType = 1
	DeviceType_DEVICE_TYPE_GB28181     DeviceType = 2
)

var DeviceType_name = map[int32]string{
	0: "DEVICE_TYPE_HIKVISION",
	1: "DEVICE_TYPE_STREAM_ADDR",
	2: "DEVICE_TYPE_GB28181",
}

var DeviceType_value = map[string]int32{
	"DEVICE_TYPE_HIKVISION":   0,
	"DEVICE_TYPE_STREAM_ADDR": 1,
	"DEVICE_TYPE_GB28181":     2,
}

func (x DeviceType) String() string {
	return proto.EnumName(DeviceType_name, int32(x))
}

func (DeviceType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{0}
}

type ChannelType int32

const (
	ChannelType_CHANNEL_TYPE_DIGITAL ChannelType = 0
	ChannelType_CHANNEL_TYPE_ANALOG  ChannelType = 1
)

var ChannelType_name = map[int32]string{
	0: "CHANNEL_TYPE_DIGITAL",
	1: "CHANNEL_TYPE_ANALOG",
}

var ChannelType_value = map[string]int32{
	"CHANNEL_TYPE_DIGITAL": 0,
	"CHANNEL_TYPE_ANALOG":  1,
}

func (x ChannelType) String() string {
	return proto.EnumName(ChannelType_name, int32(x))
}

func (ChannelType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{1}
}

type CreateStreamRequest struct {
	DeviceId             string   `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateStreamRequest) Reset()         { *m = CreateStreamRequest{} }
func (m *CreateStreamRequest) String() string { return proto.CompactTextString(m) }
func (*CreateStreamRequest) ProtoMessage()    {}
func (*CreateStreamRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{0}
}
func (m *CreateStreamRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateStreamRequest.Unmarshal(m, b)
}
func (m *CreateStreamRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateStreamRequest.Marshal(b, m, deterministic)
}
func (m *CreateStreamRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateStreamRequest.Merge(m, src)
}
func (m *CreateStreamRequest) XXX_Size() int {
	return xxx_messageInfo_CreateStreamRequest.Size(m)
}
func (m *CreateStreamRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateStreamRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateStreamRequest proto.InternalMessageInfo

func (m *CreateStreamRequest) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

type CreateStreamResponse struct {
	DeviceType           DeviceType  `protobuf:"varint,1,opt,name=device_type,json=deviceType,proto3,enum=vmr_proto.DeviceType" json:"device_type,omitempty"`
	ChannelType          ChannelType `protobuf:"varint,2,opt,name=channel_type,json=channelType,proto3,enum=vmr_proto.ChannelType" json:"channel_type,omitempty"`
	ChannelId            uint32      `protobuf:"varint,3,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	Host                 string      `protobuf:"bytes,4,opt,name=host,proto3" json:"host,omitempty"`
	UserName             string      `protobuf:"bytes,5,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	Password             string      `protobuf:"bytes,6,opt,name=password,proto3" json:"password,omitempty"`
	StreamUrl            string      `protobuf:"bytes,7,opt,name=stream_url,json=streamUrl,proto3" json:"stream_url,omitempty"`
	Ptz                  bool        `protobuf:"varint,8,opt,name=ptz,proto3" json:"ptz,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CreateStreamResponse) Reset()         { *m = CreateStreamResponse{} }
func (m *CreateStreamResponse) String() string { return proto.CompactTextString(m) }
func (*CreateStreamResponse) ProtoMessage()    {}
func (*CreateStreamResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{1}
}
func (m *CreateStreamResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateStreamResponse.Unmarshal(m, b)
}
func (m *CreateStreamResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateStreamResponse.Marshal(b, m, deterministic)
}
func (m *CreateStreamResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateStreamResponse.Merge(m, src)
}
func (m *CreateStreamResponse) XXX_Size() int {
	return xxx_messageInfo_CreateStreamResponse.Size(m)
}
func (m *CreateStreamResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateStreamResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateStreamResponse proto.InternalMessageInfo

func (m *CreateStreamResponse) GetDeviceType() DeviceType {
	if m != nil {
		return m.DeviceType
	}
	return DeviceType_DEVICE_TYPE_HIKVISION
}

func (m *CreateStreamResponse) GetChannelType() ChannelType {
	if m != nil {
		return m.ChannelType
	}
	return ChannelType_CHANNEL_TYPE_DIGITAL
}

func (m *CreateStreamResponse) GetChannelId() uint32 {
	if m != nil {
		return m.ChannelId
	}
	return 0
}

func (m *CreateStreamResponse) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *CreateStreamResponse) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *CreateStreamResponse) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *CreateStreamResponse) GetStreamUrl() string {
	if m != nil {
		return m.StreamUrl
	}
	return ""
}

func (m *CreateStreamResponse) GetPtz() bool {
	if m != nil {
		return m.Ptz
	}
	return false
}

type RetrieveStreamRequest struct {
	Ssrc                 string   `protobuf:"bytes,1,opt,name=ssrc,proto3" json:"ssrc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RetrieveStreamRequest) Reset()         { *m = RetrieveStreamRequest{} }
func (m *RetrieveStreamRequest) String() string { return proto.CompactTextString(m) }
func (*RetrieveStreamRequest) ProtoMessage()    {}
func (*RetrieveStreamRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{2}
}
func (m *RetrieveStreamRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RetrieveStreamRequest.Unmarshal(m, b)
}
func (m *RetrieveStreamRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RetrieveStreamRequest.Marshal(b, m, deterministic)
}
func (m *RetrieveStreamRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RetrieveStreamRequest.Merge(m, src)
}
func (m *RetrieveStreamRequest) XXX_Size() int {
	return xxx_messageInfo_RetrieveStreamRequest.Size(m)
}
func (m *RetrieveStreamRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RetrieveStreamRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RetrieveStreamRequest proto.InternalMessageInfo

func (m *RetrieveStreamRequest) GetSsrc() string {
	if m != nil {
		return m.Ssrc
	}
	return ""
}

type RetrieveStreamResponse struct {
	DeviceId             string   `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RetrieveStreamResponse) Reset()         { *m = RetrieveStreamResponse{} }
func (m *RetrieveStreamResponse) String() string { return proto.CompactTextString(m) }
func (*RetrieveStreamResponse) ProtoMessage()    {}
func (*RetrieveStreamResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{3}
}
func (m *RetrieveStreamResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RetrieveStreamResponse.Unmarshal(m, b)
}
func (m *RetrieveStreamResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RetrieveStreamResponse.Marshal(b, m, deterministic)
}
func (m *RetrieveStreamResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RetrieveStreamResponse.Merge(m, src)
}
func (m *RetrieveStreamResponse) XXX_Size() int {
	return xxx_messageInfo_RetrieveStreamResponse.Size(m)
}
func (m *RetrieveStreamResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RetrieveStreamResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RetrieveStreamResponse proto.InternalMessageInfo

func (m *RetrieveStreamResponse) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

type DeleteStreamRequest struct {
	DeviceId             string   `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteStreamRequest) Reset()         { *m = DeleteStreamRequest{} }
func (m *DeleteStreamRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteStreamRequest) ProtoMessage()    {}
func (*DeleteStreamRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{4}
}
func (m *DeleteStreamRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteStreamRequest.Unmarshal(m, b)
}
func (m *DeleteStreamRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteStreamRequest.Marshal(b, m, deterministic)
}
func (m *DeleteStreamRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteStreamRequest.Merge(m, src)
}
func (m *DeleteStreamRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteStreamRequest.Size(m)
}
func (m *DeleteStreamRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteStreamRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteStreamRequest proto.InternalMessageInfo

func (m *DeleteStreamRequest) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func init() {
	proto.RegisterEnum("vmr_proto.DeviceType", DeviceType_name, DeviceType_value)
	proto.RegisterEnum("vmr_proto.ChannelType", ChannelType_name, ChannelType_value)
	proto.RegisterType((*CreateStreamRequest)(nil), "vmr_proto.CreateStreamRequest")
	proto.RegisterType((*CreateStreamResponse)(nil), "vmr_proto.CreateStreamResponse")
	proto.RegisterType((*RetrieveStreamRequest)(nil), "vmr_proto.RetrieveStreamRequest")
	proto.RegisterType((*RetrieveStreamResponse)(nil), "vmr_proto.RetrieveStreamResponse")
	proto.RegisterType((*DeleteStreamRequest)(nil), "vmr_proto.DeleteStreamRequest")
}

func init() { proto.RegisterFile("device.proto", fileDescriptor_870276a56ac00da5) }

var fileDescriptor_870276a56ac00da5 = []byte{
	// 535 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x53, 0x6d, 0x6f, 0xd3, 0x40,
	0x0c, 0x5e, 0xb6, 0x31, 0x5a, 0xaf, 0x9b, 0xa2, 0xeb, 0xda, 0x85, 0x56, 0x40, 0xe9, 0xa7, 0x6a,
	0x48, 0xa9, 0x16, 0x5e, 0x34, 0xbe, 0x91, 0x35, 0xa1, 0x8b, 0x28, 0x2d, 0x4a, 0xbb, 0x49, 0x20,
	0xa1, 0x28, 0x6b, 0xbc, 0x2e, 0x52, 0xf3, 0xc2, 0x5d, 0x52, 0x54, 0x7e, 0x10, 0x7f, 0x13, 0x94,
	0xbb, 0x74, 0x4b, 0xc7, 0x98, 0xc4, 0xa7, 0xd8, 0x7e, 0xfc, 0x5c, 0x6c, 0x3f, 0x36, 0x54, 0x3c,
	0x5c, 0xf8, 0x53, 0x54, 0x63, 0x1a, 0x25, 0x11, 0x29, 0x2f, 0x02, 0xea, 0x70, 0xb3, 0xd1, 0x9c,
	0x45, 0xd1, 0x6c, 0x8e, 0x5d, 0xee, 0x5d, 0xa6, 0x57, 0x5d, 0x0c, 0xe2, 0x64, 0x29, 0xf2, 0xda,
	0x1a, 0x54, 0x7b, 0x14, 0xdd, 0x04, 0xc7, 0x09, 0x45, 0x37, 0xb0, 0xf1, 0x7b, 0x8a, 0x2c, 0x21,
	0x4d, 0x28, 0x8b, 0xe7, 0x1c, 0xdf, 0x53, 0xa4, 0x96, 0xd4, 0x29, 0xdb, 0x25, 0x11, 0xb0, 0xbc,
	0xf6, 0xaf, 0x4d, 0x38, 0x58, 0x27, 0xb1, 0x38, 0x0a, 0x19, 0x92, 0xb7, 0xb0, 0x9b, 0xb3, 0x92,
	0x65, 0x8c, 0x9c, 0xb7, 0xaf, 0xd5, 0xd4, 0x9b, 0x52, 0x54, 0x83, 0xa3, 0x93, 0x65, 0x8c, 0x36,
	0x78, 0x37, 0x36, 0x79, 0x07, 0x95, 0xe9, 0xb5, 0x1b, 0x86, 0x38, 0x17, 0xc4, 0x4d, 0x4e, 0xac,
	0x17, 0x88, 0x3d, 0x01, 0x73, 0xe6, 0xee, 0xf4, 0xd6, 0x21, 0x4f, 0x01, 0x56, 0x54, 0xdf, 0x53,
	0xb6, 0x5a, 0x52, 0x67, 0xcf, 0x2e, 0xe7, 0x11, 0xcb, 0x23, 0x04, 0xb6, 0xaf, 0x23, 0x96, 0x28,
	0xdb, 0xbc, 0x05, 0x6e, 0x67, 0xbd, 0xa5, 0x0c, 0xa9, 0x13, 0xba, 0x01, 0x2a, 0x8f, 0x44, 0x6f,
	0x59, 0x60, 0xe8, 0x06, 0x48, 0x1a, 0x50, 0x8a, 0x5d, 0xc6, 0x7e, 0x44, 0xd4, 0x53, 0x76, 0x04,
	0xb6, 0xf2, 0xb3, 0x7f, 0x31, 0xde, 0xb0, 0x93, 0xd2, 0xb9, 0xf2, 0x98, 0xa3, 0x65, 0x11, 0x39,
	0xa7, 0x73, 0x22, 0xc3, 0x56, 0x9c, 0xfc, 0x54, 0x4a, 0x2d, 0xa9, 0x53, 0xb2, 0x33, 0xb3, 0xfd,
	0x12, 0x6a, 0x36, 0x26, 0xd4, 0xc7, 0xc5, 0x9d, 0xf1, 0x12, 0xd8, 0x66, 0x8c, 0x4e, 0xf3, 0xc9,
	0x72, 0xbb, 0xfd, 0x06, 0xea, 0x77, 0x93, 0xf3, 0xb1, 0x3e, 0x28, 0x86, 0x06, 0x55, 0x03, 0xe7,
	0xf8, 0x3f, 0x02, 0x1e, 0x7d, 0x03, 0xb8, 0x55, 0x82, 0x3c, 0x81, 0x9a, 0x61, 0x5e, 0x58, 0x3d,
	0xd3, 0x99, 0x7c, 0xf9, 0x6c, 0x3a, 0x67, 0xd6, 0xc7, 0x0b, 0x6b, 0x6c, 0x8d, 0x86, 0xf2, 0x06,
	0x69, 0xc2, 0x61, 0x11, 0x1a, 0x4f, 0x6c, 0x53, 0xff, 0xe4, 0xe8, 0x86, 0x61, 0xcb, 0x12, 0x39,
	0x84, 0x6a, 0x11, 0xec, 0x9f, 0x6a, 0x27, 0xc7, 0x27, 0xc7, 0xf2, 0xe6, 0xd1, 0x7b, 0xd8, 0x2d,
	0xe8, 0x45, 0x14, 0x38, 0xe8, 0x9d, 0xe9, 0xc3, 0xa1, 0x39, 0x10, 0x89, 0x86, 0xd5, 0xb7, 0x26,
	0xfa, 0x40, 0xde, 0xc8, 0x5e, 0x58, 0x43, 0xf4, 0xa1, 0x3e, 0x18, 0xf5, 0x65, 0x49, 0xfb, 0x2d,
	0xc1, 0x9e, 0xa8, 0x70, 0x8c, 0x34, 0xfb, 0x90, 0x11, 0x54, 0x8a, 0x2b, 0x47, 0x9e, 0x15, 0x97,
	0xe3, 0xef, 0x05, 0x6e, 0x3c, 0xff, 0x27, 0x9e, 0x0f, 0xf5, 0x1c, 0xf6, 0xd7, 0xc7, 0x4d, 0x5a,
	0x05, 0xca, 0xbd, 0xb2, 0x35, 0x5e, 0x3c, 0x90, 0x91, 0x3f, 0xfb, 0x01, 0x2a, 0x45, 0x39, 0xd6,
	0xea, 0xbc, 0x47, 0xa7, 0x46, 0x5d, 0x15, 0xd7, 0xa9, 0xae, 0xae, 0x53, 0x35, 0xb3, 0xeb, 0x3c,
	0x7d, 0xfd, 0x55, 0x9b, 0xf9, 0x89, 0xca, 0xd2, 0x98, 0x62, 0xe0, 0x87, 0x9e, 0xea, 0x87, 0x57,
	0x51, 0x76, 0xc2, 0x5e, 0x3a, 0x4d, 0xba, 0x0b, 0x9f, 0xf9, 0x51, 0x98, 0xc5, 0xc5, 0x55, 0x77,
	0x67, 0x51, 0xd7, 0x8d, 0xfd, 0xcb, 0x1d, 0xee, 0xbd, 0xfa, 0x13, 0x00, 0x00, 0xff, 0xff, 0xa2,
	0xcc, 0x83, 0x53, 0x0c, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DeviceServiceClient is the client API for DeviceService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DeviceServiceClient interface {
	CreateStream(ctx context.Context, in *CreateStreamRequest, opts ...grpc.CallOption) (*CreateStreamResponse, error)
	RetrieveStream(ctx context.Context, in *RetrieveStreamRequest, opts ...grpc.CallOption) (*RetrieveStreamResponse, error)
	DeleteStream(ctx context.Context, in *DeleteStreamRequest, opts ...grpc.CallOption) (*types.Empty, error)
}

type deviceServiceClient struct {
	cc *grpc.ClientConn
}

func NewDeviceServiceClient(cc *grpc.ClientConn) DeviceServiceClient {
	return &deviceServiceClient{cc}
}

func (c *deviceServiceClient) CreateStream(ctx context.Context, in *CreateStreamRequest, opts ...grpc.CallOption) (*CreateStreamResponse, error) {
	out := new(CreateStreamResponse)
	err := c.cc.Invoke(ctx, "/vmr_proto.DeviceService/CreateStream", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceServiceClient) RetrieveStream(ctx context.Context, in *RetrieveStreamRequest, opts ...grpc.CallOption) (*RetrieveStreamResponse, error) {
	out := new(RetrieveStreamResponse)
	err := c.cc.Invoke(ctx, "/vmr_proto.DeviceService/RetrieveStream", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceServiceClient) DeleteStream(ctx context.Context, in *DeleteStreamRequest, opts ...grpc.CallOption) (*types.Empty, error) {
	out := new(types.Empty)
	err := c.cc.Invoke(ctx, "/vmr_proto.DeviceService/DeleteStream", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DeviceServiceServer is the server API for DeviceService service.
type DeviceServiceServer interface {
	CreateStream(context.Context, *CreateStreamRequest) (*CreateStreamResponse, error)
	RetrieveStream(context.Context, *RetrieveStreamRequest) (*RetrieveStreamResponse, error)
	DeleteStream(context.Context, *DeleteStreamRequest) (*types.Empty, error)
}

// UnimplementedDeviceServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDeviceServiceServer struct {
}

func (*UnimplementedDeviceServiceServer) CreateStream(ctx context.Context, req *CreateStreamRequest) (*CreateStreamResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateStream not implemented")
}
func (*UnimplementedDeviceServiceServer) RetrieveStream(ctx context.Context, req *RetrieveStreamRequest) (*RetrieveStreamResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RetrieveStream not implemented")
}
func (*UnimplementedDeviceServiceServer) DeleteStream(ctx context.Context, req *DeleteStreamRequest) (*types.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteStream not implemented")
}

func RegisterDeviceServiceServer(s *grpc.Server, srv DeviceServiceServer) {
	s.RegisterService(&_DeviceService_serviceDesc, srv)
}

func _DeviceService_CreateStream_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateStreamRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServiceServer).CreateStream(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vmr_proto.DeviceService/CreateStream",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServiceServer).CreateStream(ctx, req.(*CreateStreamRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeviceService_RetrieveStream_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RetrieveStreamRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServiceServer).RetrieveStream(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vmr_proto.DeviceService/RetrieveStream",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServiceServer).RetrieveStream(ctx, req.(*RetrieveStreamRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeviceService_DeleteStream_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteStreamRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServiceServer).DeleteStream(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vmr_proto.DeviceService/DeleteStream",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServiceServer).DeleteStream(ctx, req.(*DeleteStreamRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DeviceService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "vmr_proto.DeviceService",
	HandlerType: (*DeviceServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateStream",
			Handler:    _DeviceService_CreateStream_Handler,
		},
		{
			MethodName: "RetrieveStream",
			Handler:    _DeviceService_RetrieveStream_Handler,
		},
		{
			MethodName: "DeleteStream",
			Handler:    _DeviceService_DeleteStream_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "device.proto",
}
