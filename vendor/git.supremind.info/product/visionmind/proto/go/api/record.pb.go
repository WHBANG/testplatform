// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: record.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type QueryRecordRequest struct {
	DeviceId             string   `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	StartTime            uint64   `protobuf:"varint,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime              uint64   `protobuf:"varint,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryRecordRequest) Reset()         { *m = QueryRecordRequest{} }
func (m *QueryRecordRequest) String() string { return proto.CompactTextString(m) }
func (*QueryRecordRequest) ProtoMessage()    {}
func (*QueryRecordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf94fd919e302a1d, []int{0}
}
func (m *QueryRecordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryRecordRequest.Unmarshal(m, b)
}
func (m *QueryRecordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryRecordRequest.Marshal(b, m, deterministic)
}
func (m *QueryRecordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryRecordRequest.Merge(m, src)
}
func (m *QueryRecordRequest) XXX_Size() int {
	return xxx_messageInfo_QueryRecordRequest.Size(m)
}
func (m *QueryRecordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryRecordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryRecordRequest proto.InternalMessageInfo

func (m *QueryRecordRequest) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func (m *QueryRecordRequest) GetStartTime() uint64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *QueryRecordRequest) GetEndTime() uint64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

type QueryRecordResponse struct {
	Url                  string   `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryRecordResponse) Reset()         { *m = QueryRecordResponse{} }
func (m *QueryRecordResponse) String() string { return proto.CompactTextString(m) }
func (*QueryRecordResponse) ProtoMessage()    {}
func (*QueryRecordResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf94fd919e302a1d, []int{1}
}
func (m *QueryRecordResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryRecordResponse.Unmarshal(m, b)
}
func (m *QueryRecordResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryRecordResponse.Marshal(b, m, deterministic)
}
func (m *QueryRecordResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryRecordResponse.Merge(m, src)
}
func (m *QueryRecordResponse) XXX_Size() int {
	return xxx_messageInfo_QueryRecordResponse.Size(m)
}
func (m *QueryRecordResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryRecordResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryRecordResponse proto.InternalMessageInfo

func (m *QueryRecordResponse) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func init() {
	proto.RegisterType((*QueryRecordRequest)(nil), "vmr_proto.QueryRecordRequest")
	proto.RegisterType((*QueryRecordResponse)(nil), "vmr_proto.QueryRecordResponse")
}

func init() { proto.RegisterFile("record.proto", fileDescriptor_bf94fd919e302a1d) }

var fileDescriptor_bf94fd919e302a1d = []byte{
	// 235 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x8f, 0xc1, 0x4a, 0x03, 0x31,
	0x10, 0x86, 0x59, 0x2b, 0xda, 0x1d, 0x15, 0x24, 0x5e, 0xaa, 0x52, 0x29, 0xbd, 0xd8, 0x53, 0x02,
	0xd5, 0x27, 0xf0, 0x26, 0x78, 0x71, 0xf5, 0x24, 0xc8, 0x52, 0x37, 0xe3, 0x32, 0xe8, 0x66, 0xe2,
	0x24, 0x59, 0xf0, 0xed, 0x65, 0xb3, 0x22, 0x8a, 0xf4, 0xf6, 0xe7, 0xff, 0x92, 0x7c, 0x33, 0x70,
	0x28, 0xd8, 0xb0, 0x58, 0xed, 0x85, 0x23, 0xab, 0xb2, 0xef, 0xa4, 0xce, 0x71, 0xf9, 0x06, 0xea,
	0x3e, 0xa1, 0x7c, 0x56, 0x99, 0x57, 0xf8, 0x91, 0x30, 0x44, 0x75, 0x0e, 0xa5, 0xc5, 0x9e, 0x1a,
	0xac, 0xc9, 0xce, 0x8a, 0x45, 0xb1, 0x2a, 0xab, 0xe9, 0x58, 0xdc, 0x5a, 0x35, 0x07, 0x08, 0x71,
	0x23, 0xb1, 0x8e, 0xd4, 0xe1, 0x6c, 0x67, 0x51, 0xac, 0x76, 0xab, 0x32, 0x37, 0x8f, 0xd4, 0xa1,
	0x3a, 0x85, 0x29, 0x3a, 0x3b, 0xc2, 0x49, 0x86, 0xfb, 0xe8, 0xec, 0x80, 0x96, 0x97, 0x70, 0xf2,
	0x47, 0x16, 0x3c, 0xbb, 0x80, 0xea, 0x18, 0x26, 0x49, 0xde, 0xbf, 0x3d, 0x43, 0x5c, 0x3f, 0xc3,
	0xd1, 0x78, 0xe7, 0x01, 0x65, 0xb0, 0xaa, 0x3b, 0x38, 0xf8, 0xf5, 0x52, 0xcd, 0xf5, 0xcf, 0x06,
	0xfa, 0xff, 0xf8, 0x67, 0x17, 0xdb, 0xf0, 0x28, 0xbc, 0xb9, 0x7e, 0x5a, 0xb7, 0x14, 0x75, 0x48,
	0x5e, 0xb0, 0x23, 0x67, 0x35, 0xb9, 0x57, 0x36, 0x5e, 0xd8, 0xa6, 0x26, 0x9a, 0x9e, 0x02, 0xb1,
	0x1b, 0x7a, 0x93, 0xbf, 0x30, 0x2d, 0x9b, 0x8d, 0xa7, 0x97, 0xbd, 0x7c, 0xba, 0xfa, 0x0a, 0x00,
	0x00, 0xff, 0xff, 0x32, 0x0b, 0xc9, 0xa9, 0x4c, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RecordServiceClient is the client API for RecordService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RecordServiceClient interface {
	QueryRecord(ctx context.Context, in *QueryRecordRequest, opts ...grpc.CallOption) (*QueryRecordResponse, error)
}

type recordServiceClient struct {
	cc *grpc.ClientConn
}

func NewRecordServiceClient(cc *grpc.ClientConn) RecordServiceClient {
	return &recordServiceClient{cc}
}

func (c *recordServiceClient) QueryRecord(ctx context.Context, in *QueryRecordRequest, opts ...grpc.CallOption) (*QueryRecordResponse, error) {
	out := new(QueryRecordResponse)
	err := c.cc.Invoke(ctx, "/vmr_proto.RecordService/QueryRecord", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RecordServiceServer is the server API for RecordService service.
type RecordServiceServer interface {
	QueryRecord(context.Context, *QueryRecordRequest) (*QueryRecordResponse, error)
}

// UnimplementedRecordServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRecordServiceServer struct {
}

func (*UnimplementedRecordServiceServer) QueryRecord(ctx context.Context, req *QueryRecordRequest) (*QueryRecordResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryRecord not implemented")
}

func RegisterRecordServiceServer(s *grpc.Server, srv RecordServiceServer) {
	s.RegisterService(&_RecordService_serviceDesc, srv)
}

func _RecordService_QueryRecord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryRecordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RecordServiceServer).QueryRecord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vmr_proto.RecordService/QueryRecord",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RecordServiceServer).QueryRecord(ctx, req.(*QueryRecordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RecordService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "vmr_proto.RecordService",
	HandlerType: (*RecordServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "QueryRecord",
			Handler:    _RecordService_QueryRecord_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "record.proto",
}
