// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: dataset.proto

package api

import (
	context "context"
	fmt "fmt"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Dataset_ContentType int32

const (
	TypeOther Dataset_ContentType = 0
	TypeImage Dataset_ContentType = 1
	TypeVideo Dataset_ContentType = 2
	TypeAudio Dataset_ContentType = 3
	TypeText  Dataset_ContentType = 4
)

var Dataset_ContentType_name = map[int32]string{
	0: "TypeOther",
	1: "TypeImage",
	2: "TypeVideo",
	3: "TypeAudio",
	4: "TypeText",
}

var Dataset_ContentType_value = map[string]int32{
	"TypeOther": 0,
	"TypeImage": 1,
	"TypeVideo": 2,
	"TypeAudio": 3,
	"TypeText":  4,
}

func (x Dataset_ContentType) String() string {
	return proto.EnumName(Dataset_ContentType_name, int32(x))
}

func (Dataset_ContentType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f69247dc9b20935f, []int{0, 0}
}

type DatasetVersion_State int32

const (
	DV_Unknown  DatasetVersion_State = 0
	DV_Creating DatasetVersion_State = 1
	DV_Ready    DatasetVersion_State = 2
	DV_Failed   DatasetVersion_State = 3
)

var DatasetVersion_State_name = map[int32]string{
	0: "DV_Unknown",
	1: "DV_Creating",
	2: "DV_Ready",
	3: "DV_Failed",
}

var DatasetVersion_State_value = map[string]int32{
	"DV_Unknown":  0,
	"DV_Creating": 1,
	"DV_Ready":    2,
	"DV_Failed":   3,
}

func (x DatasetVersion_State) String() string {
	return proto.EnumName(DatasetVersion_State_name, int32(x))
}

func (DatasetVersion_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f69247dc9b20935f, []int{3, 0}
}

type Dataflow_DeduplicationMethod int32

const (
	Unknown Dataflow_DeduplicationMethod = 0
	MD5     Dataflow_DeduplicationMethod = 1
)

var Dataflow_DeduplicationMethod_name = map[int32]string{
	0: "Unknown",
	1: "MD5",
}

var Dataflow_DeduplicationMethod_value = map[string]int32{
	"Unknown": 0,
	"MD5":     1,
}

func (x Dataflow_DeduplicationMethod) String() string {
	return proto.EnumName(Dataflow_DeduplicationMethod_name, int32(x))
}

func (Dataflow_DeduplicationMethod) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f69247dc9b20935f, []int{7, 0}
}

type Dataset struct {
	*Metadata `protobuf:"bytes,1,opt,name=meta,proto3,embedded=meta" json:"meta,omitempty" bson:",inline"`
	Spec      *DatasetSpec   `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty" bson:"spec"`
	Status    *DatasetStatus `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty" bson:"status,omitempty"`
}

func (m *Dataset) Reset()         { *m = Dataset{} }
func (m *Dataset) String() string { return proto.CompactTextString(m) }
func (*Dataset) ProtoMessage()    {}
func (*Dataset) Descriptor() ([]byte, []int) {
	return fileDescriptor_f69247dc9b20935f, []int{0}
}
func (m *Dataset) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Dataset.Unmarshal(m, b)
}
func (m *Dataset) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Dataset.Marshal(b, m, deterministic)
}
func (m *Dataset) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Dataset.Merge(m, src)
}
func (m *Dataset) XXX_Size() int {
	return xxx_messageInfo_Dataset.Size(m)
}
func (m *Dataset) XXX_DiscardUnknown() {
	xxx_messageInfo_Dataset.DiscardUnknown(m)
}

var xxx_messageInfo_Dataset proto.InternalMessageInfo

func (m *Dataset) GetSpec() *DatasetSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *Dataset) GetStatus() *DatasetStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

type DatasetSpec struct {
	ContentType Dataset_ContentType `protobuf:"varint,1,opt,name=contentType,proto3,enum=apiserver.v2.Dataset_ContentType" json:"contentType,omitempty" bson:"contentType"`
}

func (m *DatasetSpec) Reset()         { *m = DatasetSpec{} }
func (m *DatasetSpec) String() string { return proto.CompactTextString(m) }
func (*DatasetSpec) ProtoMessage()    {}
func (*DatasetSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_f69247dc9b20935f, []int{1}
}
func (m *DatasetSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DatasetSpec.Unmarshal(m, b)
}
func (m *DatasetSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DatasetSpec.Marshal(b, m, deterministic)
}
func (m *DatasetSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DatasetSpec.Merge(m, src)
}
func (m *DatasetSpec) XXX_Size() int {
	return xxx_messageInfo_DatasetSpec.Size(m)
}
func (m *DatasetSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_DatasetSpec.DiscardUnknown(m)
}

var xxx_messageInfo_DatasetSpec proto.InternalMessageInfo

func (m *DatasetSpec) GetContentType() Dataset_ContentType {
	if m != nil {
		return m.ContentType
	}
	return TypeOther
}

type DatasetStatus struct {
	// every time any content of a dataset changes, a new version will be prepended
	// first is the latest
	Versions []*DatasetVersion `protobuf:"bytes,1,rep,name=versions,proto3" json:"versions,omitempty" bson:"versions,omitempty"`
}

func (m *DatasetStatus) Reset()         { *m = DatasetStatus{} }
func (m *DatasetStatus) String() string { return proto.CompactTextString(m) }
func (*DatasetStatus) ProtoMessage()    {}
func (*DatasetStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_f69247dc9b20935f, []int{2}
}
func (m *DatasetStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DatasetStatus.Unmarshal(m, b)
}
func (m *DatasetStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DatasetStatus.Marshal(b, m, deterministic)
}
func (m *DatasetStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DatasetStatus.Merge(m, src)
}
func (m *DatasetStatus) XXX_Size() int {
	return xxx_messageInfo_DatasetStatus.Size(m)
}
func (m *DatasetStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_DatasetStatus.DiscardUnknown(m)
}

var xxx_messageInfo_DatasetStatus proto.InternalMessageInfo

func (m *DatasetStatus) GetVersions() []*DatasetVersion {
	if m != nil {
		return m.Versions
	}
	return nil
}

type DatasetVersion struct {
	*Metadata       `protobuf:"bytes,1,opt,name=meta,proto3,embedded=meta" json:"meta,omitempty" bson:",inline"`
	Parent          string               `protobuf:"bytes,2,opt,name=parent,proto3" json:"parent,omitempty" bson:"parent,omitempty"`
	Statistics      *DataStatistics      `protobuf:"bytes,3,opt,name=statistics,proto3" json:"statistics,omitempty" bson:"statistics,omitempty"`
	State           DatasetVersion_State `protobuf:"varint,4,opt,name=state,proto3,enum=apiserver.v2.DatasetVersion_State" json:"state,omitempty" bson:"state"`
	InvolvedVolumes []*ResourceReference `protobuf:"bytes,5,rep,name=involvedVolumes,proto3" json:"involvedVolumes,omitempty" bson:"involvedVolumes,omitempty"`
}

func (m *DatasetVersion) Reset()         { *m = DatasetVersion{} }
func (m *DatasetVersion) String() string { return proto.CompactTextString(m) }
func (*DatasetVersion) ProtoMessage()    {}
func (*DatasetVersion) Descriptor() ([]byte, []int) {
	return fileDescriptor_f69247dc9b20935f, []int{3}
}
func (m *DatasetVersion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DatasetVersion.Unmarshal(m, b)
}
func (m *DatasetVersion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DatasetVersion.Marshal(b, m, deterministic)
}
func (m *DatasetVersion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DatasetVersion.Merge(m, src)
}
func (m *DatasetVersion) XXX_Size() int {
	return xxx_messageInfo_DatasetVersion.Size(m)
}
func (m *DatasetVersion) XXX_DiscardUnknown() {
	xxx_messageInfo_DatasetVersion.DiscardUnknown(m)
}

var xxx_messageInfo_DatasetVersion proto.InternalMessageInfo

func (m *DatasetVersion) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *DatasetVersion) GetStatistics() *DataStatistics {
	if m != nil {
		return m.Statistics
	}
	return nil
}

func (m *DatasetVersion) GetState() DatasetVersion_State {
	if m != nil {
		return m.State
	}
	return DV_Unknown
}

func (m *DatasetVersion) GetInvolvedVolumes() []*ResourceReference {
	if m != nil {
		return m.InvolvedVolumes
	}
	return nil
}

type DataStatistics struct {
	FilesIncluded int64 `protobuf:"varint,1,opt,name=filesIncluded,proto3" json:"filesIncluded,omitempty" bson:"filesIncluded"`
	ItemsIncluded int64 `protobuf:"varint,2,opt,name=itemsIncluded,proto3" json:"itemsIncluded,omitempty" bson:"itemsIncluded"`
	SizeIncluded  int64 `protobuf:"varint,3,opt,name=sizeIncluded,proto3" json:"sizeIncluded,omitempty" bson:"sizeIncluded"`
}

func (m *DataStatistics) Reset()         { *m = DataStatistics{} }
func (m *DataStatistics) String() string { return proto.CompactTextString(m) }
func (*DataStatistics) ProtoMessage()    {}
func (*DataStatistics) Descriptor() ([]byte, []int) {
	return fileDescriptor_f69247dc9b20935f, []int{4}
}
func (m *DataStatistics) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataStatistics.Unmarshal(m, b)
}
func (m *DataStatistics) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataStatistics.Marshal(b, m, deterministic)
}
func (m *DataStatistics) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataStatistics.Merge(m, src)
}
func (m *DataStatistics) XXX_Size() int {
	return xxx_messageInfo_DataStatistics.Size(m)
}
func (m *DataStatistics) XXX_DiscardUnknown() {
	xxx_messageInfo_DataStatistics.DiscardUnknown(m)
}

var xxx_messageInfo_DataStatistics proto.InternalMessageInfo

func (m *DataStatistics) GetFilesIncluded() int64 {
	if m != nil {
		return m.FilesIncluded
	}
	return 0
}

func (m *DataStatistics) GetItemsIncluded() int64 {
	if m != nil {
		return m.ItemsIncluded
	}
	return 0
}

func (m *DataStatistics) GetSizeIncluded() int64 {
	if m != nil {
		return m.SizeIncluded
	}
	return 0
}

// metadata about raw data
type DatumMeta struct {
	// deprecated, use volumeRef instead
	Volume        string             `protobuf:"bytes,1,opt,name=volume,proto3" json:"volume,omitempty"`
	Key           string             `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	ContentLength uint64             `protobuf:"varint,3,opt,name=contentLength,proto3" json:"contentLength,omitempty"`
	Tags          map[string]string  `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	VolumeRef     *ResourceReference `protobuf:"bytes,5,opt,name=volumeRef,proto3" json:"volumeRef,omitempty"`
	Uri           string             `protobuf:"bytes,6,opt,name=uri,proto3" json:"uri,omitempty"`
}

func (m *DatumMeta) Reset()         { *m = DatumMeta{} }
func (m *DatumMeta) String() string { return proto.CompactTextString(m) }
func (*DatumMeta) ProtoMessage()    {}
func (*DatumMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_f69247dc9b20935f, []int{5}
}
func (m *DatumMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DatumMeta.Unmarshal(m, b)
}
func (m *DatumMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DatumMeta.Marshal(b, m, deterministic)
}
func (m *DatumMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DatumMeta.Merge(m, src)
}
func (m *DatumMeta) XXX_Size() int {
	return xxx_messageInfo_DatumMeta.Size(m)
}
func (m *DatumMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_DatumMeta.DiscardUnknown(m)
}

var xxx_messageInfo_DatumMeta proto.InternalMessageInfo

func (m *DatumMeta) GetVolume() string {
	if m != nil {
		return m.Volume
	}
	return ""
}

func (m *DatumMeta) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *DatumMeta) GetContentLength() uint64 {
	if m != nil {
		return m.ContentLength
	}
	return 0
}

func (m *DatumMeta) GetTags() map[string]string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *DatumMeta) GetVolumeRef() *ResourceReference {
	if m != nil {
		return m.VolumeRef
	}
	return nil
}

func (m *DatumMeta) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

type DataItem struct {
	Id          string                   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Metas       []*DatumMeta             `protobuf:"bytes,2,rep,name=metas,proto3" json:"metas,omitempty"`
	Annotations map[string]*types.Struct `protobuf:"bytes,3,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (m *DataItem) Reset()         { *m = DataItem{} }
func (m *DataItem) String() string { return proto.CompactTextString(m) }
func (*DataItem) ProtoMessage()    {}
func (*DataItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_f69247dc9b20935f, []int{6}
}
func (m *DataItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataItem.Unmarshal(m, b)
}
func (m *DataItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataItem.Marshal(b, m, deterministic)
}
func (m *DataItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataItem.Merge(m, src)
}
func (m *DataItem) XXX_Size() int {
	return xxx_messageInfo_DataItem.Size(m)
}
func (m *DataItem) XXX_DiscardUnknown() {
	xxx_messageInfo_DataItem.DiscardUnknown(m)
}

var xxx_messageInfo_DataItem proto.InternalMessageInfo

func (m *DataItem) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DataItem) GetMetas() []*DatumMeta {
	if m != nil {
		return m.Metas
	}
	return nil
}

func (m *DataItem) GetAnnotations() map[string]*types.Struct {
	if m != nil {
		return m.Annotations
	}
	return nil
}

// dataset workflow
type Dataflow struct {
	Version *DatasetVersion  `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Params  *Dataflow_Params `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	// generated raw data will be uploaded to specified volume with prefix
	UploadVolume *ResourceReference `protobuf:"bytes,3,opt,name=uploadVolume,proto3" json:"uploadVolume,omitempty"`
	UploadPrefix string             `protobuf:"bytes,4,opt,name=uploadPrefix,proto3" json:"uploadPrefix,omitempty"`
}

func (m *Dataflow) Reset()         { *m = Dataflow{} }
func (m *Dataflow) String() string { return proto.CompactTextString(m) }
func (*Dataflow) ProtoMessage()    {}
func (*Dataflow) Descriptor() ([]byte, []int) {
	return fileDescriptor_f69247dc9b20935f, []int{7}
}
func (m *Dataflow) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Dataflow.Unmarshal(m, b)
}
func (m *Dataflow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Dataflow.Marshal(b, m, deterministic)
}
func (m *Dataflow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Dataflow.Merge(m, src)
}
func (m *Dataflow) XXX_Size() int {
	return xxx_messageInfo_Dataflow.Size(m)
}
func (m *Dataflow) XXX_DiscardUnknown() {
	xxx_messageInfo_Dataflow.DiscardUnknown(m)
}

var xxx_messageInfo_Dataflow proto.InternalMessageInfo

func (m *Dataflow) GetVersion() *DatasetVersion {
	if m != nil {
		return m.Version
	}
	return nil
}

func (m *Dataflow) GetParams() *Dataflow_Params {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *Dataflow) GetUploadVolume() *ResourceReference {
	if m != nil {
		return m.UploadVolume
	}
	return nil
}

func (m *Dataflow) GetUploadPrefix() string {
	if m != nil {
		return m.UploadPrefix
	}
	return ""
}

// inner names
type Dataflow_Params struct {
	Filtering     *Dataflow_Filtering     `protobuf:"bytes,1,opt,name=filtering,proto3" json:"filtering,omitempty"`
	Deduplication *Dataflow_Deduplication `protobuf:"bytes,2,opt,name=deduplication,proto3" json:"deduplication,omitempty"`
	Formatting    *Dataflow_Formatting    `protobuf:"bytes,3,opt,name=formatting,proto3" json:"formatting,omitempty"`
}

func (m *Dataflow_Params) Reset()         { *m = Dataflow_Params{} }
func (m *Dataflow_Params) String() string { return proto.CompactTextString(m) }
func (*Dataflow_Params) ProtoMessage()    {}
func (*Dataflow_Params) Descriptor() ([]byte, []int) {
	return fileDescriptor_f69247dc9b20935f, []int{7, 0}
}
func (m *Dataflow_Params) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Dataflow_Params.Unmarshal(m, b)
}
func (m *Dataflow_Params) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Dataflow_Params.Marshal(b, m, deterministic)
}
func (m *Dataflow_Params) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Dataflow_Params.Merge(m, src)
}
func (m *Dataflow_Params) XXX_Size() int {
	return xxx_messageInfo_Dataflow_Params.Size(m)
}
func (m *Dataflow_Params) XXX_DiscardUnknown() {
	xxx_messageInfo_Dataflow_Params.DiscardUnknown(m)
}

var xxx_messageInfo_Dataflow_Params proto.InternalMessageInfo

func (m *Dataflow_Params) GetFiltering() *Dataflow_Filtering {
	if m != nil {
		return m.Filtering
	}
	return nil
}

func (m *Dataflow_Params) GetDeduplication() *Dataflow_Deduplication {
	if m != nil {
		return m.Deduplication
	}
	return nil
}

func (m *Dataflow_Params) GetFormatting() *Dataflow_Formatting {
	if m != nil {
		return m.Formatting
	}
	return nil
}

type Dataflow_Filtering struct {
	Resolution *Dataflow_Resolution `protobuf:"bytes,1,opt,name=resolution,proto3" json:"resolution,omitempty"`
	Duration   *Dataflow_Range      `protobuf:"bytes,2,opt,name=duration,proto3" json:"duration,omitempty"`
	FileSize   *Dataflow_Range      `protobuf:"bytes,3,opt,name=fileSize,proto3" json:"fileSize,omitempty"`
}

func (m *Dataflow_Filtering) Reset()         { *m = Dataflow_Filtering{} }
func (m *Dataflow_Filtering) String() string { return proto.CompactTextString(m) }
func (*Dataflow_Filtering) ProtoMessage()    {}
func (*Dataflow_Filtering) Descriptor() ([]byte, []int) {
	return fileDescriptor_f69247dc9b20935f, []int{7, 1}
}
func (m *Dataflow_Filtering) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Dataflow_Filtering.Unmarshal(m, b)
}
func (m *Dataflow_Filtering) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Dataflow_Filtering.Marshal(b, m, deterministic)
}
func (m *Dataflow_Filtering) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Dataflow_Filtering.Merge(m, src)
}
func (m *Dataflow_Filtering) XXX_Size() int {
	return xxx_messageInfo_Dataflow_Filtering.Size(m)
}
func (m *Dataflow_Filtering) XXX_DiscardUnknown() {
	xxx_messageInfo_Dataflow_Filtering.DiscardUnknown(m)
}

var xxx_messageInfo_Dataflow_Filtering proto.InternalMessageInfo

func (m *Dataflow_Filtering) GetResolution() *Dataflow_Resolution {
	if m != nil {
		return m.Resolution
	}
	return nil
}

func (m *Dataflow_Filtering) GetDuration() *Dataflow_Range {
	if m != nil {
		return m.Duration
	}
	return nil
}

func (m *Dataflow_Filtering) GetFileSize() *Dataflow_Range {
	if m != nil {
		return m.FileSize
	}
	return nil
}

type Dataflow_Resolution struct {
	Width  *Dataflow_Range `protobuf:"bytes,1,opt,name=width,proto3" json:"width,omitempty"`
	Height *Dataflow_Range `protobuf:"bytes,2,opt,name=height,proto3" json:"height,omitempty"`
}

func (m *Dataflow_Resolution) Reset()         { *m = Dataflow_Resolution{} }
func (m *Dataflow_Resolution) String() string { return proto.CompactTextString(m) }
func (*Dataflow_Resolution) ProtoMessage()    {}
func (*Dataflow_Resolution) Descriptor() ([]byte, []int) {
	return fileDescriptor_f69247dc9b20935f, []int{7, 2}
}
func (m *Dataflow_Resolution) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Dataflow_Resolution.Unmarshal(m, b)
}
func (m *Dataflow_Resolution) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Dataflow_Resolution.Marshal(b, m, deterministic)
}
func (m *Dataflow_Resolution) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Dataflow_Resolution.Merge(m, src)
}
func (m *Dataflow_Resolution) XXX_Size() int {
	return xxx_messageInfo_Dataflow_Resolution.Size(m)
}
func (m *Dataflow_Resolution) XXX_DiscardUnknown() {
	xxx_messageInfo_Dataflow_Resolution.DiscardUnknown(m)
}

var xxx_messageInfo_Dataflow_Resolution proto.InternalMessageInfo

func (m *Dataflow_Resolution) GetWidth() *Dataflow_Range {
	if m != nil {
		return m.Width
	}
	return nil
}

func (m *Dataflow_Resolution) GetHeight() *Dataflow_Range {
	if m != nil {
		return m.Height
	}
	return nil
}

type Dataflow_Range struct {
	Max int64 `protobuf:"varint,1,opt,name=max,proto3" json:"max,omitempty"`
	Min int64 `protobuf:"varint,2,opt,name=min,proto3" json:"min,omitempty"`
}

func (m *Dataflow_Range) Reset()         { *m = Dataflow_Range{} }
func (m *Dataflow_Range) String() string { return proto.CompactTextString(m) }
func (*Dataflow_Range) ProtoMessage()    {}
func (*Dataflow_Range) Descriptor() ([]byte, []int) {
	return fileDescriptor_f69247dc9b20935f, []int{7, 3}
}
func (m *Dataflow_Range) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Dataflow_Range.Unmarshal(m, b)
}
func (m *Dataflow_Range) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Dataflow_Range.Marshal(b, m, deterministic)
}
func (m *Dataflow_Range) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Dataflow_Range.Merge(m, src)
}
func (m *Dataflow_Range) XXX_Size() int {
	return xxx_messageInfo_Dataflow_Range.Size(m)
}
func (m *Dataflow_Range) XXX_DiscardUnknown() {
	xxx_messageInfo_Dataflow_Range.DiscardUnknown(m)
}

var xxx_messageInfo_Dataflow_Range proto.InternalMessageInfo

func (m *Dataflow_Range) GetMax() int64 {
	if m != nil {
		return m.Max
	}
	return 0
}

func (m *Dataflow_Range) GetMin() int64 {
	if m != nil {
		return m.Min
	}
	return 0
}

type Dataflow_Deduplication struct {
	Method Dataflow_DeduplicationMethod `protobuf:"varint,1,opt,name=method,proto3,enum=apiserver.v2.Dataflow_DeduplicationMethod" json:"method,omitempty"`
}

func (m *Dataflow_Deduplication) Reset()         { *m = Dataflow_Deduplication{} }
func (m *Dataflow_Deduplication) String() string { return proto.CompactTextString(m) }
func (*Dataflow_Deduplication) ProtoMessage()    {}
func (*Dataflow_Deduplication) Descriptor() ([]byte, []int) {
	return fileDescriptor_f69247dc9b20935f, []int{7, 4}
}
func (m *Dataflow_Deduplication) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Dataflow_Deduplication.Unmarshal(m, b)
}
func (m *Dataflow_Deduplication) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Dataflow_Deduplication.Marshal(b, m, deterministic)
}
func (m *Dataflow_Deduplication) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Dataflow_Deduplication.Merge(m, src)
}
func (m *Dataflow_Deduplication) XXX_Size() int {
	return xxx_messageInfo_Dataflow_Deduplication.Size(m)
}
func (m *Dataflow_Deduplication) XXX_DiscardUnknown() {
	xxx_messageInfo_Dataflow_Deduplication.DiscardUnknown(m)
}

var xxx_messageInfo_Dataflow_Deduplication proto.InternalMessageInfo

func (m *Dataflow_Deduplication) GetMethod() Dataflow_DeduplicationMethod {
	if m != nil {
		return m.Method
	}
	return Unknown
}

type Dataflow_Formatting struct {
	// supported formats
	//  - image:
	//    - jpeg
	//    - png
	//  - video:
	//    - mp4
	//  - audio:
	//    - mp3
	//  - text:
	//    - utf-8
	TargetFormats []string `protobuf:"bytes,1,rep,name=targetFormats,proto3" json:"targetFormats,omitempty"`
}

func (m *Dataflow_Formatting) Reset()         { *m = Dataflow_Formatting{} }
func (m *Dataflow_Formatting) String() string { return proto.CompactTextString(m) }
func (*Dataflow_Formatting) ProtoMessage()    {}
func (*Dataflow_Formatting) Descriptor() ([]byte, []int) {
	return fileDescriptor_f69247dc9b20935f, []int{7, 5}
}
func (m *Dataflow_Formatting) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Dataflow_Formatting.Unmarshal(m, b)
}
func (m *Dataflow_Formatting) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Dataflow_Formatting.Marshal(b, m, deterministic)
}
func (m *Dataflow_Formatting) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Dataflow_Formatting.Merge(m, src)
}
func (m *Dataflow_Formatting) XXX_Size() int {
	return xxx_messageInfo_Dataflow_Formatting.Size(m)
}
func (m *Dataflow_Formatting) XXX_DiscardUnknown() {
	xxx_messageInfo_Dataflow_Formatting.DiscardUnknown(m)
}

var xxx_messageInfo_Dataflow_Formatting proto.InternalMessageInfo

func (m *Dataflow_Formatting) GetTargetFormats() []string {
	if m != nil {
		return m.TargetFormats
	}
	return nil
}

type CreateDatasetReq struct {
	Dataset *Dataset `protobuf:"bytes,1,opt,name=dataset,proto3" json:"dataset,omitempty"`
}

func (m *CreateDatasetReq) Reset()         { *m = CreateDatasetReq{} }
func (m *CreateDatasetReq) String() string { return proto.CompactTextString(m) }
func (*CreateDatasetReq) ProtoMessage()    {}
func (*CreateDatasetReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_f69247dc9b20935f, []int{8}
}
func (m *CreateDatasetReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateDatasetReq.Unmarshal(m, b)
}
func (m *CreateDatasetReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateDatasetReq.Marshal(b, m, deterministic)
}
func (m *CreateDatasetReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateDatasetReq.Merge(m, src)
}
func (m *CreateDatasetReq) XXX_Size() int {
	return xxx_messageInfo_CreateDatasetReq.Size(m)
}
func (m *CreateDatasetReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateDatasetReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateDatasetReq proto.InternalMessageInfo

func (m *CreateDatasetReq) GetDataset() *Dataset {
	if m != nil {
		return m.Dataset
	}
	return nil
}

type GetDatasetReq struct {
	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Creator string `protobuf:"bytes,2,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *GetDatasetReq) Reset()         { *m = GetDatasetReq{} }
func (m *GetDatasetReq) String() string { return proto.CompactTextString(m) }
func (*GetDatasetReq) ProtoMessage()    {}
func (*GetDatasetReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_f69247dc9b20935f, []int{9}
}
func (m *GetDatasetReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDatasetReq.Unmarshal(m, b)
}
func (m *GetDatasetReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDatasetReq.Marshal(b, m, deterministic)
}
func (m *GetDatasetReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDatasetReq.Merge(m, src)
}
func (m *GetDatasetReq) XXX_Size() int {
	return xxx_messageInfo_GetDatasetReq.Size(m)
}
func (m *GetDatasetReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDatasetReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetDatasetReq proto.InternalMessageInfo

func (m *GetDatasetReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetDatasetReq) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

type ListDatasetsReq struct {
	Creator     string              `protobuf:"bytes,2,opt,name=creator,proto3" json:"creator,omitempty"`
	ContentType Dataset_ContentType `protobuf:"varint,3,opt,name=contentType,proto3,enum=apiserver.v2.Dataset_ContentType" json:"contentType,omitempty"`
	Options     *ListOptions        `protobuf:"bytes,5,opt,name=options,proto3" json:"options,omitempty"`
	Pager       *PagerReq           `protobuf:"bytes,6,opt,name=pager,proto3" json:"pager,omitempty"`
	// deprecated, use listOptions instead
	Op Operation `protobuf:"varint,4,opt,name=op,proto3,enum=apiserver.v2.Operation" json:"op,omitempty"`
}

func (m *ListDatasetsReq) Reset()         { *m = ListDatasetsReq{} }
func (m *ListDatasetsReq) String() string { return proto.CompactTextString(m) }
func (*ListDatasetsReq) ProtoMessage()    {}
func (*ListDatasetsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_f69247dc9b20935f, []int{10}
}
func (m *ListDatasetsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDatasetsReq.Unmarshal(m, b)
}
func (m *ListDatasetsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDatasetsReq.Marshal(b, m, deterministic)
}
func (m *ListDatasetsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDatasetsReq.Merge(m, src)
}
func (m *ListDatasetsReq) XXX_Size() int {
	return xxx_messageInfo_ListDatasetsReq.Size(m)
}
func (m *ListDatasetsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDatasetsReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListDatasetsReq proto.InternalMessageInfo

func (m *ListDatasetsReq) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *ListDatasetsReq) GetContentType() Dataset_ContentType {
	if m != nil {
		return m.ContentType
	}
	return TypeOther
}

func (m *ListDatasetsReq) GetOptions() *ListOptions {
	if m != nil {
		return m.Options
	}
	return nil
}

func (m *ListDatasetsReq) GetPager() *PagerReq {
	if m != nil {
		return m.Pager
	}
	return nil
}

func (m *ListDatasetsReq) GetOp() Operation {
	if m != nil {
		return m.Op
	}
	return Operation_None
}

type ListDatasetsRes struct {
	Datasets []*Dataset `protobuf:"bytes,1,rep,name=datasets,proto3" json:"datasets,omitempty"`
	Pager    *PagerRes  `protobuf:"bytes,3,opt,name=pager,proto3" json:"pager,omitempty"`
}

func (m *ListDatasetsRes) Reset()         { *m = ListDatasetsRes{} }
func (m *ListDatasetsRes) String() string { return proto.CompactTextString(m) }
func (*ListDatasetsRes) ProtoMessage()    {}
func (*ListDatasetsRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_f69247dc9b20935f, []int{11}
}
func (m *ListDatasetsRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDatasetsRes.Unmarshal(m, b)
}
func (m *ListDatasetsRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDatasetsRes.Marshal(b, m, deterministic)
}
func (m *ListDatasetsRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDatasetsRes.Merge(m, src)
}
func (m *ListDatasetsRes) XXX_Size() int {
	return xxx_messageInfo_ListDatasetsRes.Size(m)
}
func (m *ListDatasetsRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDatasetsRes.DiscardUnknown(m)
}

var xxx_messageInfo_ListDatasetsRes proto.InternalMessageInfo

func (m *ListDatasetsRes) GetDatasets() []*Dataset {
	if m != nil {
		return m.Datasets
	}
	return nil
}

func (m *ListDatasetsRes) GetPager() *PagerRes {
	if m != nil {
		return m.Pager
	}
	return nil
}

type RemoveDatasetReq struct {
	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Creator string `protobuf:"bytes,2,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *RemoveDatasetReq) Reset()         { *m = RemoveDatasetReq{} }
func (m *RemoveDatasetReq) String() string { return proto.CompactTextString(m) }
func (*RemoveDatasetReq) ProtoMessage()    {}
func (*RemoveDatasetReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_f69247dc9b20935f, []int{12}
}
func (m *RemoveDatasetReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveDatasetReq.Unmarshal(m, b)
}
func (m *RemoveDatasetReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveDatasetReq.Marshal(b, m, deterministic)
}
func (m *RemoveDatasetReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveDatasetReq.Merge(m, src)
}
func (m *RemoveDatasetReq) XXX_Size() int {
	return xxx_messageInfo_RemoveDatasetReq.Size(m)
}
func (m *RemoveDatasetReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveDatasetReq.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveDatasetReq proto.InternalMessageInfo

func (m *RemoveDatasetReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RemoveDatasetReq) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

type DatasetVersionRef struct {
	Dataset string `protobuf:"bytes,1,opt,name=dataset,proto3" json:"dataset,omitempty"`
	Creator string `protobuf:"bytes,2,opt,name=creator,proto3" json:"creator,omitempty"`
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (m *DatasetVersionRef) Reset()         { *m = DatasetVersionRef{} }
func (m *DatasetVersionRef) String() string { return proto.CompactTextString(m) }
func (*DatasetVersionRef) ProtoMessage()    {}
func (*DatasetVersionRef) Descriptor() ([]byte, []int) {
	return fileDescriptor_f69247dc9b20935f, []int{13}
}
func (m *DatasetVersionRef) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DatasetVersionRef.Unmarshal(m, b)
}
func (m *DatasetVersionRef) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DatasetVersionRef.Marshal(b, m, deterministic)
}
func (m *DatasetVersionRef) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DatasetVersionRef.Merge(m, src)
}
func (m *DatasetVersionRef) XXX_Size() int {
	return xxx_messageInfo_DatasetVersionRef.Size(m)
}
func (m *DatasetVersionRef) XXX_DiscardUnknown() {
	xxx_messageInfo_DatasetVersionRef.DiscardUnknown(m)
}

var xxx_messageInfo_DatasetVersionRef proto.InternalMessageInfo

func (m *DatasetVersionRef) GetDataset() string {
	if m != nil {
		return m.Dataset
	}
	return ""
}

func (m *DatasetVersionRef) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *DatasetVersionRef) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type DatasetVersionChange struct {
	*DatasetVersionRef `protobuf:"bytes,1,opt,name=DatasetVersionRef,proto3,embedded=DatasetVersionRef" json:"DatasetVersionRef,omitempty"`
	Parent             string `protobuf:"bytes,2,opt,name=parent,proto3" json:"parent,omitempty"`
}

func (m *DatasetVersionChange) Reset()         { *m = DatasetVersionChange{} }
func (m *DatasetVersionChange) String() string { return proto.CompactTextString(m) }
func (*DatasetVersionChange) ProtoMessage()    {}
func (*DatasetVersionChange) Descriptor() ([]byte, []int) {
	return fileDescriptor_f69247dc9b20935f, []int{14}
}
func (m *DatasetVersionChange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DatasetVersionChange.Unmarshal(m, b)
}
func (m *DatasetVersionChange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DatasetVersionChange.Marshal(b, m, deterministic)
}
func (m *DatasetVersionChange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DatasetVersionChange.Merge(m, src)
}
func (m *DatasetVersionChange) XXX_Size() int {
	return xxx_messageInfo_DatasetVersionChange.Size(m)
}
func (m *DatasetVersionChange) XXX_DiscardUnknown() {
	xxx_messageInfo_DatasetVersionChange.DiscardUnknown(m)
}

var xxx_messageInfo_DatasetVersionChange proto.InternalMessageInfo

func (m *DatasetVersionChange) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

type ListDataItemsReq struct {
	DatasetVersion *DatasetVersionRef `protobuf:"bytes,1,opt,name=datasetVersion,proto3" json:"datasetVersion,omitempty"`
}

func (m *ListDataItemsReq) Reset()         { *m = ListDataItemsReq{} }
func (m *ListDataItemsReq) String() string { return proto.CompactTextString(m) }
func (*ListDataItemsReq) ProtoMessage()    {}
func (*ListDataItemsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_f69247dc9b20935f, []int{15}
}
func (m *ListDataItemsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDataItemsReq.Unmarshal(m, b)
}
func (m *ListDataItemsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDataItemsReq.Marshal(b, m, deterministic)
}
func (m *ListDataItemsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDataItemsReq.Merge(m, src)
}
func (m *ListDataItemsReq) XXX_Size() int {
	return xxx_messageInfo_ListDataItemsReq.Size(m)
}
func (m *ListDataItemsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDataItemsReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListDataItemsReq proto.InternalMessageInfo

func (m *ListDataItemsReq) GetDatasetVersion() *DatasetVersionRef {
	if m != nil {
		return m.DatasetVersion
	}
	return nil
}

type AppendDataItemReq struct {
	Version *DatasetVersion `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Datum   *DataItem       `protobuf:"bytes,2,opt,name=datum,proto3" json:"datum,omitempty"`
}

func (m *AppendDataItemReq) Reset()         { *m = AppendDataItemReq{} }
func (m *AppendDataItemReq) String() string { return proto.CompactTextString(m) }
func (*AppendDataItemReq) ProtoMessage()    {}
func (*AppendDataItemReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_f69247dc9b20935f, []int{16}
}
func (m *AppendDataItemReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppendDataItemReq.Unmarshal(m, b)
}
func (m *AppendDataItemReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppendDataItemReq.Marshal(b, m, deterministic)
}
func (m *AppendDataItemReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppendDataItemReq.Merge(m, src)
}
func (m *AppendDataItemReq) XXX_Size() int {
	return xxx_messageInfo_AppendDataItemReq.Size(m)
}
func (m *AppendDataItemReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AppendDataItemReq.DiscardUnknown(m)
}

var xxx_messageInfo_AppendDataItemReq proto.InternalMessageInfo

func (m *AppendDataItemReq) GetVersion() *DatasetVersion {
	if m != nil {
		return m.Version
	}
	return nil
}

func (m *AppendDataItemReq) GetDatum() *DataItem {
	if m != nil {
		return m.Datum
	}
	return nil
}

type AppendDataItemsRes struct {
	NumAppended int64           `protobuf:"varint,1,opt,name=numAppended,proto3" json:"numAppended,omitempty"`
	Latest      *DatasetVersion `protobuf:"bytes,2,opt,name=latest,proto3" json:"latest,omitempty"`
}

func (m *AppendDataItemsRes) Reset()         { *m = AppendDataItemsRes{} }
func (m *AppendDataItemsRes) String() string { return proto.CompactTextString(m) }
func (*AppendDataItemsRes) ProtoMessage()    {}
func (*AppendDataItemsRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_f69247dc9b20935f, []int{17}
}
func (m *AppendDataItemsRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppendDataItemsRes.Unmarshal(m, b)
}
func (m *AppendDataItemsRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppendDataItemsRes.Marshal(b, m, deterministic)
}
func (m *AppendDataItemsRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppendDataItemsRes.Merge(m, src)
}
func (m *AppendDataItemsRes) XXX_Size() int {
	return xxx_messageInfo_AppendDataItemsRes.Size(m)
}
func (m *AppendDataItemsRes) XXX_DiscardUnknown() {
	xxx_messageInfo_AppendDataItemsRes.DiscardUnknown(m)
}

var xxx_messageInfo_AppendDataItemsRes proto.InternalMessageInfo

func (m *AppendDataItemsRes) GetNumAppended() int64 {
	if m != nil {
		return m.NumAppended
	}
	return 0
}

func (m *AppendDataItemsRes) GetLatest() *DatasetVersion {
	if m != nil {
		return m.Latest
	}
	return nil
}

type CreateDatasetVersionReq struct {
	Version     *DatasetVersion `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	CloneParent bool            `protobuf:"varint,2,opt,name=cloneParent,proto3" json:"cloneParent,omitempty"`
}

func (m *CreateDatasetVersionReq) Reset()         { *m = CreateDatasetVersionReq{} }
func (m *CreateDatasetVersionReq) String() string { return proto.CompactTextString(m) }
func (*CreateDatasetVersionReq) ProtoMessage()    {}
func (*CreateDatasetVersionReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_f69247dc9b20935f, []int{18}
}
func (m *CreateDatasetVersionReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateDatasetVersionReq.Unmarshal(m, b)
}
func (m *CreateDatasetVersionReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateDatasetVersionReq.Marshal(b, m, deterministic)
}
func (m *CreateDatasetVersionReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateDatasetVersionReq.Merge(m, src)
}
func (m *CreateDatasetVersionReq) XXX_Size() int {
	return xxx_messageInfo_CreateDatasetVersionReq.Size(m)
}
func (m *CreateDatasetVersionReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateDatasetVersionReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateDatasetVersionReq proto.InternalMessageInfo

func (m *CreateDatasetVersionReq) GetVersion() *DatasetVersion {
	if m != nil {
		return m.Version
	}
	return nil
}

func (m *CreateDatasetVersionReq) GetCloneParent() bool {
	if m != nil {
		return m.CloneParent
	}
	return false
}

type PushToDatasetVersionReq struct {
	Version   *DatasetVersion `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	DataItems []*DataItem     `protobuf:"bytes,2,rep,name=dataItems,proto3" json:"dataItems,omitempty"`
}

func (m *PushToDatasetVersionReq) Reset()         { *m = PushToDatasetVersionReq{} }
func (m *PushToDatasetVersionReq) String() string { return proto.CompactTextString(m) }
func (*PushToDatasetVersionReq) ProtoMessage()    {}
func (*PushToDatasetVersionReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_f69247dc9b20935f, []int{19}
}
func (m *PushToDatasetVersionReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushToDatasetVersionReq.Unmarshal(m, b)
}
func (m *PushToDatasetVersionReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushToDatasetVersionReq.Marshal(b, m, deterministic)
}
func (m *PushToDatasetVersionReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushToDatasetVersionReq.Merge(m, src)
}
func (m *PushToDatasetVersionReq) XXX_Size() int {
	return xxx_messageInfo_PushToDatasetVersionReq.Size(m)
}
func (m *PushToDatasetVersionReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PushToDatasetVersionReq.DiscardUnknown(m)
}

var xxx_messageInfo_PushToDatasetVersionReq proto.InternalMessageInfo

func (m *PushToDatasetVersionReq) GetVersion() *DatasetVersion {
	if m != nil {
		return m.Version
	}
	return nil
}

func (m *PushToDatasetVersionReq) GetDataItems() []*DataItem {
	if m != nil {
		return m.DataItems
	}
	return nil
}

type FinalizeDatasetVersionReq struct {
	Version *DatasetVersion `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
}

func (m *FinalizeDatasetVersionReq) Reset()         { *m = FinalizeDatasetVersionReq{} }
func (m *FinalizeDatasetVersionReq) String() string { return proto.CompactTextString(m) }
func (*FinalizeDatasetVersionReq) ProtoMessage()    {}
func (*FinalizeDatasetVersionReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_f69247dc9b20935f, []int{20}
}
func (m *FinalizeDatasetVersionReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FinalizeDatasetVersionReq.Unmarshal(m, b)
}
func (m *FinalizeDatasetVersionReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FinalizeDatasetVersionReq.Marshal(b, m, deterministic)
}
func (m *FinalizeDatasetVersionReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FinalizeDatasetVersionReq.Merge(m, src)
}
func (m *FinalizeDatasetVersionReq) XXX_Size() int {
	return xxx_messageInfo_FinalizeDatasetVersionReq.Size(m)
}
func (m *FinalizeDatasetVersionReq) XXX_DiscardUnknown() {
	xxx_messageInfo_FinalizeDatasetVersionReq.DiscardUnknown(m)
}

var xxx_messageInfo_FinalizeDatasetVersionReq proto.InternalMessageInfo

func (m *FinalizeDatasetVersionReq) GetVersion() *DatasetVersion {
	if m != nil {
		return m.Version
	}
	return nil
}

type SearchDataItemsReq struct {
	Filter *DataItemFilter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (m *SearchDataItemsReq) Reset()         { *m = SearchDataItemsReq{} }
func (m *SearchDataItemsReq) String() string { return proto.CompactTextString(m) }
func (*SearchDataItemsReq) ProtoMessage()    {}
func (*SearchDataItemsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_f69247dc9b20935f, []int{21}
}
func (m *SearchDataItemsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchDataItemsReq.Unmarshal(m, b)
}
func (m *SearchDataItemsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchDataItemsReq.Marshal(b, m, deterministic)
}
func (m *SearchDataItemsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchDataItemsReq.Merge(m, src)
}
func (m *SearchDataItemsReq) XXX_Size() int {
	return xxx_messageInfo_SearchDataItemsReq.Size(m)
}
func (m *SearchDataItemsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchDataItemsReq.DiscardUnknown(m)
}

var xxx_messageInfo_SearchDataItemsReq proto.InternalMessageInfo

func (m *SearchDataItemsReq) GetFilter() *DataItemFilter {
	if m != nil {
		return m.Filter
	}
	return nil
}

type DataItemFilter struct {
	InDatasets    []*DatasetVersionRef `protobuf:"bytes,1,rep,name=inDatasets,proto3" json:"inDatasets,omitempty"`
	ByTags        map[string]string    `protobuf:"bytes,2,rep,name=byTags,proto3" json:"byTags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	CreatedAfter  *types.Timestamp     `protobuf:"bytes,3,opt,name=createdAfter,proto3" json:"createdAfter,omitempty"`
	CreatedBefore *types.Timestamp     `protobuf:"bytes,4,opt,name=createdBefore,proto3" json:"createdBefore,omitempty"`
}

func (m *DataItemFilter) Reset()         { *m = DataItemFilter{} }
func (m *DataItemFilter) String() string { return proto.CompactTextString(m) }
func (*DataItemFilter) ProtoMessage()    {}
func (*DataItemFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_f69247dc9b20935f, []int{22}
}
func (m *DataItemFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataItemFilter.Unmarshal(m, b)
}
func (m *DataItemFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataItemFilter.Marshal(b, m, deterministic)
}
func (m *DataItemFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataItemFilter.Merge(m, src)
}
func (m *DataItemFilter) XXX_Size() int {
	return xxx_messageInfo_DataItemFilter.Size(m)
}
func (m *DataItemFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_DataItemFilter.DiscardUnknown(m)
}

var xxx_messageInfo_DataItemFilter proto.InternalMessageInfo

func (m *DataItemFilter) GetInDatasets() []*DatasetVersionRef {
	if m != nil {
		return m.InDatasets
	}
	return nil
}

func (m *DataItemFilter) GetByTags() map[string]string {
	if m != nil {
		return m.ByTags
	}
	return nil
}

func (m *DataItemFilter) GetCreatedAfter() *types.Timestamp {
	if m != nil {
		return m.CreatedAfter
	}
	return nil
}

func (m *DataItemFilter) GetCreatedBefore() *types.Timestamp {
	if m != nil {
		return m.CreatedBefore
	}
	return nil
}

func init() {
	proto.RegisterEnum("apiserver.v2.Dataset_ContentType", Dataset_ContentType_name, Dataset_ContentType_value)
	proto.RegisterEnum("apiserver.v2.DatasetVersion_State", DatasetVersion_State_name, DatasetVersion_State_value)
	proto.RegisterEnum("apiserver.v2.Dataflow_DeduplicationMethod", Dataflow_DeduplicationMethod_name, Dataflow_DeduplicationMethod_value)
	proto.RegisterType((*Dataset)(nil), "apiserver.v2.Dataset")
	proto.RegisterType((*DatasetSpec)(nil), "apiserver.v2.DatasetSpec")
	proto.RegisterType((*DatasetStatus)(nil), "apiserver.v2.DatasetStatus")
	proto.RegisterType((*DatasetVersion)(nil), "apiserver.v2.DatasetVersion")
	proto.RegisterType((*DataStatistics)(nil), "apiserver.v2.DataStatistics")
	proto.RegisterType((*DatumMeta)(nil), "apiserver.v2.DatumMeta")
	proto.RegisterMapType((map[string]string)(nil), "apiserver.v2.DatumMeta.TagsEntry")
	proto.RegisterType((*DataItem)(nil), "apiserver.v2.DataItem")
	proto.RegisterMapType((map[string]*types.Struct)(nil), "apiserver.v2.DataItem.AnnotationsEntry")
	proto.RegisterType((*Dataflow)(nil), "apiserver.v2.Dataflow")
	proto.RegisterType((*Dataflow_Params)(nil), "apiserver.v2.Dataflow.Params")
	proto.RegisterType((*Dataflow_Filtering)(nil), "apiserver.v2.Dataflow.Filtering")
	proto.RegisterType((*Dataflow_Resolution)(nil), "apiserver.v2.Dataflow.Resolution")
	proto.RegisterType((*Dataflow_Range)(nil), "apiserver.v2.Dataflow.Range")
	proto.RegisterType((*Dataflow_Deduplication)(nil), "apiserver.v2.Dataflow.Deduplication")
	proto.RegisterType((*Dataflow_Formatting)(nil), "apiserver.v2.Dataflow.Formatting")
	proto.RegisterType((*CreateDatasetReq)(nil), "apiserver.v2.CreateDatasetReq")
	proto.RegisterType((*GetDatasetReq)(nil), "apiserver.v2.GetDatasetReq")
	proto.RegisterType((*ListDatasetsReq)(nil), "apiserver.v2.ListDatasetsReq")
	proto.RegisterType((*ListDatasetsRes)(nil), "apiserver.v2.ListDatasetsRes")
	proto.RegisterType((*RemoveDatasetReq)(nil), "apiserver.v2.RemoveDatasetReq")
	proto.RegisterType((*DatasetVersionRef)(nil), "apiserver.v2.DatasetVersionRef")
	proto.RegisterType((*DatasetVersionChange)(nil), "apiserver.v2.DatasetVersionChange")
	proto.RegisterType((*ListDataItemsReq)(nil), "apiserver.v2.ListDataItemsReq")
	proto.RegisterType((*AppendDataItemReq)(nil), "apiserver.v2.AppendDataItemReq")
	proto.RegisterType((*AppendDataItemsRes)(nil), "apiserver.v2.AppendDataItemsRes")
	proto.RegisterType((*CreateDatasetVersionReq)(nil), "apiserver.v2.CreateDatasetVersionReq")
	proto.RegisterType((*PushToDatasetVersionReq)(nil), "apiserver.v2.PushToDatasetVersionReq")
	proto.RegisterType((*FinalizeDatasetVersionReq)(nil), "apiserver.v2.FinalizeDatasetVersionReq")
	proto.RegisterType((*SearchDataItemsReq)(nil), "apiserver.v2.SearchDataItemsReq")
	proto.RegisterType((*DataItemFilter)(nil), "apiserver.v2.DataItemFilter")
	proto.RegisterMapType((map[string]string)(nil), "apiserver.v2.DataItemFilter.ByTagsEntry")
}

func init() { proto.RegisterFile("dataset.proto", fileDescriptor_f69247dc9b20935f) }

var fileDescriptor_f69247dc9b20935f = []byte{
	// 2013 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x58, 0xdd, 0x6f, 0x1b, 0x4b,
	0x15, 0xcf, 0xfa, 0xdb, 0xc7, 0x71, 0xe2, 0x3b, 0x37, 0x24, 0xae, 0xd3, 0xc6, 0xe9, 0xaa, 0xe8,
	0x56, 0xdc, 0xc6, 0x81, 0xb4, 0xe5, 0x5e, 0x8a, 0x28, 0x8d, 0x93, 0xb6, 0x4a, 0xd4, 0xd2, 0x68,
	0x12, 0x52, 0x89, 0x0a, 0x45, 0x1b, 0xef, 0xd8, 0x1e, 0xae, 0xbd, 0xbb, 0x77, 0x77, 0xec, 0xc6,
	0x15, 0x12, 0x12, 0x2f, 0x48, 0x3c, 0x20, 0x84, 0xf8, 0x03, 0x78, 0x41, 0xe2, 0xcf, 0x40, 0x3c,
	0xf1, 0x82, 0xd4, 0x37, 0x78, 0x40, 0x96, 0xa0, 0xff, 0x81, 0x85, 0x84, 0xd4, 0x27, 0x34, 0x1f,
	0xeb, 0xfd, 0xf0, 0x47, 0x42, 0xd5, 0xa7, 0x64, 0x66, 0x7e, 0xe7, 0x37, 0xe7, 0x6b, 0xce, 0x39,
	0x5e, 0x28, 0x9a, 0x06, 0x33, 0x3c, 0xc2, 0x6a, 0x8e, 0x6b, 0x33, 0x1b, 0x2d, 0x1a, 0x0e, 0xf5,
	0x88, 0xdb, 0x27, 0x6e, 0xad, 0xbf, 0x53, 0xd9, 0x6a, 0x51, 0xd6, 0xee, 0x9d, 0xd7, 0x1a, 0x76,
	0x77, 0xbb, 0x65, 0xb7, 0xec, 0x6d, 0x01, 0x3a, 0xef, 0x35, 0xc5, 0x4a, 0x2c, 0xc4, 0x7f, 0x52,
	0xb8, 0xb2, 0x1b, 0x82, 0x13, 0xab, 0x6f, 0x0f, 0x1c, 0xd7, 0xbe, 0x18, 0x48, 0xa1, 0xc6, 0x56,
	0x8b, 0x58, 0x5b, 0x7d, 0xa3, 0x43, 0x4d, 0x83, 0x91, 0xed, 0x89, 0x7f, 0x14, 0xc5, 0x7a, 0xcb,
	0xb6, 0x5b, 0x1d, 0x12, 0x5c, 0x44, 0xba, 0x0e, 0x1b, 0xa8, 0xc3, 0xeb, 0xf1, 0x43, 0x8f, 0xb9,
	0xbd, 0x86, 0x52, 0xbd, 0x52, 0x8d, 0x9f, 0x32, 0xda, 0x25, 0x1e, 0x33, 0xba, 0x8e, 0x02, 0x40,
	0x97, 0x30, 0x43, 0xfd, 0xbf, 0x68, 0x34, 0x1a, 0xc4, 0xf3, 0xe4, 0x4a, 0xff, 0x73, 0x02, 0xb2,
	0xfb, 0xd2, 0x0f, 0xe8, 0x10, 0x52, 0x1c, 0x57, 0xd6, 0x36, 0xb5, 0xdb, 0x85, 0x9d, 0xd5, 0x5a,
	0xd8, 0x21, 0xb5, 0xe7, 0x84, 0x19, 0xdc, 0x61, 0xf5, 0x8d, 0xf7, 0xf5, 0xf4, 0xaf, 0xb5, 0x44,
	0x4e, 0x7b, 0x3b, 0xac, 0x6a, 0xa3, 0x61, 0x75, 0xe9, 0xdc, 0xb3, 0xad, 0x07, 0xfa, 0x1d, 0x6a,
	0x75, 0xa8, 0x45, 0x74, 0x2c, 0x38, 0xd0, 0x43, 0x48, 0x79, 0x0e, 0x69, 0x94, 0x13, 0x82, 0xeb,
	0x5a, 0x94, 0x4b, 0x5d, 0x78, 0xec, 0x90, 0x46, 0x7d, 0x79, 0x34, 0xac, 0x16, 0x24, 0x05, 0x17,
	0xd0, 0xb1, 0x90, 0x43, 0x47, 0x90, 0xf1, 0x98, 0xc1, 0x7a, 0x5e, 0x39, 0x29, 0x18, 0xd6, 0xa7,
	0x33, 0x08, 0x48, 0x7d, 0x7d, 0x34, 0xac, 0xae, 0x29, 0x0e, 0xb1, 0x73, 0xc7, 0xee, 0x52, 0x26,
	0xfc, 0xa7, 0x63, 0xc5, 0xa3, 0xbf, 0x84, 0xc2, 0x9e, 0x6d, 0x31, 0x62, 0xb1, 0x93, 0x81, 0x43,
	0x50, 0x11, 0xf2, 0xfc, 0xef, 0x0b, 0xd6, 0x26, 0x6e, 0x69, 0xc1, 0x5f, 0x1e, 0x74, 0x8d, 0x16,
	0x29, 0x69, 0xfe, 0xf2, 0x94, 0x9a, 0xc4, 0x2e, 0x25, 0xfc, 0xe5, 0x6e, 0xcf, 0xa4, 0x76, 0x29,
	0x89, 0x16, 0x21, 0xc7, 0x97, 0x27, 0xe4, 0x82, 0x95, 0x52, 0xfa, 0xcf, 0xa0, 0x10, 0x32, 0x08,
	0xbd, 0x82, 0x42, 0x23, 0xb8, 0x47, 0x38, 0x73, 0x69, 0xe7, 0xe6, 0x54, 0xf5, 0x6b, 0x21, 0x85,
	0xea, 0xab, 0xa3, 0x61, 0x15, 0x49, 0x23, 0x42, 0xf2, 0x3a, 0x0e, 0xb3, 0xe9, 0x6d, 0x28, 0x46,
	0x4c, 0x47, 0x2f, 0x21, 0xd7, 0x27, 0xae, 0x47, 0x6d, 0xcb, 0x2b, 0x6b, 0x9b, 0xc9, 0xdb, 0x85,
	0x9d, 0xeb, 0x53, 0xaf, 0x3a, 0x95, 0xa0, 0xfa, 0x8d, 0xd1, 0xb0, 0x7a, 0x4d, 0xde, 0xe2, 0xcb,
	0x85, 0x9d, 0x35, 0x26, 0xd3, 0xff, 0x93, 0x84, 0xa5, 0xa8, 0xec, 0x47, 0xcd, 0x8f, 0xbb, 0x90,
	0x71, 0x0c, 0x97, 0x58, 0x4c, 0x64, 0x48, 0x3e, 0x1c, 0x42, 0xb9, 0x1f, 0x09, 0xa1, 0xdc, 0x42,
	0x3f, 0x05, 0xe0, 0xc1, 0xa4, 0x1e, 0xa3, 0x0d, 0x3f, 0x31, 0xa6, 0x98, 0x7b, 0x3c, 0xc6, 0xd4,
	0xab, 0xa3, 0x61, 0x75, 0x3d, 0xc8, 0x0c, 0xb9, 0x1b, 0xa6, 0x0e, 0x11, 0xa2, 0x43, 0x48, 0xf3,
	0x15, 0x29, 0xa7, 0x44, 0xcc, 0xf4, 0x79, 0x8e, 0xac, 0xf1, 0x4b, 0x48, 0xbd, 0x34, 0x1a, 0x56,
	0x17, 0x03, 0x7e, 0xa2, 0x63, 0x49, 0x81, 0x6c, 0x58, 0xa6, 0x56, 0xdf, 0xee, 0xf4, 0x89, 0x79,
	0x6a, 0x77, 0x7a, 0x5d, 0xe2, 0x95, 0xd3, 0x22, 0x3c, 0xd5, 0x28, 0x2b, 0x26, 0x9e, 0xdd, 0x73,
	0x1b, 0x04, 0x93, 0x26, 0x71, 0x89, 0xd5, 0x20, 0xf5, 0x5b, 0xa3, 0x61, 0x75, 0x53, 0x52, 0xc6,
	0x18, 0xc2, 0x7a, 0xc7, 0xd9, 0xf5, 0xc7, 0x90, 0x16, 0x2a, 0xa1, 0x25, 0x80, 0xfd, 0xd3, 0xb3,
	0x1f, 0x5b, 0x5f, 0x59, 0xf6, 0x6b, 0xab, 0xb4, 0x80, 0x96, 0xa1, 0xb0, 0x7f, 0x7a, 0xb6, 0xe7,
	0x12, 0x83, 0x51, 0xab, 0x55, 0xd2, 0x78, 0xf6, 0xee, 0x9f, 0x9e, 0x61, 0x62, 0x98, 0x03, 0x99,
	0xda, 0xfb, 0xa7, 0x67, 0x4f, 0x0c, 0xda, 0x21, 0x66, 0x29, 0xa9, 0xff, 0x4d, 0x93, 0x61, 0x0f,
	0x7c, 0x88, 0x1e, 0x42, 0xb1, 0x49, 0x3b, 0xc4, 0x3b, 0xb0, 0x1a, 0x9d, 0x9e, 0x49, 0x4c, 0x11,
	0xff, 0x64, 0xbd, 0x3c, 0x1a, 0x56, 0x57, 0xa4, 0x9e, 0x91, 0x63, 0x1d, 0x47, 0xe1, 0x5c, 0x9e,
	0xab, 0x1d, 0xc8, 0x27, 0xe2, 0xf2, 0x91, 0x63, 0x1d, 0x47, 0xe1, 0xe8, 0xfb, 0xb0, 0xe8, 0xd1,
	0x37, 0x64, 0x2c, 0x9e, 0x14, 0xe2, 0x6b, 0xa3, 0x61, 0xf5, 0x53, 0xe5, 0xf9, 0xd0, 0xa9, 0x8e,
	0x23, 0x60, 0xfd, 0x8f, 0x09, 0xc8, 0xef, 0x1b, 0xac, 0xd7, 0xe5, 0xf9, 0x89, 0x56, 0x21, 0xd3,
	0x17, 0xfe, 0x12, 0x36, 0xe4, 0xb1, 0x5a, 0xa1, 0x6b, 0x90, 0xfc, 0x8a, 0x0c, 0x54, 0x2a, 0x66,
	0xdf, 0xd7, 0x53, 0x6e, 0xa2, 0xa4, 0x61, 0xbe, 0x87, 0x6e, 0x41, 0x51, 0x3d, 0xc0, 0x67, 0xc4,
	0x6a, 0xb1, 0xb6, 0xb8, 0x3e, 0x85, 0xa3, 0x9b, 0xe8, 0x3e, 0xa4, 0x98, 0xd1, 0xf2, 0xca, 0x29,
	0x11, 0xe3, 0xc9, 0xd7, 0x2e, 0xef, 0xaf, 0x9d, 0x18, 0x2d, 0xef, 0xb1, 0xc5, 0xdc, 0x01, 0x16,
	0x70, 0xf4, 0x03, 0xc8, 0x4b, 0x0d, 0x30, 0x69, 0x96, 0xd3, 0x22, 0x9f, 0x2f, 0xcb, 0x0f, 0x1c,
	0x48, 0xa0, 0x12, 0x24, 0x7b, 0x2e, 0x2d, 0x67, 0x84, 0x2d, 0xfc, 0xdf, 0xca, 0x17, 0x90, 0x1f,
	0xdf, 0xc1, 0x8f, 0xb9, 0x55, 0xd2, 0x54, 0x61, 0xcc, 0x0a, 0xa4, 0xfb, 0x46, 0xa7, 0x47, 0xa4,
	0xa5, 0x58, 0x2e, 0x1e, 0x24, 0xbe, 0xd4, 0xf4, 0xff, 0x6a, 0x90, 0xe3, 0x71, 0x3f, 0x60, 0xa4,
	0x8b, 0x96, 0x20, 0x41, 0x4d, 0x25, 0x97, 0xa0, 0x26, 0xfa, 0x02, 0xd2, 0xfc, 0xd1, 0x7a, 0xe5,
	0x84, 0x30, 0x6f, 0x6d, 0x86, 0x79, 0xf5, 0xdc, 0xfb, 0x7a, 0xfa, 0x77, 0xfc, 0xe9, 0x63, 0x89,
	0x47, 0x07, 0x50, 0x30, 0x2c, 0xcb, 0xe6, 0xb9, 0xc4, 0x0b, 0x54, 0x52, 0x88, 0x7f, 0x36, 0xf9,
	0xae, 0xf8, 0xad, 0xb5, 0xdd, 0x00, 0x29, 0x7d, 0x14, 0x96, 0xad, 0xbc, 0x84, 0x52, 0x1c, 0x30,
	0xc5, 0xc0, 0xad, 0xb0, 0x81, 0x5c, 0x53, 0xd9, 0x19, 0x6b, 0x7e, 0x67, 0xac, 0x1d, 0x8b, 0xbe,
	0x19, 0xb6, 0xfc, 0x9f, 0x59, 0x69, 0x79, 0xb3, 0x63, 0xbf, 0x46, 0xdf, 0x85, 0xac, 0xaa, 0x80,
	0xaa, 0xca, 0xcd, 0xad, 0xa6, 0xd8, 0x07, 0xa3, 0xfb, 0xa2, 0x9c, 0x19, 0x5d, 0x4f, 0x5d, 0x7c,
	0x63, 0x52, 0x8c, 0xf3, 0xd7, 0x8e, 0x04, 0x08, 0x2b, 0x30, 0xda, 0x83, 0xc5, 0x9e, 0xd3, 0xb1,
	0x0d, 0xf5, 0x8a, 0x55, 0x49, 0xbb, 0x34, 0x05, 0x22, 0x42, 0x48, 0xf7, 0x49, 0x8e, 0x5c, 0xd2,
	0xa4, 0x17, 0xa2, 0x7a, 0xe5, 0x71, 0x64, 0xaf, 0xf2, 0x77, 0x0d, 0x32, 0xf2, 0x6e, 0xf4, 0x10,
	0xf2, 0x4d, 0xda, 0x61, 0xc4, 0xa5, 0x56, 0x4b, 0x19, 0xb9, 0x39, 0x43, 0xdb, 0x27, 0x3e, 0x0e,
	0x07, 0x22, 0xe8, 0x10, 0x8a, 0x26, 0x31, 0x7b, 0x4e, 0x87, 0x36, 0x44, 0x2c, 0x94, 0xc5, 0xb7,
	0x66, 0x70, 0xec, 0x87, 0xb1, 0x38, 0x2a, 0x8a, 0x76, 0x01, 0x9a, 0xb6, 0xdb, 0x35, 0x18, 0x2f,
	0x4d, 0xca, 0xfa, 0x9b, 0xb3, 0x94, 0x19, 0x03, 0x71, 0x48, 0xa8, 0xf2, 0x17, 0x0d, 0xf2, 0x63,
	0x3d, 0x39, 0xa1, 0x4b, 0x3c, 0xbb, 0xd3, 0x63, 0x41, 0x08, 0x67, 0x11, 0xe2, 0x31, 0x10, 0x87,
	0x84, 0xd0, 0x97, 0x90, 0x33, 0x7b, 0x6e, 0xd8, 0xb4, 0xeb, 0xb3, 0x08, 0x0c, 0xab, 0x45, 0xf0,
	0x18, 0xcd, 0x25, 0x79, 0xe5, 0x3b, 0xa6, 0x6f, 0xc8, 0xec, 0xe6, 0x14, 0x96, 0xf4, 0xd1, 0x95,
	0x3e, 0x40, 0xa0, 0x0d, 0xda, 0x81, 0xf4, 0x6b, 0x6a, 0xb2, 0xf6, 0xec, 0x14, 0x0c, 0x91, 0x48,
	0x28, 0xba, 0x07, 0x99, 0x36, 0xa1, 0xad, 0x36, 0xbb, 0x92, 0xce, 0x0a, 0x5b, 0xf9, 0x1c, 0xd2,
	0x62, 0x83, 0xbf, 0xa4, 0xae, 0x71, 0x21, 0x2b, 0x3b, 0xe6, 0xff, 0x8a, 0x1d, 0x2a, 0x3d, 0xc0,
	0x77, 0xa8, 0x55, 0x39, 0x86, 0x62, 0x24, 0x98, 0xa8, 0x0e, 0x99, 0x2e, 0x61, 0x6d, 0xdb, 0x54,
	0x43, 0xce, 0xb7, 0xae, 0x92, 0x02, 0xcf, 0x85, 0x04, 0x56, 0x92, 0x95, 0x1d, 0x80, 0x20, 0xb0,
	0xbc, 0xd8, 0x32, 0xc3, 0x6d, 0x11, 0x26, 0xf7, 0xe4, 0x48, 0x93, 0xc7, 0xd1, 0x4d, 0xfd, 0x73,
	0xf8, 0x74, 0x0a, 0x25, 0x2a, 0x40, 0x36, 0xe8, 0x7a, 0x59, 0x48, 0x3e, 0xdf, 0xbf, 0x5f, 0xd2,
	0xf4, 0x3d, 0x28, 0x89, 0xde, 0x47, 0xd4, 0xd3, 0xc5, 0xe4, 0x6b, 0xb4, 0x0d, 0x59, 0x35, 0xfb,
	0x2b, 0x17, 0x7f, 0x63, 0xea, 0x2b, 0xc7, 0x3e, 0x4a, 0x7f, 0x01, 0xc5, 0xa7, 0x84, 0x85, 0x18,
	0xd6, 0x21, 0x65, 0x19, 0x7e, 0x1b, 0x09, 0x3a, 0x86, 0xd8, 0x44, 0x37, 0x21, 0xdb, 0xe0, 0x57,
	0xda, 0x6e, 0xbc, 0xa3, 0xf8, 0xfb, 0xfa, 0x2f, 0x13, 0xb0, 0xfc, 0x8c, 0x7a, 0x3e, 0xa5, 0xc7,
	0x39, 0xcb, 0x31, 0xb1, 0x31, 0x1a, 0xed, 0x45, 0x47, 0xca, 0xe4, 0x15, 0x47, 0xca, 0xc8, 0xe8,
	0x88, 0xee, 0x42, 0xd6, 0x76, 0x64, 0x1d, 0x4e, 0x4f, 0x1b, 0xca, 0xb9, 0x3a, 0x2f, 0x24, 0x00,
	0xfb, 0x48, 0x74, 0x07, 0xd2, 0x8e, 0xd1, 0x22, 0xae, 0xe8, 0x31, 0x13, 0x33, 0xdf, 0x11, 0x3f,
	0xc2, 0xe4, 0x6b, 0x2c, 0x41, 0xe8, 0x33, 0x48, 0xd8, 0x8e, 0x9a, 0x9e, 0x62, 0x4d, 0xe2, 0x85,
	0x43, 0xe4, 0x2b, 0xc1, 0x09, 0xdb, 0x39, 0x4c, 0xe5, 0xb4, 0x52, 0x42, 0xbf, 0x88, 0xfb, 0xc0,
	0x43, 0xdf, 0x81, 0x9c, 0xf2, 0xb9, 0x3f, 0xce, 0xce, 0x08, 0xcd, 0x18, 0x16, 0xa8, 0x98, 0x9c,
	0xa3, 0xa2, 0xa7, 0x54, 0x3c, 0x4c, 0xe5, 0x12, 0xa5, 0xa4, 0x8e, 0xa1, 0x84, 0x49, 0xd7, 0xee,
	0x93, 0x8f, 0x18, 0xd2, 0x9f, 0xc3, 0x27, 0xb1, 0xee, 0x40, 0x9a, 0x5c, 0x2e, 0x9c, 0x69, 0x61,
	0x39, 0xb5, 0x7f, 0x05, 0x6a, 0x0e, 0xf1, 0xbb, 0x52, 0x32, 0x06, 0x51, 0xfb, 0xfa, 0xef, 0x35,
	0x58, 0x89, 0x5e, 0xbf, 0xd7, 0x16, 0x2f, 0xfb, 0xd5, 0x14, 0xb5, 0x54, 0xd6, 0x57, 0xe7, 0xf6,
	0x36, 0xd2, 0xac, 0x2f, 0x86, 0x47, 0x79, 0x3c, 0xc5, 0xbc, 0x6a, 0x6c, 0x8a, 0x1f, 0xeb, 0xa5,
	0xb6, 0xf5, 0x57, 0x50, 0xf2, 0x43, 0xcc, 0x7b, 0xbc, 0xc8, 0xf3, 0xa7, 0xb0, 0x64, 0x46, 0x98,
	0xae, 0xa8, 0x0e, 0x8e, 0x89, 0xe9, 0xbf, 0x80, 0x4f, 0x76, 0x1d, 0x87, 0x58, 0xa6, 0x4f, 0xcf,
	0xd9, 0x3f, 0xb4, 0x83, 0xdf, 0x81, 0xb4, 0xc9, 0x07, 0x19, 0x55, 0x3f, 0x57, 0xa7, 0x0f, 0x29,
	0x58, 0x82, 0x1e, 0xa4, 0xfe, 0xfa, 0x87, 0xaa, 0xa6, 0x77, 0x00, 0x45, 0x15, 0x10, 0x39, 0xbc,
	0x09, 0x05, 0xab, 0xd7, 0x95, 0x07, 0xfe, 0xb4, 0x8c, 0xc3, 0x5b, 0xbc, 0x58, 0x77, 0x0c, 0x46,
	0xbc, 0x39, 0xc5, 0x3a, 0xa4, 0xa2, 0xc2, 0xea, 0x1e, 0xac, 0x45, 0x2a, 0xd9, 0xd8, 0x33, 0x1f,
	0x6e, 0xf4, 0x26, 0x14, 0x1a, 0x1d, 0xdb, 0x22, 0x47, 0x41, 0x10, 0x73, 0x38, 0xbc, 0xa5, 0xff,
	0x4a, 0x83, 0xb5, 0xa3, 0x9e, 0xd7, 0x3e, 0xb1, 0x3f, 0xde, 0xad, 0xf7, 0x20, 0x6f, 0xfa, 0x0e,
	0x53, 0x23, 0xe5, 0x2c, 0x77, 0x07, 0x40, 0xfd, 0x18, 0xae, 0x3d, 0xa1, 0x96, 0xd1, 0xa1, 0x6f,
	0x3e, 0x9e, 0x03, 0xf4, 0x43, 0x40, 0xc7, 0xc4, 0x70, 0x1b, 0xed, 0x48, 0x86, 0xde, 0x83, 0x8c,
	0x9c, 0x77, 0x66, 0x93, 0x71, 0xac, 0x1c, 0x3b, 0xb0, 0xc2, 0xea, 0x6f, 0x13, 0xf2, 0xa7, 0x53,
	0x70, 0x84, 0x7e, 0x08, 0x40, 0xad, 0xfd, 0x68, 0x41, 0xbb, 0x34, 0xcd, 0x43, 0x22, 0xe8, 0x11,
	0x64, 0xce, 0x07, 0x7c, 0xa2, 0x57, 0x7e, 0xba, 0x3d, 0x4f, 0x93, 0x5a, 0x7d, 0x10, 0xfc, 0xc0,
	0x50, 0x72, 0xe8, 0x21, 0x2c, 0x8a, 0x32, 0x42, 0xcc, 0xdd, 0x26, 0x1b, 0x57, 0xc9, 0xca, 0xc4,
	0x60, 0x7c, 0xe2, 0x7f, 0x32, 0xc2, 0x11, 0x3c, 0x7a, 0x04, 0x45, 0xb5, 0xae, 0x93, 0xa6, 0xed,
	0xca, 0x1f, 0xc7, 0xf3, 0x09, 0xa2, 0x02, 0x95, 0xef, 0x41, 0x21, 0xa4, 0xd8, 0xff, 0xf3, 0xab,
	0x64, 0xe7, 0x37, 0xd9, 0xf1, 0x47, 0x88, 0x63, 0xe2, 0xf6, 0x69, 0x83, 0xa0, 0x27, 0x50, 0x8c,
	0xbc, 0x02, 0xb4, 0x11, 0x75, 0x49, 0xbc, 0xd9, 0x57, 0xa6, 0x37, 0x10, 0xf4, 0x08, 0x20, 0x68,
	0xe9, 0x28, 0xf6, 0x79, 0x29, 0xd2, 0xec, 0x67, 0x31, 0x3c, 0x83, 0xc5, 0x70, 0xfb, 0x42, 0x37,
	0x26, 0xfb, 0x69, 0xa8, 0xbd, 0x57, 0xe6, 0x1e, 0x7b, 0xe8, 0x29, 0x14, 0x23, 0x2d, 0x29, 0x6e,
	0x57, 0xbc, 0x5f, 0x55, 0x56, 0x27, 0x22, 0xf0, 0xb8, 0xeb, 0xb0, 0x01, 0xfa, 0x11, 0xac, 0x44,
	0xb0, 0xfe, 0xd7, 0x9b, 0xcb, 0xf2, 0x6e, 0x96, 0x99, 0x07, 0x50, 0x8c, 0x94, 0xf0, 0xb8, 0x62,
	0xf1, 0xfa, 0x5e, 0x99, 0xf1, 0x96, 0xbf, 0xad, 0xa1, 0x53, 0x58, 0x8e, 0xd5, 0xcb, 0xb8, 0x56,
	0x13, 0xf5, 0xbc, 0xb2, 0x39, 0x0f, 0xc0, 0x3d, 0x77, 0x5b, 0x43, 0xaf, 0x60, 0x65, 0x5a, 0x65,
	0x44, 0xdf, 0x9c, 0x93, 0x1a, 0x41, 0xf1, 0xa8, 0xcc, 0xad, 0x15, 0x9c, 0x7c, 0x5a, 0x01, 0x8c,
	0x93, 0xcf, 0x28, 0x92, 0x97, 0x90, 0x9f, 0xc1, 0xea, 0xf4, 0xa2, 0x86, 0x62, 0xbf, 0x92, 0x67,
	0x96, 0xbe, 0x4b, 0x2e, 0x78, 0x0e, 0xcb, 0xb1, 0x02, 0x87, 0x62, 0x1e, 0x9d, 0xac, 0x7f, 0xb3,
	0x23, 0x58, 0xdf, 0x7b, 0xfb, 0xaf, 0x8d, 0x85, 0x3f, 0xfd, 0x7b, 0x43, 0xfb, 0xed, 0xbb, 0x8d,
	0x85, 0xb7, 0xef, 0x36, 0x16, 0xfe, 0xf1, 0x6e, 0x63, 0xe1, 0x27, 0x5b, 0x2d, 0xca, 0x6a, 0x5e,
	0xcf, 0x71, 0x49, 0x97, 0x5a, 0x66, 0x8d, 0x5a, 0x4d, 0xf1, 0xbd, 0xdc, 0xec, 0x35, 0x98, 0xb7,
	0x6d, 0x30, 0xbb, 0xbb, 0xed, 0x7f, 0x30, 0xdf, 0x36, 0x1c, 0x7a, 0x9e, 0x11, 0xab, 0xbb, 0xff,
	0x0b, 0x00, 0x00, 0xff, 0xff, 0xd1, 0xd2, 0x1f, 0x84, 0x81, 0x17, 0x00, 0x00,
}

func (this *Dataset) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Dataset)
	if !ok {
		that2, ok := that.(Dataset)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Metadata.Equal(that1.Metadata) {
		return false
	}
	if !this.Spec.Equal(that1.Spec) {
		return false
	}
	if !this.Status.Equal(that1.Status) {
		return false
	}
	return true
}
func (this *DatasetSpec) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*DatasetSpec)
	if !ok {
		that2, ok := that.(DatasetSpec)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.ContentType != that1.ContentType {
		return false
	}
	return true
}
func (this *DatasetStatus) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*DatasetStatus)
	if !ok {
		that2, ok := that.(DatasetStatus)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.Versions) != len(that1.Versions) {
		return false
	}
	for i := range this.Versions {
		if !this.Versions[i].Equal(that1.Versions[i]) {
			return false
		}
	}
	return true
}
func (this *DatasetVersion) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*DatasetVersion)
	if !ok {
		that2, ok := that.(DatasetVersion)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Metadata.Equal(that1.Metadata) {
		return false
	}
	if this.Parent != that1.Parent {
		return false
	}
	if !this.Statistics.Equal(that1.Statistics) {
		return false
	}
	if this.State != that1.State {
		return false
	}
	if len(this.InvolvedVolumes) != len(that1.InvolvedVolumes) {
		return false
	}
	for i := range this.InvolvedVolumes {
		if !this.InvolvedVolumes[i].Equal(that1.InvolvedVolumes[i]) {
			return false
		}
	}
	return true
}
func (this *DataStatistics) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*DataStatistics)
	if !ok {
		that2, ok := that.(DataStatistics)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.FilesIncluded != that1.FilesIncluded {
		return false
	}
	if this.ItemsIncluded != that1.ItemsIncluded {
		return false
	}
	if this.SizeIncluded != that1.SizeIncluded {
		return false
	}
	return true
}
func (this *DatumMeta) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*DatumMeta)
	if !ok {
		that2, ok := that.(DatumMeta)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Volume != that1.Volume {
		return false
	}
	if this.Key != that1.Key {
		return false
	}
	if this.ContentLength != that1.ContentLength {
		return false
	}
	if len(this.Tags) != len(that1.Tags) {
		return false
	}
	for i := range this.Tags {
		if this.Tags[i] != that1.Tags[i] {
			return false
		}
	}
	if !this.VolumeRef.Equal(that1.VolumeRef) {
		return false
	}
	if this.Uri != that1.Uri {
		return false
	}
	return true
}
func (this *DataItem) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*DataItem)
	if !ok {
		that2, ok := that.(DataItem)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Id != that1.Id {
		return false
	}
	if len(this.Metas) != len(that1.Metas) {
		return false
	}
	for i := range this.Metas {
		if !this.Metas[i].Equal(that1.Metas[i]) {
			return false
		}
	}
	if len(this.Annotations) != len(that1.Annotations) {
		return false
	}
	for i := range this.Annotations {
		if !this.Annotations[i].Equal(that1.Annotations[i]) {
			return false
		}
	}
	return true
}
func (this *Dataflow) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Dataflow)
	if !ok {
		that2, ok := that.(Dataflow)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Version.Equal(that1.Version) {
		return false
	}
	if !this.Params.Equal(that1.Params) {
		return false
	}
	if !this.UploadVolume.Equal(that1.UploadVolume) {
		return false
	}
	if this.UploadPrefix != that1.UploadPrefix {
		return false
	}
	return true
}
func (this *Dataflow_Params) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Dataflow_Params)
	if !ok {
		that2, ok := that.(Dataflow_Params)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Filtering.Equal(that1.Filtering) {
		return false
	}
	if !this.Deduplication.Equal(that1.Deduplication) {
		return false
	}
	if !this.Formatting.Equal(that1.Formatting) {
		return false
	}
	return true
}
func (this *Dataflow_Filtering) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Dataflow_Filtering)
	if !ok {
		that2, ok := that.(Dataflow_Filtering)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Resolution.Equal(that1.Resolution) {
		return false
	}
	if !this.Duration.Equal(that1.Duration) {
		return false
	}
	if !this.FileSize.Equal(that1.FileSize) {
		return false
	}
	return true
}
func (this *Dataflow_Resolution) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Dataflow_Resolution)
	if !ok {
		that2, ok := that.(Dataflow_Resolution)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Width.Equal(that1.Width) {
		return false
	}
	if !this.Height.Equal(that1.Height) {
		return false
	}
	return true
}
func (this *Dataflow_Range) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Dataflow_Range)
	if !ok {
		that2, ok := that.(Dataflow_Range)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Max != that1.Max {
		return false
	}
	if this.Min != that1.Min {
		return false
	}
	return true
}
func (this *Dataflow_Deduplication) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Dataflow_Deduplication)
	if !ok {
		that2, ok := that.(Dataflow_Deduplication)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Method != that1.Method {
		return false
	}
	return true
}
func (this *Dataflow_Formatting) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Dataflow_Formatting)
	if !ok {
		that2, ok := that.(Dataflow_Formatting)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.TargetFormats) != len(that1.TargetFormats) {
		return false
	}
	for i := range this.TargetFormats {
		if this.TargetFormats[i] != that1.TargetFormats[i] {
			return false
		}
	}
	return true
}
func (this *CreateDatasetReq) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateDatasetReq)
	if !ok {
		that2, ok := that.(CreateDatasetReq)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Dataset.Equal(that1.Dataset) {
		return false
	}
	return true
}
func (this *GetDatasetReq) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetDatasetReq)
	if !ok {
		that2, ok := that.(GetDatasetReq)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Name != that1.Name {
		return false
	}
	if this.Creator != that1.Creator {
		return false
	}
	return true
}
func (this *ListDatasetsReq) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ListDatasetsReq)
	if !ok {
		that2, ok := that.(ListDatasetsReq)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Creator != that1.Creator {
		return false
	}
	if this.ContentType != that1.ContentType {
		return false
	}
	if !this.Options.Equal(that1.Options) {
		return false
	}
	if !this.Pager.Equal(that1.Pager) {
		return false
	}
	if this.Op != that1.Op {
		return false
	}
	return true
}
func (this *ListDatasetsRes) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ListDatasetsRes)
	if !ok {
		that2, ok := that.(ListDatasetsRes)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.Datasets) != len(that1.Datasets) {
		return false
	}
	for i := range this.Datasets {
		if !this.Datasets[i].Equal(that1.Datasets[i]) {
			return false
		}
	}
	if !this.Pager.Equal(that1.Pager) {
		return false
	}
	return true
}
func (this *RemoveDatasetReq) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*RemoveDatasetReq)
	if !ok {
		that2, ok := that.(RemoveDatasetReq)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Name != that1.Name {
		return false
	}
	if this.Creator != that1.Creator {
		return false
	}
	return true
}
func (this *DatasetVersionRef) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*DatasetVersionRef)
	if !ok {
		that2, ok := that.(DatasetVersionRef)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Dataset != that1.Dataset {
		return false
	}
	if this.Creator != that1.Creator {
		return false
	}
	if this.Version != that1.Version {
		return false
	}
	return true
}
func (this *DatasetVersionChange) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*DatasetVersionChange)
	if !ok {
		that2, ok := that.(DatasetVersionChange)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.DatasetVersionRef.Equal(that1.DatasetVersionRef) {
		return false
	}
	if this.Parent != that1.Parent {
		return false
	}
	return true
}
func (this *ListDataItemsReq) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ListDataItemsReq)
	if !ok {
		that2, ok := that.(ListDataItemsReq)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.DatasetVersion.Equal(that1.DatasetVersion) {
		return false
	}
	return true
}
func (this *AppendDataItemReq) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AppendDataItemReq)
	if !ok {
		that2, ok := that.(AppendDataItemReq)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Version.Equal(that1.Version) {
		return false
	}
	if !this.Datum.Equal(that1.Datum) {
		return false
	}
	return true
}
func (this *AppendDataItemsRes) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AppendDataItemsRes)
	if !ok {
		that2, ok := that.(AppendDataItemsRes)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.NumAppended != that1.NumAppended {
		return false
	}
	if !this.Latest.Equal(that1.Latest) {
		return false
	}
	return true
}
func (this *CreateDatasetVersionReq) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateDatasetVersionReq)
	if !ok {
		that2, ok := that.(CreateDatasetVersionReq)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Version.Equal(that1.Version) {
		return false
	}
	if this.CloneParent != that1.CloneParent {
		return false
	}
	return true
}
func (this *PushToDatasetVersionReq) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*PushToDatasetVersionReq)
	if !ok {
		that2, ok := that.(PushToDatasetVersionReq)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Version.Equal(that1.Version) {
		return false
	}
	if len(this.DataItems) != len(that1.DataItems) {
		return false
	}
	for i := range this.DataItems {
		if !this.DataItems[i].Equal(that1.DataItems[i]) {
			return false
		}
	}
	return true
}
func (this *FinalizeDatasetVersionReq) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*FinalizeDatasetVersionReq)
	if !ok {
		that2, ok := that.(FinalizeDatasetVersionReq)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Version.Equal(that1.Version) {
		return false
	}
	return true
}
func (this *SearchDataItemsReq) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*SearchDataItemsReq)
	if !ok {
		that2, ok := that.(SearchDataItemsReq)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Filter.Equal(that1.Filter) {
		return false
	}
	return true
}
func (this *DataItemFilter) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*DataItemFilter)
	if !ok {
		that2, ok := that.(DataItemFilter)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.InDatasets) != len(that1.InDatasets) {
		return false
	}
	for i := range this.InDatasets {
		if !this.InDatasets[i].Equal(that1.InDatasets[i]) {
			return false
		}
	}
	if len(this.ByTags) != len(that1.ByTags) {
		return false
	}
	for i := range this.ByTags {
		if this.ByTags[i] != that1.ByTags[i] {
			return false
		}
	}
	if !this.CreatedAfter.Equal(that1.CreatedAfter) {
		return false
	}
	if !this.CreatedBefore.Equal(that1.CreatedBefore) {
		return false
	}
	return true
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DatasetServiceClient is the client API for DatasetService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DatasetServiceClient interface {
	// dataset crud
	CreateDataset(ctx context.Context, in *CreateDatasetReq, opts ...grpc.CallOption) (*Dataset, error)
	GetDataset(ctx context.Context, in *GetDatasetReq, opts ...grpc.CallOption) (*Dataset, error)
	ListDatasets(ctx context.Context, in *ListDatasetsReq, opts ...grpc.CallOption) (*ListDatasetsRes, error)
	RemoveDataset(ctx context.Context, in *RemoveDatasetReq, opts ...grpc.CallOption) (*types.Empty, error)
	RemoveDatasetVersion(ctx context.Context, in *DatasetVersionRef, opts ...grpc.CallOption) (*Dataset, error)
	// dataset content streamings
	ListDataItems(ctx context.Context, in *ListDataItemsReq, opts ...grpc.CallOption) (DatasetService_ListDataItemsClient, error)
	AppendDataItems(ctx context.Context, opts ...grpc.CallOption) (DatasetService_AppendDataItemsClient, error)
	// multi-step dataset content pushing
	CreateDatasetVersion(ctx context.Context, in *CreateDatasetVersionReq, opts ...grpc.CallOption) (*DatasetVersion, error)
	PushToDatasetVersion(ctx context.Context, in *PushToDatasetVersionReq, opts ...grpc.CallOption) (*DatasetVersion, error)
	FinalizeDatasetVersion(ctx context.Context, in *FinalizeDatasetVersionReq, opts ...grpc.CallOption) (*DatasetVersion, error)
	// search
	SearchDataItems(ctx context.Context, in *SearchDataItemsReq, opts ...grpc.CallOption) (DatasetService_SearchDataItemsClient, error)
}

type datasetServiceClient struct {
	cc *grpc.ClientConn
}

func NewDatasetServiceClient(cc *grpc.ClientConn) DatasetServiceClient {
	return &datasetServiceClient{cc}
}

func (c *datasetServiceClient) CreateDataset(ctx context.Context, in *CreateDatasetReq, opts ...grpc.CallOption) (*Dataset, error) {
	out := new(Dataset)
	err := c.cc.Invoke(ctx, "/apiserver.v2.DatasetService/CreateDataset", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *datasetServiceClient) GetDataset(ctx context.Context, in *GetDatasetReq, opts ...grpc.CallOption) (*Dataset, error) {
	out := new(Dataset)
	err := c.cc.Invoke(ctx, "/apiserver.v2.DatasetService/GetDataset", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *datasetServiceClient) ListDatasets(ctx context.Context, in *ListDatasetsReq, opts ...grpc.CallOption) (*ListDatasetsRes, error) {
	out := new(ListDatasetsRes)
	err := c.cc.Invoke(ctx, "/apiserver.v2.DatasetService/ListDatasets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *datasetServiceClient) RemoveDataset(ctx context.Context, in *RemoveDatasetReq, opts ...grpc.CallOption) (*types.Empty, error) {
	out := new(types.Empty)
	err := c.cc.Invoke(ctx, "/apiserver.v2.DatasetService/RemoveDataset", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *datasetServiceClient) RemoveDatasetVersion(ctx context.Context, in *DatasetVersionRef, opts ...grpc.CallOption) (*Dataset, error) {
	out := new(Dataset)
	err := c.cc.Invoke(ctx, "/apiserver.v2.DatasetService/RemoveDatasetVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *datasetServiceClient) ListDataItems(ctx context.Context, in *ListDataItemsReq, opts ...grpc.CallOption) (DatasetService_ListDataItemsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_DatasetService_serviceDesc.Streams[0], "/apiserver.v2.DatasetService/ListDataItems", opts...)
	if err != nil {
		return nil, err
	}
	x := &datasetServiceListDataItemsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type DatasetService_ListDataItemsClient interface {
	Recv() (*DataItem, error)
	grpc.ClientStream
}

type datasetServiceListDataItemsClient struct {
	grpc.ClientStream
}

func (x *datasetServiceListDataItemsClient) Recv() (*DataItem, error) {
	m := new(DataItem)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *datasetServiceClient) AppendDataItems(ctx context.Context, opts ...grpc.CallOption) (DatasetService_AppendDataItemsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_DatasetService_serviceDesc.Streams[1], "/apiserver.v2.DatasetService/AppendDataItems", opts...)
	if err != nil {
		return nil, err
	}
	x := &datasetServiceAppendDataItemsClient{stream}
	return x, nil
}

type DatasetService_AppendDataItemsClient interface {
	Send(*AppendDataItemReq) error
	CloseAndRecv() (*AppendDataItemsRes, error)
	grpc.ClientStream
}

type datasetServiceAppendDataItemsClient struct {
	grpc.ClientStream
}

func (x *datasetServiceAppendDataItemsClient) Send(m *AppendDataItemReq) error {
	return x.ClientStream.SendMsg(m)
}

func (x *datasetServiceAppendDataItemsClient) CloseAndRecv() (*AppendDataItemsRes, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(AppendDataItemsRes)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *datasetServiceClient) CreateDatasetVersion(ctx context.Context, in *CreateDatasetVersionReq, opts ...grpc.CallOption) (*DatasetVersion, error) {
	out := new(DatasetVersion)
	err := c.cc.Invoke(ctx, "/apiserver.v2.DatasetService/CreateDatasetVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *datasetServiceClient) PushToDatasetVersion(ctx context.Context, in *PushToDatasetVersionReq, opts ...grpc.CallOption) (*DatasetVersion, error) {
	out := new(DatasetVersion)
	err := c.cc.Invoke(ctx, "/apiserver.v2.DatasetService/PushToDatasetVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *datasetServiceClient) FinalizeDatasetVersion(ctx context.Context, in *FinalizeDatasetVersionReq, opts ...grpc.CallOption) (*DatasetVersion, error) {
	out := new(DatasetVersion)
	err := c.cc.Invoke(ctx, "/apiserver.v2.DatasetService/FinalizeDatasetVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *datasetServiceClient) SearchDataItems(ctx context.Context, in *SearchDataItemsReq, opts ...grpc.CallOption) (DatasetService_SearchDataItemsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_DatasetService_serviceDesc.Streams[2], "/apiserver.v2.DatasetService/SearchDataItems", opts...)
	if err != nil {
		return nil, err
	}
	x := &datasetServiceSearchDataItemsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type DatasetService_SearchDataItemsClient interface {
	Recv() (*DataItem, error)
	grpc.ClientStream
}

type datasetServiceSearchDataItemsClient struct {
	grpc.ClientStream
}

func (x *datasetServiceSearchDataItemsClient) Recv() (*DataItem, error) {
	m := new(DataItem)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// DatasetServiceServer is the server API for DatasetService service.
type DatasetServiceServer interface {
	// dataset crud
	CreateDataset(context.Context, *CreateDatasetReq) (*Dataset, error)
	GetDataset(context.Context, *GetDatasetReq) (*Dataset, error)
	ListDatasets(context.Context, *ListDatasetsReq) (*ListDatasetsRes, error)
	RemoveDataset(context.Context, *RemoveDatasetReq) (*types.Empty, error)
	RemoveDatasetVersion(context.Context, *DatasetVersionRef) (*Dataset, error)
	// dataset content streamings
	ListDataItems(*ListDataItemsReq, DatasetService_ListDataItemsServer) error
	AppendDataItems(DatasetService_AppendDataItemsServer) error
	// multi-step dataset content pushing
	CreateDatasetVersion(context.Context, *CreateDatasetVersionReq) (*DatasetVersion, error)
	PushToDatasetVersion(context.Context, *PushToDatasetVersionReq) (*DatasetVersion, error)
	FinalizeDatasetVersion(context.Context, *FinalizeDatasetVersionReq) (*DatasetVersion, error)
	// search
	SearchDataItems(*SearchDataItemsReq, DatasetService_SearchDataItemsServer) error
}

// UnimplementedDatasetServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDatasetServiceServer struct {
}

func (*UnimplementedDatasetServiceServer) CreateDataset(ctx context.Context, req *CreateDatasetReq) (*Dataset, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDataset not implemented")
}
func (*UnimplementedDatasetServiceServer) GetDataset(ctx context.Context, req *GetDatasetReq) (*Dataset, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDataset not implemented")
}
func (*UnimplementedDatasetServiceServer) ListDatasets(ctx context.Context, req *ListDatasetsReq) (*ListDatasetsRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListDatasets not implemented")
}
func (*UnimplementedDatasetServiceServer) RemoveDataset(ctx context.Context, req *RemoveDatasetReq) (*types.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveDataset not implemented")
}
func (*UnimplementedDatasetServiceServer) RemoveDatasetVersion(ctx context.Context, req *DatasetVersionRef) (*Dataset, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveDatasetVersion not implemented")
}
func (*UnimplementedDatasetServiceServer) ListDataItems(req *ListDataItemsReq, srv DatasetService_ListDataItemsServer) error {
	return status.Errorf(codes.Unimplemented, "method ListDataItems not implemented")
}
func (*UnimplementedDatasetServiceServer) AppendDataItems(srv DatasetService_AppendDataItemsServer) error {
	return status.Errorf(codes.Unimplemented, "method AppendDataItems not implemented")
}
func (*UnimplementedDatasetServiceServer) CreateDatasetVersion(ctx context.Context, req *CreateDatasetVersionReq) (*DatasetVersion, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDatasetVersion not implemented")
}
func (*UnimplementedDatasetServiceServer) PushToDatasetVersion(ctx context.Context, req *PushToDatasetVersionReq) (*DatasetVersion, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PushToDatasetVersion not implemented")
}
func (*UnimplementedDatasetServiceServer) FinalizeDatasetVersion(ctx context.Context, req *FinalizeDatasetVersionReq) (*DatasetVersion, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FinalizeDatasetVersion not implemented")
}
func (*UnimplementedDatasetServiceServer) SearchDataItems(req *SearchDataItemsReq, srv DatasetService_SearchDataItemsServer) error {
	return status.Errorf(codes.Unimplemented, "method SearchDataItems not implemented")
}

func RegisterDatasetServiceServer(s *grpc.Server, srv DatasetServiceServer) {
	s.RegisterService(&_DatasetService_serviceDesc, srv)
}

func _DatasetService_CreateDataset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDatasetReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatasetServiceServer).CreateDataset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apiserver.v2.DatasetService/CreateDataset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatasetServiceServer).CreateDataset(ctx, req.(*CreateDatasetReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _DatasetService_GetDataset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDatasetReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatasetServiceServer).GetDataset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apiserver.v2.DatasetService/GetDataset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatasetServiceServer).GetDataset(ctx, req.(*GetDatasetReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _DatasetService_ListDatasets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListDatasetsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatasetServiceServer).ListDatasets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apiserver.v2.DatasetService/ListDatasets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatasetServiceServer).ListDatasets(ctx, req.(*ListDatasetsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _DatasetService_RemoveDataset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveDatasetReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatasetServiceServer).RemoveDataset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apiserver.v2.DatasetService/RemoveDataset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatasetServiceServer).RemoveDataset(ctx, req.(*RemoveDatasetReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _DatasetService_RemoveDatasetVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DatasetVersionRef)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatasetServiceServer).RemoveDatasetVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apiserver.v2.DatasetService/RemoveDatasetVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatasetServiceServer).RemoveDatasetVersion(ctx, req.(*DatasetVersionRef))
	}
	return interceptor(ctx, in, info, handler)
}

func _DatasetService_ListDataItems_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListDataItemsReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DatasetServiceServer).ListDataItems(m, &datasetServiceListDataItemsServer{stream})
}

type DatasetService_ListDataItemsServer interface {
	Send(*DataItem) error
	grpc.ServerStream
}

type datasetServiceListDataItemsServer struct {
	grpc.ServerStream
}

func (x *datasetServiceListDataItemsServer) Send(m *DataItem) error {
	return x.ServerStream.SendMsg(m)
}

func _DatasetService_AppendDataItems_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(DatasetServiceServer).AppendDataItems(&datasetServiceAppendDataItemsServer{stream})
}

type DatasetService_AppendDataItemsServer interface {
	SendAndClose(*AppendDataItemsRes) error
	Recv() (*AppendDataItemReq, error)
	grpc.ServerStream
}

type datasetServiceAppendDataItemsServer struct {
	grpc.ServerStream
}

func (x *datasetServiceAppendDataItemsServer) SendAndClose(m *AppendDataItemsRes) error {
	return x.ServerStream.SendMsg(m)
}

func (x *datasetServiceAppendDataItemsServer) Recv() (*AppendDataItemReq, error) {
	m := new(AppendDataItemReq)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _DatasetService_CreateDatasetVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDatasetVersionReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatasetServiceServer).CreateDatasetVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apiserver.v2.DatasetService/CreateDatasetVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatasetServiceServer).CreateDatasetVersion(ctx, req.(*CreateDatasetVersionReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _DatasetService_PushToDatasetVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PushToDatasetVersionReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatasetServiceServer).PushToDatasetVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apiserver.v2.DatasetService/PushToDatasetVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatasetServiceServer).PushToDatasetVersion(ctx, req.(*PushToDatasetVersionReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _DatasetService_FinalizeDatasetVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FinalizeDatasetVersionReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatasetServiceServer).FinalizeDatasetVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apiserver.v2.DatasetService/FinalizeDatasetVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatasetServiceServer).FinalizeDatasetVersion(ctx, req.(*FinalizeDatasetVersionReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _DatasetService_SearchDataItems_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SearchDataItemsReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DatasetServiceServer).SearchDataItems(m, &datasetServiceSearchDataItemsServer{stream})
}

type DatasetService_SearchDataItemsServer interface {
	Send(*DataItem) error
	grpc.ServerStream
}

type datasetServiceSearchDataItemsServer struct {
	grpc.ServerStream
}

func (x *datasetServiceSearchDataItemsServer) Send(m *DataItem) error {
	return x.ServerStream.SendMsg(m)
}

var _DatasetService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "apiserver.v2.DatasetService",
	HandlerType: (*DatasetServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateDataset",
			Handler:    _DatasetService_CreateDataset_Handler,
		},
		{
			MethodName: "GetDataset",
			Handler:    _DatasetService_GetDataset_Handler,
		},
		{
			MethodName: "ListDatasets",
			Handler:    _DatasetService_ListDatasets_Handler,
		},
		{
			MethodName: "RemoveDataset",
			Handler:    _DatasetService_RemoveDataset_Handler,
		},
		{
			MethodName: "RemoveDatasetVersion",
			Handler:    _DatasetService_RemoveDatasetVersion_Handler,
		},
		{
			MethodName: "CreateDatasetVersion",
			Handler:    _DatasetService_CreateDatasetVersion_Handler,
		},
		{
			MethodName: "PushToDatasetVersion",
			Handler:    _DatasetService_PushToDatasetVersion_Handler,
		},
		{
			MethodName: "FinalizeDatasetVersion",
			Handler:    _DatasetService_FinalizeDatasetVersion_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListDataItems",
			Handler:       _DatasetService_ListDataItems_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "AppendDataItems",
			Handler:       _DatasetService_AppendDataItems_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "SearchDataItems",
			Handler:       _DatasetService_SearchDataItems_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "dataset.proto",
}

func (this *AppendDataItemReq) GetValue() interface{} {
	if this.Version != nil {
		return this.Version
	}
	if this.Datum != nil {
		return this.Datum
	}
	return nil
}

func (this *AppendDataItemReq) SetValue(value interface{}) bool {
	switch vt := value.(type) {
	case *DatasetVersion:
		this.Version = vt
	case *DataItem:
		this.Datum = vt
	default:
		return false
	}
	return true
}
