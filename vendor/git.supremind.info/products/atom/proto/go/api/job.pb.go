// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: job.proto

package api

import (
	context "context"
	fmt "fmt"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	rpc "github.com/gogo/googleapis/google/rpc"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	field_mask "google.golang.org/genproto/protobuf/field_mask"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type JobKind int32

const (
	UnknownJob           JobKind = 0
	DataflowJob          JobKind = 1
	LegoLogExporterJob   JobKind = 2
	TrainingJob          JobKind = 3
	AnalyzerInferenceJob JobKind = 4
	DistributedJob       JobKind = 5
)

var JobKind_name = map[int32]string{
	0: "UnknownJob",
	1: "DataflowJob",
	2: "LegoLogExporterJob",
	3: "TrainingJob",
	4: "AnalyzerInferenceJob",
	5: "DistributedJob",
}

var JobKind_value = map[string]int32{
	"UnknownJob":           0,
	"DataflowJob":          1,
	"LegoLogExporterJob":   2,
	"TrainingJob":          3,
	"AnalyzerInferenceJob": 4,
	"DistributedJob":       5,
}

func (x JobKind) String() string {
	return proto.EnumName(JobKind_name, int32(x))
}

func (JobKind) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f32c477d91a04ead, []int{0}
}

// Job Phase, see docs/job_phase.md
type JobPhase int32

const (
	PhaseUnset       JobPhase = 0
	PhaseCreated     JobPhase = 1
	PhasePending     JobPhase = 2
	PhaseRunning     JobPhase = 3
	PhaseFailed      JobPhase = 4
	PhaseTerminating JobPhase = 5
	PhaseDone        JobPhase = 6
)

var JobPhase_name = map[int32]string{
	0: "PhaseUnset",
	1: "PhaseCreated",
	2: "PhasePending",
	3: "PhaseRunning",
	4: "PhaseFailed",
	5: "PhaseTerminating",
	6: "PhaseDone",
}

var JobPhase_value = map[string]int32{
	"PhaseUnset":       0,
	"PhaseCreated":     1,
	"PhasePending":     2,
	"PhaseRunning":     3,
	"PhaseFailed":      4,
	"PhaseTerminating": 5,
	"PhaseDone":        6,
}

func (x JobPhase) String() string {
	return proto.EnumName(JobPhase_name, int32(x))
}

func (JobPhase) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f32c477d91a04ead, []int{1}
}

// generic job object
type Job struct {
	*Metadata `protobuf:"bytes,1,opt,name=meta,proto3,embedded=meta" json:"meta,omitempty" bson:",inline"`
	Spec      *JobSpec   `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty" bson:"spec,omitempty"`
	Status    *JobStatus `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty" bson:"status,omitempty"`
}

func (m *Job) Reset()         { *m = Job{} }
func (m *Job) String() string { return proto.CompactTextString(m) }
func (*Job) ProtoMessage()    {}
func (*Job) Descriptor() ([]byte, []int) {
	return fileDescriptor_f32c477d91a04ead, []int{0}
}
func (m *Job) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Job.Unmarshal(m, b)
}
func (m *Job) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Job.Marshal(b, m, deterministic)
}
func (m *Job) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Job.Merge(m, src)
}
func (m *Job) XXX_Size() int {
	return xxx_messageInfo_Job.Size(m)
}
func (m *Job) XXX_DiscardUnknown() {
	xxx_messageInfo_Job.DiscardUnknown(m)
}

var xxx_messageInfo_Job proto.InternalMessageInfo

func (m *Job) GetSpec() *JobSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *Job) GetStatus() *JobStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

type JobSpec struct {
	Kind            JobKind `protobuf:"varint,1,opt,name=kind,proto3,enum=apiserver.v2.JobKind" json:"kind,omitempty" bson:"kind"`
	*JobInstruction `protobuf:"bytes,2,opt,name=instruction,proto3,embedded=instruction" json:"instruction,omitempty" bson:"instruction"`
	*JobCommon      `protobuf:"bytes,3,opt,name=common,proto3,embedded=common" json:"common,omitempty" bson:",inline"`
}

func (m *JobSpec) Reset()         { *m = JobSpec{} }
func (m *JobSpec) String() string { return proto.CompactTextString(m) }
func (*JobSpec) ProtoMessage()    {}
func (*JobSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_f32c477d91a04ead, []int{1}
}
func (m *JobSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobSpec.Unmarshal(m, b)
}
func (m *JobSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobSpec.Marshal(b, m, deterministic)
}
func (m *JobSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobSpec.Merge(m, src)
}
func (m *JobSpec) XXX_Size() int {
	return xxx_messageInfo_JobSpec.Size(m)
}
func (m *JobSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_JobSpec.DiscardUnknown(m)
}

var xxx_messageInfo_JobSpec proto.InternalMessageInfo

func (m *JobSpec) GetKind() JobKind {
	if m != nil {
		return m.Kind
	}
	return UnknownJob
}

// instructions to build a specific job
type JobInstruction struct {
	Dataflow          *Dataflow              `protobuf:"bytes,1,opt,name=dataflow,proto3" json:"dataflow,omitempty" bson:"dataflow,omitempty"`
	Training          *TrainingSpec          `protobuf:"bytes,2,opt,name=training,proto3" json:"training,omitempty" bson:"training,omitempty"`
	AnalyzerInference *AnalyzerInferenceSpec `protobuf:"bytes,3,opt,name=analyzerInference,proto3" json:"analyzerInference,omitempty" bson:"analyzerInference,omitempty"`
	Distributed       *DistributedSpec       `protobuf:"bytes,4,opt,name=distributed,proto3" json:"distributed,omitempty" bson:"distributed,omitempty"`
}

func (m *JobInstruction) Reset()         { *m = JobInstruction{} }
func (m *JobInstruction) String() string { return proto.CompactTextString(m) }
func (*JobInstruction) ProtoMessage()    {}
func (*JobInstruction) Descriptor() ([]byte, []int) {
	return fileDescriptor_f32c477d91a04ead, []int{2}
}
func (m *JobInstruction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobInstruction.Unmarshal(m, b)
}
func (m *JobInstruction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobInstruction.Marshal(b, m, deterministic)
}
func (m *JobInstruction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobInstruction.Merge(m, src)
}
func (m *JobInstruction) XXX_Size() int {
	return xxx_messageInfo_JobInstruction.Size(m)
}
func (m *JobInstruction) XXX_DiscardUnknown() {
	xxx_messageInfo_JobInstruction.DiscardUnknown(m)
}

var xxx_messageInfo_JobInstruction proto.InternalMessageInfo

func (m *JobInstruction) GetDataflow() *Dataflow {
	if m != nil {
		return m.Dataflow
	}
	return nil
}

func (m *JobInstruction) GetTraining() *TrainingSpec {
	if m != nil {
		return m.Training
	}
	return nil
}

func (m *JobInstruction) GetAnalyzerInference() *AnalyzerInferenceSpec {
	if m != nil {
		return m.AnalyzerInference
	}
	return nil
}

func (m *JobInstruction) GetDistributed() *DistributedSpec {
	if m != nil {
		return m.Distributed
	}
	return nil
}

// common specifications of a job
type JobCommon struct {
	Image    string             `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	Command  []string           `protobuf:"bytes,2,rep,name=command,proto3" json:"command,omitempty"`
	Args     []string           `protobuf:"bytes,3,rep,name=args,proto3" json:"args,omitempty"`
	Config   map[string]string  `protobuf:"bytes,4,rep,name=config,proto3" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Env      map[string]string  `protobuf:"bytes,5,rep,name=env,proto3" json:"env,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Package  *ResourceReference `protobuf:"bytes,7,opt,name=package,proto3" json:"package,omitempty"`
	Mounting *JobMounting       `protobuf:"bytes,8,opt,name=mounting,proto3" json:"mounting,omitempty"`
}

func (m *JobCommon) Reset()         { *m = JobCommon{} }
func (m *JobCommon) String() string { return proto.CompactTextString(m) }
func (*JobCommon) ProtoMessage()    {}
func (*JobCommon) Descriptor() ([]byte, []int) {
	return fileDescriptor_f32c477d91a04ead, []int{3}
}
func (m *JobCommon) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobCommon.Unmarshal(m, b)
}
func (m *JobCommon) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobCommon.Marshal(b, m, deterministic)
}
func (m *JobCommon) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobCommon.Merge(m, src)
}
func (m *JobCommon) XXX_Size() int {
	return xxx_messageInfo_JobCommon.Size(m)
}
func (m *JobCommon) XXX_DiscardUnknown() {
	xxx_messageInfo_JobCommon.DiscardUnknown(m)
}

var xxx_messageInfo_JobCommon proto.InternalMessageInfo

func (m *JobCommon) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *JobCommon) GetCommand() []string {
	if m != nil {
		return m.Command
	}
	return nil
}

func (m *JobCommon) GetArgs() []string {
	if m != nil {
		return m.Args
	}
	return nil
}

func (m *JobCommon) GetConfig() map[string]string {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *JobCommon) GetEnv() map[string]string {
	if m != nil {
		return m.Env
	}
	return nil
}

func (m *JobCommon) GetPackage() *ResourceReference {
	if m != nil {
		return m.Package
	}
	return nil
}

func (m *JobCommon) GetMounting() *JobMounting {
	if m != nil {
		return m.Mounting
	}
	return nil
}

// mount storages on jobs
type JobMounting struct {
	Volumes  []*VolumeMounting    `protobuf:"bytes,1,rep,name=volumes,proto3" json:"volumes,omitempty" bson:"volumes,omitempty"`
	Datasets []*DatasetVersionRef `protobuf:"bytes,2,rep,name=datasets,proto3" json:"datasets,omitempty" bson:"datasets,omitempty"`
	Secrets  []*ResourceReference `protobuf:"bytes,3,rep,name=secrets,proto3" json:"secrets,omitempty" bson:"secrets,omitempty"`
	Storages []*StorageMounting   `protobuf:"bytes,4,rep,name=storages,proto3" json:"storages,omitempty" bson:"storages,omitempty"`
}

func (m *JobMounting) Reset()         { *m = JobMounting{} }
func (m *JobMounting) String() string { return proto.CompactTextString(m) }
func (*JobMounting) ProtoMessage()    {}
func (*JobMounting) Descriptor() ([]byte, []int) {
	return fileDescriptor_f32c477d91a04ead, []int{4}
}
func (m *JobMounting) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobMounting.Unmarshal(m, b)
}
func (m *JobMounting) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobMounting.Marshal(b, m, deterministic)
}
func (m *JobMounting) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobMounting.Merge(m, src)
}
func (m *JobMounting) XXX_Size() int {
	return xxx_messageInfo_JobMounting.Size(m)
}
func (m *JobMounting) XXX_DiscardUnknown() {
	xxx_messageInfo_JobMounting.DiscardUnknown(m)
}

var xxx_messageInfo_JobMounting proto.InternalMessageInfo

func (m *JobMounting) GetVolumes() []*VolumeMounting {
	if m != nil {
		return m.Volumes
	}
	return nil
}

func (m *JobMounting) GetDatasets() []*DatasetVersionRef {
	if m != nil {
		return m.Datasets
	}
	return nil
}

func (m *JobMounting) GetSecrets() []*ResourceReference {
	if m != nil {
		return m.Secrets
	}
	return nil
}

func (m *JobMounting) GetStorages() []*StorageMounting {
	if m != nil {
		return m.Storages
	}
	return nil
}

type VolumeMounting struct {
	Volume   *ResourceReference `protobuf:"bytes,1,opt,name=volume,proto3" json:"volume,omitempty" bson:"volume,omitempty"`
	ReadOnly bool               `protobuf:"varint,2,opt,name=readOnly,proto3" json:"readOnly,omitempty"`
}

func (m *VolumeMounting) Reset()         { *m = VolumeMounting{} }
func (m *VolumeMounting) String() string { return proto.CompactTextString(m) }
func (*VolumeMounting) ProtoMessage()    {}
func (*VolumeMounting) Descriptor() ([]byte, []int) {
	return fileDescriptor_f32c477d91a04ead, []int{5}
}
func (m *VolumeMounting) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeMounting.Unmarshal(m, b)
}
func (m *VolumeMounting) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeMounting.Marshal(b, m, deterministic)
}
func (m *VolumeMounting) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeMounting.Merge(m, src)
}
func (m *VolumeMounting) XXX_Size() int {
	return xxx_messageInfo_VolumeMounting.Size(m)
}
func (m *VolumeMounting) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeMounting.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeMounting proto.InternalMessageInfo

func (m *VolumeMounting) GetVolume() *ResourceReference {
	if m != nil {
		return m.Volume
	}
	return nil
}

func (m *VolumeMounting) GetReadOnly() bool {
	if m != nil {
		return m.ReadOnly
	}
	return false
}

type StorageMounting struct {
	Storage  *ResourceReference `protobuf:"bytes,1,opt,name=storage,proto3" json:"storage,omitempty" bson:"storage,omitempty"`
	ReadOnly bool               `protobuf:"varint,2,opt,name=readOnly,proto3" json:"readOnly,omitempty"`
}

func (m *StorageMounting) Reset()         { *m = StorageMounting{} }
func (m *StorageMounting) String() string { return proto.CompactTextString(m) }
func (*StorageMounting) ProtoMessage()    {}
func (*StorageMounting) Descriptor() ([]byte, []int) {
	return fileDescriptor_f32c477d91a04ead, []int{6}
}
func (m *StorageMounting) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StorageMounting.Unmarshal(m, b)
}
func (m *StorageMounting) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StorageMounting.Marshal(b, m, deterministic)
}
func (m *StorageMounting) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StorageMounting.Merge(m, src)
}
func (m *StorageMounting) XXX_Size() int {
	return xxx_messageInfo_StorageMounting.Size(m)
}
func (m *StorageMounting) XXX_DiscardUnknown() {
	xxx_messageInfo_StorageMounting.DiscardUnknown(m)
}

var xxx_messageInfo_StorageMounting proto.InternalMessageInfo

func (m *StorageMounting) GetStorage() *ResourceReference {
	if m != nil {
		return m.Storage
	}
	return nil
}

func (m *StorageMounting) GetReadOnly() bool {
	if m != nil {
		return m.ReadOnly
	}
	return false
}

type JobStatus struct {
	Phase             JobPhase                 `protobuf:"varint,1,opt,name=phase,proto3,enum=apiserver.v2.JobPhase" json:"phase,omitempty" bson:"phase"`
	Progress          *JobProgress             `protobuf:"bytes,2,opt,name=progress,proto3" json:"progress,omitempty" bson:"progress,omitempty"`
	Result            *JobResult               `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty" bson:"result,omitempty"`
	Training          *TrainingStatus          `protobuf:"bytes,4,opt,name=training,proto3" json:"training,omitempty" bson:"training,omitempty"`
	Resource          *PackageSpec             `protobuf:"bytes,5,opt,name=resource,proto3" json:"resource,omitempty" bson:"resource,omitempty"`
	AnalyzerInference *AnalyzerInferenceStatus `protobuf:"bytes,6,opt,name=analyzerInference,proto3" json:"analyzerInference,omitempty" bson:"analyzerInference,omitempty"`
	Distributed       *DistributedStatus       `protobuf:"bytes,7,opt,name=distributed,proto3" json:"distributed,omitempty" bson:"distributed,omitempty"`
}

func (m *JobStatus) Reset()         { *m = JobStatus{} }
func (m *JobStatus) String() string { return proto.CompactTextString(m) }
func (*JobStatus) ProtoMessage()    {}
func (*JobStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_f32c477d91a04ead, []int{7}
}
func (m *JobStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobStatus.Unmarshal(m, b)
}
func (m *JobStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobStatus.Marshal(b, m, deterministic)
}
func (m *JobStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobStatus.Merge(m, src)
}
func (m *JobStatus) XXX_Size() int {
	return xxx_messageInfo_JobStatus.Size(m)
}
func (m *JobStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_JobStatus.DiscardUnknown(m)
}

var xxx_messageInfo_JobStatus proto.InternalMessageInfo

func (m *JobStatus) GetPhase() JobPhase {
	if m != nil {
		return m.Phase
	}
	return PhaseUnset
}

func (m *JobStatus) GetProgress() *JobProgress {
	if m != nil {
		return m.Progress
	}
	return nil
}

func (m *JobStatus) GetResult() *JobResult {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *JobStatus) GetTraining() *TrainingStatus {
	if m != nil {
		return m.Training
	}
	return nil
}

func (m *JobStatus) GetResource() *PackageSpec {
	if m != nil {
		return m.Resource
	}
	return nil
}

func (m *JobStatus) GetAnalyzerInference() *AnalyzerInferenceStatus {
	if m != nil {
		return m.AnalyzerInference
	}
	return nil
}

func (m *JobStatus) GetDistributed() *DistributedStatus {
	if m != nil {
		return m.Distributed
	}
	return nil
}

// record progress of file size, task count or anything like
type JobProgress struct {
	Total   int64 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty" bson:"total,omitempty"`
	Done    int64 `protobuf:"varint,2,opt,name=done,proto3" json:"done,omitempty" bson:"done,omitempty"`
	Skipped int64 `protobuf:"varint,3,opt,name=skipped,proto3" json:"skipped,omitempty" bson:"skipped,omitempty"`
	Failed  int64 `protobuf:"varint,4,opt,name=failed,proto3" json:"failed,omitempty" bson:"failed,omitempty"`
}

func (m *JobProgress) Reset()         { *m = JobProgress{} }
func (m *JobProgress) String() string { return proto.CompactTextString(m) }
func (*JobProgress) ProtoMessage()    {}
func (*JobProgress) Descriptor() ([]byte, []int) {
	return fileDescriptor_f32c477d91a04ead, []int{8}
}
func (m *JobProgress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobProgress.Unmarshal(m, b)
}
func (m *JobProgress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobProgress.Marshal(b, m, deterministic)
}
func (m *JobProgress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobProgress.Merge(m, src)
}
func (m *JobProgress) XXX_Size() int {
	return xxx_messageInfo_JobProgress.Size(m)
}
func (m *JobProgress) XXX_DiscardUnknown() {
	xxx_messageInfo_JobProgress.DiscardUnknown(m)
}

var xxx_messageInfo_JobProgress proto.InternalMessageInfo

func (m *JobProgress) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *JobProgress) GetDone() int64 {
	if m != nil {
		return m.Done
	}
	return 0
}

func (m *JobProgress) GetSkipped() int64 {
	if m != nil {
		return m.Skipped
	}
	return 0
}

func (m *JobProgress) GetFailed() int64 {
	if m != nil {
		return m.Failed
	}
	return 0
}

type JobResult struct {
	Status   *rpc.Status   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty" bson:"status,omitempty"`
	Response *types.Struct `protobuf:"bytes,2,opt,name=response,proto3" json:"response,omitempty" bson:"response,omitempty"`
}

func (m *JobResult) Reset()         { *m = JobResult{} }
func (m *JobResult) String() string { return proto.CompactTextString(m) }
func (*JobResult) ProtoMessage()    {}
func (*JobResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_f32c477d91a04ead, []int{9}
}
func (m *JobResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobResult.Unmarshal(m, b)
}
func (m *JobResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobResult.Marshal(b, m, deterministic)
}
func (m *JobResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobResult.Merge(m, src)
}
func (m *JobResult) XXX_Size() int {
	return xxx_messageInfo_JobResult.Size(m)
}
func (m *JobResult) XXX_DiscardUnknown() {
	xxx_messageInfo_JobResult.DiscardUnknown(m)
}

var xxx_messageInfo_JobResult proto.InternalMessageInfo

func (m *JobResult) GetStatus() *rpc.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *JobResult) GetResponse() *types.Struct {
	if m != nil {
		return m.Response
	}
	return nil
}

type CreateJobReq struct {
	Job *Job `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
}

func (m *CreateJobReq) Reset()         { *m = CreateJobReq{} }
func (m *CreateJobReq) String() string { return proto.CompactTextString(m) }
func (*CreateJobReq) ProtoMessage()    {}
func (*CreateJobReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_f32c477d91a04ead, []int{10}
}
func (m *CreateJobReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateJobReq.Unmarshal(m, b)
}
func (m *CreateJobReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateJobReq.Marshal(b, m, deterministic)
}
func (m *CreateJobReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateJobReq.Merge(m, src)
}
func (m *CreateJobReq) XXX_Size() int {
	return xxx_messageInfo_CreateJobReq.Size(m)
}
func (m *CreateJobReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateJobReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateJobReq proto.InternalMessageInfo

func (m *CreateJobReq) GetJob() *Job {
	if m != nil {
		return m.Job
	}
	return nil
}

type GetJobReq struct {
	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Creator string `protobuf:"bytes,2,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *GetJobReq) Reset()         { *m = GetJobReq{} }
func (m *GetJobReq) String() string { return proto.CompactTextString(m) }
func (*GetJobReq) ProtoMessage()    {}
func (*GetJobReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_f32c477d91a04ead, []int{11}
}
func (m *GetJobReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetJobReq.Unmarshal(m, b)
}
func (m *GetJobReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetJobReq.Marshal(b, m, deterministic)
}
func (m *GetJobReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetJobReq.Merge(m, src)
}
func (m *GetJobReq) XXX_Size() int {
	return xxx_messageInfo_GetJobReq.Size(m)
}
func (m *GetJobReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetJobReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetJobReq proto.InternalMessageInfo

func (m *GetJobReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetJobReq) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

type ListJobsReq struct {
	Owner   *ResourceReference `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	Creator string             `protobuf:"bytes,2,opt,name=creator,proto3" json:"creator,omitempty"`
	Kind    JobKind            `protobuf:"varint,3,opt,name=kind,proto3,enum=apiserver.v2.JobKind" json:"kind,omitempty"`
	InKinds []JobKind          `protobuf:"varint,6,rep,packed,name=inKinds,proto3,enum=apiserver.v2.JobKind" json:"inKinds,omitempty"`
	Phase   JobPhase           `protobuf:"varint,4,opt,name=phase,proto3,enum=apiserver.v2.JobPhase" json:"phase,omitempty"`
	Pager   *PagerReq          `protobuf:"bytes,5,opt,name=pager,proto3" json:"pager,omitempty"`
}

func (m *ListJobsReq) Reset()         { *m = ListJobsReq{} }
func (m *ListJobsReq) String() string { return proto.CompactTextString(m) }
func (*ListJobsReq) ProtoMessage()    {}
func (*ListJobsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_f32c477d91a04ead, []int{12}
}
func (m *ListJobsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListJobsReq.Unmarshal(m, b)
}
func (m *ListJobsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListJobsReq.Marshal(b, m, deterministic)
}
func (m *ListJobsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListJobsReq.Merge(m, src)
}
func (m *ListJobsReq) XXX_Size() int {
	return xxx_messageInfo_ListJobsReq.Size(m)
}
func (m *ListJobsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListJobsReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListJobsReq proto.InternalMessageInfo

func (m *ListJobsReq) GetOwner() *ResourceReference {
	if m != nil {
		return m.Owner
	}
	return nil
}

func (m *ListJobsReq) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *ListJobsReq) GetKind() JobKind {
	if m != nil {
		return m.Kind
	}
	return UnknownJob
}

func (m *ListJobsReq) GetInKinds() []JobKind {
	if m != nil {
		return m.InKinds
	}
	return nil
}

func (m *ListJobsReq) GetPhase() JobPhase {
	if m != nil {
		return m.Phase
	}
	return PhaseUnset
}

func (m *ListJobsReq) GetPager() *PagerReq {
	if m != nil {
		return m.Pager
	}
	return nil
}

type ListJobsRes struct {
	Jobs  []*Job    `protobuf:"bytes,1,rep,name=jobs,proto3" json:"jobs,omitempty"`
	Pager *PagerRes `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager,omitempty"`
}

func (m *ListJobsRes) Reset()         { *m = ListJobsRes{} }
func (m *ListJobsRes) String() string { return proto.CompactTextString(m) }
func (*ListJobsRes) ProtoMessage()    {}
func (*ListJobsRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_f32c477d91a04ead, []int{13}
}
func (m *ListJobsRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListJobsRes.Unmarshal(m, b)
}
func (m *ListJobsRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListJobsRes.Marshal(b, m, deterministic)
}
func (m *ListJobsRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListJobsRes.Merge(m, src)
}
func (m *ListJobsRes) XXX_Size() int {
	return xxx_messageInfo_ListJobsRes.Size(m)
}
func (m *ListJobsRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ListJobsRes.DiscardUnknown(m)
}

var xxx_messageInfo_ListJobsRes proto.InternalMessageInfo

func (m *ListJobsRes) GetJobs() []*Job {
	if m != nil {
		return m.Jobs
	}
	return nil
}

func (m *ListJobsRes) GetPager() *PagerRes {
	if m != nil {
		return m.Pager
	}
	return nil
}

type UpdateJobReq struct {
	Job       *Job                  `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	FieldMask *field_mask.FieldMask `protobuf:"bytes,2,opt,name=fieldMask,proto3" json:"fieldMask,omitempty"`
}

func (m *UpdateJobReq) Reset()         { *m = UpdateJobReq{} }
func (m *UpdateJobReq) String() string { return proto.CompactTextString(m) }
func (*UpdateJobReq) ProtoMessage()    {}
func (*UpdateJobReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_f32c477d91a04ead, []int{14}
}
func (m *UpdateJobReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateJobReq.Unmarshal(m, b)
}
func (m *UpdateJobReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateJobReq.Marshal(b, m, deterministic)
}
func (m *UpdateJobReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateJobReq.Merge(m, src)
}
func (m *UpdateJobReq) XXX_Size() int {
	return xxx_messageInfo_UpdateJobReq.Size(m)
}
func (m *UpdateJobReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateJobReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateJobReq proto.InternalMessageInfo

func (m *UpdateJobReq) GetJob() *Job {
	if m != nil {
		return m.Job
	}
	return nil
}

func (m *UpdateJobReq) GetFieldMask() *field_mask.FieldMask {
	if m != nil {
		return m.FieldMask
	}
	return nil
}

type StartJobReq struct {
	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Creator string `protobuf:"bytes,2,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *StartJobReq) Reset()         { *m = StartJobReq{} }
func (m *StartJobReq) String() string { return proto.CompactTextString(m) }
func (*StartJobReq) ProtoMessage()    {}
func (*StartJobReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_f32c477d91a04ead, []int{15}
}
func (m *StartJobReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartJobReq.Unmarshal(m, b)
}
func (m *StartJobReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartJobReq.Marshal(b, m, deterministic)
}
func (m *StartJobReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartJobReq.Merge(m, src)
}
func (m *StartJobReq) XXX_Size() int {
	return xxx_messageInfo_StartJobReq.Size(m)
}
func (m *StartJobReq) XXX_DiscardUnknown() {
	xxx_messageInfo_StartJobReq.DiscardUnknown(m)
}

var xxx_messageInfo_StartJobReq proto.InternalMessageInfo

func (m *StartJobReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *StartJobReq) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

type StopJobReq struct {
	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Creator string `protobuf:"bytes,2,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *StopJobReq) Reset()         { *m = StopJobReq{} }
func (m *StopJobReq) String() string { return proto.CompactTextString(m) }
func (*StopJobReq) ProtoMessage()    {}
func (*StopJobReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_f32c477d91a04ead, []int{16}
}
func (m *StopJobReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopJobReq.Unmarshal(m, b)
}
func (m *StopJobReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopJobReq.Marshal(b, m, deterministic)
}
func (m *StopJobReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopJobReq.Merge(m, src)
}
func (m *StopJobReq) XXX_Size() int {
	return xxx_messageInfo_StopJobReq.Size(m)
}
func (m *StopJobReq) XXX_DiscardUnknown() {
	xxx_messageInfo_StopJobReq.DiscardUnknown(m)
}

var xxx_messageInfo_StopJobReq proto.InternalMessageInfo

func (m *StopJobReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *StopJobReq) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

type RemoveJobReq struct {
	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Creator string `protobuf:"bytes,2,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *RemoveJobReq) Reset()         { *m = RemoveJobReq{} }
func (m *RemoveJobReq) String() string { return proto.CompactTextString(m) }
func (*RemoveJobReq) ProtoMessage()    {}
func (*RemoveJobReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_f32c477d91a04ead, []int{17}
}
func (m *RemoveJobReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveJobReq.Unmarshal(m, b)
}
func (m *RemoveJobReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveJobReq.Marshal(b, m, deterministic)
}
func (m *RemoveJobReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveJobReq.Merge(m, src)
}
func (m *RemoveJobReq) XXX_Size() int {
	return xxx_messageInfo_RemoveJobReq.Size(m)
}
func (m *RemoveJobReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveJobReq.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveJobReq proto.InternalMessageInfo

func (m *RemoveJobReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RemoveJobReq) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

type ReportProgressReq struct {
	Name     string       `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Creator  string       `protobuf:"bytes,2,opt,name=creator,proto3" json:"creator,omitempty"`
	Progress *JobProgress `protobuf:"bytes,3,opt,name=progress,proto3" json:"progress,omitempty"`
}

func (m *ReportProgressReq) Reset()         { *m = ReportProgressReq{} }
func (m *ReportProgressReq) String() string { return proto.CompactTextString(m) }
func (*ReportProgressReq) ProtoMessage()    {}
func (*ReportProgressReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_f32c477d91a04ead, []int{18}
}
func (m *ReportProgressReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReportProgressReq.Unmarshal(m, b)
}
func (m *ReportProgressReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReportProgressReq.Marshal(b, m, deterministic)
}
func (m *ReportProgressReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReportProgressReq.Merge(m, src)
}
func (m *ReportProgressReq) XXX_Size() int {
	return xxx_messageInfo_ReportProgressReq.Size(m)
}
func (m *ReportProgressReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ReportProgressReq.DiscardUnknown(m)
}

var xxx_messageInfo_ReportProgressReq proto.InternalMessageInfo

func (m *ReportProgressReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ReportProgressReq) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *ReportProgressReq) GetProgress() *JobProgress {
	if m != nil {
		return m.Progress
	}
	return nil
}

func init() {
	proto.RegisterEnum("apiserver.v2.JobKind", JobKind_name, JobKind_value)
	proto.RegisterEnum("apiserver.v2.JobPhase", JobPhase_name, JobPhase_value)
	proto.RegisterType((*Job)(nil), "apiserver.v2.Job")
	proto.RegisterType((*JobSpec)(nil), "apiserver.v2.JobSpec")
	proto.RegisterType((*JobInstruction)(nil), "apiserver.v2.JobInstruction")
	proto.RegisterType((*JobCommon)(nil), "apiserver.v2.JobCommon")
	proto.RegisterMapType((map[string]string)(nil), "apiserver.v2.JobCommon.ConfigEntry")
	proto.RegisterMapType((map[string]string)(nil), "apiserver.v2.JobCommon.EnvEntry")
	proto.RegisterType((*JobMounting)(nil), "apiserver.v2.JobMounting")
	proto.RegisterType((*VolumeMounting)(nil), "apiserver.v2.VolumeMounting")
	proto.RegisterType((*StorageMounting)(nil), "apiserver.v2.StorageMounting")
	proto.RegisterType((*JobStatus)(nil), "apiserver.v2.JobStatus")
	proto.RegisterType((*JobProgress)(nil), "apiserver.v2.JobProgress")
	proto.RegisterType((*JobResult)(nil), "apiserver.v2.JobResult")
	proto.RegisterType((*CreateJobReq)(nil), "apiserver.v2.CreateJobReq")
	proto.RegisterType((*GetJobReq)(nil), "apiserver.v2.GetJobReq")
	proto.RegisterType((*ListJobsReq)(nil), "apiserver.v2.ListJobsReq")
	proto.RegisterType((*ListJobsRes)(nil), "apiserver.v2.ListJobsRes")
	proto.RegisterType((*UpdateJobReq)(nil), "apiserver.v2.UpdateJobReq")
	proto.RegisterType((*StartJobReq)(nil), "apiserver.v2.StartJobReq")
	proto.RegisterType((*StopJobReq)(nil), "apiserver.v2.StopJobReq")
	proto.RegisterType((*RemoveJobReq)(nil), "apiserver.v2.RemoveJobReq")
	proto.RegisterType((*ReportProgressReq)(nil), "apiserver.v2.ReportProgressReq")
}

func init() { proto.RegisterFile("job.proto", fileDescriptor_f32c477d91a04ead) }

var fileDescriptor_f32c477d91a04ead = []byte{
	// 1784 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x58, 0xcd, 0x6f, 0x1b, 0xc7,
	0x15, 0xd7, 0x72, 0xf9, 0xf9, 0xa8, 0xc8, 0xf4, 0xc0, 0x91, 0x68, 0xc6, 0x11, 0x85, 0x0d, 0x52,
	0xa4, 0x81, 0x45, 0x15, 0x76, 0x63, 0xc4, 0x4a, 0x81, 0x34, 0xb4, 0xec, 0x20, 0xaa, 0x8d, 0xb8,
	0x2b, 0x39, 0x29, 0x72, 0x29, 0x96, 0xe4, 0x68, 0xb3, 0x16, 0x39, 0xb3, 0x99, 0x59, 0xd2, 0x66,
	0x7b, 0xaa, 0x0f, 0x41, 0xd1, 0x53, 0x4f, 0x3d, 0x16, 0x3d, 0x16, 0xe8, 0x3f, 0xd2, 0xa3, 0x8f,
	0x05, 0x0a, 0x10, 0x28, 0x8c, 0xfe, 0x03, 0x04, 0x7a, 0xc9, 0xa9, 0x98, 0xaf, 0xd5, 0xec, 0x2e,
	0x65, 0x5b, 0xce, 0x6d, 0xe7, 0xbd, 0xf7, 0x7b, 0xef, 0xed, 0x9b, 0xf7, 0xb5, 0x0b, 0x8d, 0xc7,
	0x74, 0xd0, 0x8b, 0x19, 0x4d, 0x28, 0x5a, 0x0f, 0xe2, 0x88, 0x63, 0x36, 0xc3, 0xac, 0x37, 0xbb,
	0xd1, 0xd9, 0x0d, 0xa3, 0xe4, 0xdb, 0xe9, 0xa0, 0x37, 0xa4, 0x93, 0xbd, 0x90, 0x86, 0x74, 0x4f,
	0x0a, 0x0d, 0xa6, 0x27, 0xf2, 0x24, 0x0f, 0xf2, 0x49, 0x81, 0x3b, 0x9f, 0x59, 0xe2, 0x98, 0xcc,
	0xe8, 0x3c, 0x66, 0xf4, 0xe9, 0x5c, 0x81, 0x86, 0xbb, 0x21, 0x26, 0xbb, 0xb3, 0x60, 0x1c, 0x8d,
	0x82, 0x04, 0xef, 0x15, 0x1e, 0xb4, 0x8a, 0x6b, 0x21, 0xa5, 0xe1, 0x18, 0x9f, 0x19, 0xe2, 0x09,
	0x9b, 0x0e, 0x13, 0xcd, 0x7d, 0x27, 0xcf, 0xc5, 0x93, 0x38, 0x99, 0x6b, 0xe6, 0x4e, 0x9e, 0x79,
	0x12, 0xe1, 0xf1, 0xe8, 0xb7, 0x93, 0x80, 0x9f, 0x6a, 0x89, 0x2d, 0x2d, 0xc1, 0xe2, 0xe1, 0x1e,
	0x4f, 0x82, 0x64, 0xca, 0x35, 0x03, 0x26, 0x38, 0x09, 0xf4, 0xf3, 0x5b, 0xa3, 0x20, 0x09, 0x38,
	0x36, 0x26, 0x37, 0x12, 0x16, 0x44, 0x24, 0x22, 0xa1, 0x61, 0xc7, 0xc1, 0xf0, 0x34, 0x08, 0x8d,
	0xbf, 0x97, 0x22, 0x72, 0x82, 0x19, 0x26, 0x43, 0x43, 0xb8, 0x3c, 0x8a, 0x78, 0xc2, 0xa2, 0xc1,
	0x34, 0xc1, 0x23, 0x45, 0xf2, 0xfe, 0xeb, 0x80, 0x7b, 0x48, 0x07, 0xe8, 0x10, 0xca, 0xc2, 0x4e,
	0xdb, 0xd9, 0x71, 0x3e, 0x68, 0xde, 0xd8, 0xec, 0xd9, 0xa1, 0xee, 0x3d, 0xc0, 0x49, 0x20, 0x2c,
	0xf7, 0xb7, 0x7f, 0xe8, 0x57, 0xfe, 0xe4, 0x94, 0xea, 0xce, 0xf3, 0x45, 0xd7, 0x59, 0x2e, 0xba,
	0x1b, 0x03, 0x4e, 0xc9, 0xbe, 0x77, 0x3d, 0x22, 0xe3, 0x88, 0x60, 0xcf, 0x97, 0x3a, 0xd0, 0x01,
	0x94, 0x79, 0x8c, 0x87, 0xed, 0x92, 0xd4, 0xf5, 0x76, 0x56, 0xd7, 0x21, 0x1d, 0x1c, 0xc5, 0x78,
	0xd8, 0xbf, 0xba, 0x5c, 0x74, 0xdf, 0x56, 0x70, 0x21, 0x7c, 0x9d, 0x4e, 0xa2, 0x44, 0x46, 0xcc,
	0xf3, 0x25, 0x1a, 0xdd, 0x87, 0xaa, 0x8a, 0x43, 0xdb, 0x95, 0x7a, 0xb6, 0x8a, 0x7a, 0x24, 0xbb,
	0xff, 0xce, 0x72, 0xd1, 0xdd, 0xd2, 0x9a, 0x24, 0xc5, 0xd6, 0xa5, 0x75, 0x78, 0xcf, 0x4a, 0x50,
	0xd3, 0xa6, 0x51, 0x1f, 0xca, 0xa7, 0x11, 0x19, 0xc9, 0x77, 0xdd, 0x58, 0xe1, 0xdf, 0xaf, 0x22,
	0x32, 0xea, 0x6f, 0xfd, 0xd0, 0xaf, 0x3c, 0x73, 0x4a, 0x2d, 0xf1, 0x9a, 0x4d, 0xa5, 0x5d, 0x80,
	0x3c, 0x5f, 0x62, 0xd1, 0x00, 0x9a, 0x11, 0x51, 0xf7, 0x1f, 0x51, 0xa2, 0x5f, 0xf5, 0x5a, 0x41,
	0xd5, 0x17, 0x67, 0x32, 0x7d, 0x2f, 0x17, 0x3c, 0xa4, 0xb4, 0x5a, 0x6a, 0x3c, 0xdf, 0x56, 0x8a,
	0xbe, 0x84, 0xea, 0x90, 0x4e, 0x26, 0x94, 0x9c, 0x1b, 0x81, 0x3b, 0x92, 0xfd, 0xca, 0x6b, 0xd1,
	0x6a, 0xbc, 0xbf, 0xba, 0xb0, 0x91, 0x75, 0x0a, 0xfd, 0x1a, 0xea, 0xe2, 0x66, 0x4f, 0xc6, 0xf4,
	0xc9, 0xea, 0xbb, 0x3f, 0xd0, 0xdc, 0xfe, 0xbb, 0xcb, 0x45, 0xf7, 0xaa, 0x52, 0x6c, 0x10, 0x76,
	0xa0, 0x53, 0x35, 0xe8, 0x11, 0xd4, 0x4d, 0x5e, 0xea, 0xb8, 0x74, 0xb2, 0x2a, 0x8f, 0x35, 0x57,
	0xe6, 0x81, 0xa5, 0xd6, 0xa0, 0x32, 0x6a, 0x0d, 0x11, 0xcd, 0xe1, 0x72, 0x40, 0x82, 0xf1, 0xfc,
	0x77, 0x98, 0x7d, 0x61, 0xf2, 0x5a, 0x07, 0xe6, 0xbd, 0xac, 0xfe, 0xcf, 0xf2, 0x62, 0xd2, 0xd0,
	0x4f, 0x96, 0x8b, 0xae, 0xa7, 0x0c, 0x15, 0xf4, 0xd8, 0x16, 0x8b, 0x56, 0x50, 0x00, 0x4d, 0xab,
	0x72, 0xda, 0x65, 0x69, 0xf4, 0xdd, 0x5c, 0x9c, 0xce, 0x04, 0xa4, 0xb9, 0x9d, 0xe5, 0xa2, 0x7b,
	0x4d, 0x87, 0xeb, 0x8c, 0x65, 0x1b, 0xb2, 0x75, 0xee, 0x97, 0xff, 0xf9, 0xb7, 0xae, 0xe3, 0xfd,
	0xc3, 0x85, 0x46, 0x7a, 0xad, 0xe8, 0x0a, 0x54, 0xa2, 0x49, 0x10, 0x62, 0x79, 0x31, 0x0d, 0x5f,
	0x1d, 0x50, 0x1b, 0x6a, 0xe2, 0x3a, 0x03, 0x32, 0x6a, 0x97, 0x76, 0xdc, 0x0f, 0x1a, 0xbe, 0x39,
	0x22, 0x04, 0xe5, 0x80, 0x85, 0xa2, 0x5e, 0x04, 0x59, 0x3e, 0xa3, 0x4f, 0x44, 0x0e, 0x91, 0x93,
	0x28, 0x6c, 0x97, 0x77, 0xdc, 0x62, 0xa8, 0x52, 0x63, 0xbd, 0x3b, 0x52, 0xea, 0x2e, 0x49, 0xd8,
	0xdc, 0xd7, 0x10, 0x74, 0x03, 0x5c, 0x4c, 0x66, 0xed, 0x8a, 0x44, 0xee, 0x9c, 0x87, 0xbc, 0x4b,
	0x66, 0x0a, 0x26, 0x84, 0xd1, 0x6d, 0xa8, 0xe9, 0x2e, 0xd4, 0xae, 0xc9, 0x38, 0x75, 0xb3, 0x38,
	0x1f, 0x73, 0x3a, 0x65, 0x43, 0xec, 0x63, 0x1d, 0x5d, 0xdf, 0xc8, 0xa3, 0x8f, 0xa0, 0x3e, 0xa1,
	0x53, 0x92, 0x88, 0xc4, 0xa9, 0x4b, 0xec, 0xd5, 0x82, 0xcd, 0x07, 0x5a, 0xc0, 0x4f, 0x45, 0x3b,
	0xb7, 0xa1, 0x69, 0x39, 0x8f, 0x5a, 0xe0, 0x9e, 0xe2, 0xb9, 0x8e, 0x99, 0x78, 0x14, 0x71, 0x9c,
	0x05, 0xe3, 0x29, 0x96, 0xd9, 0xd8, 0xf0, 0xd5, 0x61, 0xbf, 0xf4, 0xb1, 0xd3, 0xb9, 0x05, 0x75,
	0xe3, 0xfd, 0x45, 0x70, 0x87, 0xe5, 0x7a, 0xb5, 0x55, 0xf3, 0x96, 0x25, 0x68, 0x5a, 0x2e, 0xa1,
	0x63, 0xa8, 0xcd, 0xe8, 0x78, 0x3a, 0xc1, 0xbc, 0xed, 0xc8, 0x90, 0xe5, 0xfa, 0xc1, 0x57, 0x92,
	0x69, 0xc4, 0xfb, 0xd7, 0x96, 0x8b, 0x6e, 0x5b, 0x65, 0x88, 0x86, 0xd9, 0xd9, 0x61, 0x54, 0xa1,
	0x6f, 0x54, 0x85, 0x72, 0x9c, 0x70, 0x79, 0xe1, 0x85, 0x88, 0x1e, 0x28, 0xee, 0x57, 0x98, 0xf1,
	0x88, 0x12, 0x1f, 0x9f, 0xe4, 0x4b, 0x55, 0x40, 0x0b, 0xa5, 0x2a, 0x88, 0xe8, 0x6b, 0xa8, 0x71,
	0x3c, 0x64, 0x42, 0xb5, 0xbb, 0x4a, 0x75, 0xe1, 0xb2, 0x6c, 0xa7, 0x35, 0x32, 0xe3, 0xb4, 0xa6,
	0xa1, 0xdf, 0x40, 0x9d, 0x27, 0x94, 0x05, 0x21, 0xe6, 0x3a, 0xf1, 0x72, 0xe5, 0x72, 0xa4, 0xb8,
	0x69, 0x30, 0x2c, 0x97, 0x0d, 0x30, 0xe3, 0xb2, 0x21, 0x7a, 0xcf, 0x1c, 0xd8, 0xc8, 0x06, 0x12,
	0x1d, 0x43, 0x55, 0x05, 0x4b, 0x77, 0xb0, 0x57, 0xbe, 0x84, 0x35, 0x31, 0x14, 0x30, 0x33, 0x31,
	0x14, 0x09, 0x75, 0xa0, 0xce, 0x70, 0x30, 0xfa, 0x92, 0x8c, 0xe7, 0x32, 0x01, 0xea, 0x7e, 0x7a,
	0xf6, 0xbe, 0x77, 0xe0, 0x52, 0xee, 0x0d, 0x64, 0x2c, 0x15, 0xe9, 0x75, 0xdd, 0xb0, 0x63, 0xa9,
	0x90, 0xd9, 0x58, 0x2a, 0xda, 0x4b, 0x1d, 0xf9, 0x63, 0x45, 0x36, 0x0c, 0x35, 0x09, 0xd1, 0x3d,
	0xa8, 0xc4, 0xdf, 0x06, 0x1c, 0xeb, 0xc9, 0xb6, 0x59, 0xa8, 0x9e, 0x87, 0x82, 0xdb, 0x6f, 0x5b,
	0xa3, 0x6d, 0x5d, 0xd9, 0x97, 0x30, 0xcf, 0x57, 0x70, 0x74, 0x0c, 0xf5, 0x98, 0xd1, 0x90, 0x61,
	0xce, 0x75, 0x07, 0x2f, 0x16, 0xe2, 0x43, 0x2d, 0x60, 0xdf, 0x9c, 0x01, 0x65, 0x6e, 0xce, 0x10,
	0xc5, 0x40, 0x67, 0x98, 0x4f, 0xc7, 0xc9, 0xb9, 0xe3, 0xcc, 0x97, 0x6c, 0xfb, 0x7a, 0x14, 0x20,
	0x73, 0x3d, 0x8a, 0x84, 0xbe, 0xb6, 0xa6, 0x4c, 0x79, 0xd5, 0xf4, 0x4d, 0xa7, 0x8c, 0xda, 0x12,
	0x5e, 0x7b, 0xce, 0x1c, 0x8b, 0x70, 0xab, 0xab, 0x6a, 0x57, 0x56, 0xbd, 0xfc, 0x43, 0xd5, 0xae,
	0xf2, 0xd3, 0xcb, 0x80, 0x32, 0x5a, 0x0d, 0x11, 0xfd, 0x7e, 0xd5, 0xf4, 0xaa, 0x4a, 0xf5, 0xef,
	0xbf, 0x6a, 0x7a, 0xa9, 0x17, 0xf8, 0x11, 0xf3, 0x6b, 0x98, 0x9d, 0x5f, 0x2b, 0xfb, 0xb2, 0x3d,
	0xbf, 0x94, 0xc1, 0x8b, 0x4d, 0x30, 0xef, 0xdf, 0x8e, 0xec, 0x86, 0x26, 0x2f, 0xd0, 0xcf, 0xa0,
	0x92, 0xd0, 0x24, 0x18, 0xcb, 0x64, 0x74, 0xfb, 0x9d, 0xe5, 0xa2, 0xbb, 0xa9, 0xe3, 0x2f, 0xc8,
	0xb6, 0x1e, 0x25, 0x88, 0x76, 0xa1, 0x3c, 0xa2, 0x44, 0xb5, 0x5b, 0xd7, 0x5e, 0x10, 0x05, 0x35,
	0xb3, 0x20, 0x0a, 0x02, 0xba, 0x05, 0x35, 0x7e, 0x1a, 0xc5, 0x31, 0x1e, 0xc9, 0x84, 0x72, 0x33,
	0xf5, 0xa4, 0x18, 0xd9, 0x7a, 0x52, 0x34, 0x74, 0x13, 0xaa, 0x27, 0x41, 0x34, 0xd6, 0x83, 0xdc,
	0xb5, 0xd3, 0x4d, 0xd1, 0x33, 0xe9, 0xa6, 0x48, 0xde, 0xdf, 0x1d, 0x59, 0x68, 0x2a, 0x43, 0xd1,
	0xe7, 0xe9, 0x6e, 0xaa, 0x4a, 0x1d, 0xf5, 0xd4, 0xf6, 0xde, 0x63, 0xf1, 0xb0, 0x77, 0x81, 0xb5,
	0x14, 0xf9, 0x32, 0xd9, 0x62, 0x4a, 0x38, 0xd6, 0x95, 0xb6, 0x65, 0x54, 0x99, 0x4f, 0x85, 0xde,
	0x91, 0x5c, 0xd6, 0x72, 0xa9, 0x26, 0x21, 0xf9, 0x54, 0x93, 0x44, 0xef, 0x26, 0xac, 0xdf, 0x61,
	0x38, 0x48, 0xb0, 0xf4, 0xf7, 0x3b, 0xf4, 0x1e, 0xb8, 0x8f, 0xe9, 0x40, 0x7b, 0x7a, 0xb9, 0x58,
	0x74, 0x82, 0xeb, 0xdd, 0x86, 0xc6, 0xe7, 0x38, 0xd1, 0x08, 0x04, 0x65, 0x12, 0x4c, 0xcc, 0xde,
	0x21, 0x9f, 0xe5, 0xda, 0x21, 0xb4, 0x52, 0xa6, 0xc7, 0xa1, 0x39, 0x7a, 0x7f, 0x29, 0x41, 0xf3,
	0x7e, 0xc4, 0x05, 0x98, 0x0b, 0xf4, 0x47, 0x50, 0xa1, 0x4f, 0x08, 0x66, 0xaf, 0xd9, 0x06, 0x7d,
	0x25, 0x7d, 0xbe, 0x01, 0xf4, 0x53, 0xbd, 0xaf, 0xbb, 0x2f, 0xd9, 0xd7, 0xf5, 0x5a, 0xbe, 0x07,
	0xb5, 0x88, 0x88, 0x33, 0x6f, 0x57, 0x77, 0xdc, 0xf3, 0xa5, 0x8d, 0x14, 0xba, 0x6e, 0x5a, 0x66,
	0xf9, 0x65, 0x2d, 0xd3, 0x34, 0x46, 0x21, 0x1d, 0x84, 0x98, 0xe9, 0xc6, 0xb0, 0x99, 0x6f, 0x0c,
	0x21, 0x66, 0x3e, 0xfe, 0xce, 0x57, 0x42, 0xde, 0xc0, 0x8e, 0x0b, 0x47, 0xef, 0x43, 0xf9, 0x31,
	0x1d, 0x98, 0xdd, 0x60, 0xc5, 0x45, 0x48, 0xf6, 0x99, 0x8d, 0xd2, 0x4b, 0x6c, 0x70, 0x63, 0xe3,
	0x09, 0xac, 0x3f, 0x8a, 0x47, 0x17, 0xbb, 0x6c, 0xd4, 0x87, 0x86, 0xfc, 0xfe, 0x7c, 0x10, 0xf0,
	0xd3, 0x74, 0x45, 0xcf, 0xa7, 0xdd, 0x3d, 0x23, 0xd1, 0xaf, 0x9b, 0xcf, 0x0b, 0xff, 0x0c, 0xe6,
	0x7d, 0x02, 0xcd, 0xa3, 0x24, 0x60, 0x6f, 0x96, 0x32, 0xfb, 0x00, 0x47, 0x09, 0x8d, 0xdf, 0x08,
	0xfb, 0x0b, 0x58, 0xf7, 0xf1, 0x84, 0xce, 0xf0, 0x1b, 0xa1, 0x9f, 0xc2, 0x65, 0x1f, 0xc7, 0x94,
	0x25, 0xa6, 0x4f, 0x5d, 0x58, 0x85, 0x58, 0x53, 0xd3, 0xe9, 0xe8, 0xbe, 0x62, 0x3a, 0x9e, 0x8d,
	0xbf, 0x0f, 0xff, 0xe0, 0xc8, 0x2f, 0x50, 0x91, 0x76, 0x68, 0x03, 0xe0, 0x11, 0x39, 0x25, 0xf4,
	0x09, 0x39, 0xa4, 0x83, 0xd6, 0x1a, 0xba, 0x04, 0x4d, 0xf3, 0x9d, 0x25, 0x08, 0x0e, 0xda, 0x04,
	0x74, 0x1f, 0x87, 0xf4, 0x3e, 0x0d, 0xef, 0x3e, 0x15, 0xde, 0x62, 0x26, 0xe8, 0x25, 0x21, 0x68,
	0xe6, 0x9a, 0x20, 0xb8, 0xa8, 0x0d, 0x57, 0x0a, 0x03, 0x43, 0x70, 0xca, 0x08, 0xc1, 0x86, 0xd5,
	0xd3, 0x05, 0xad, 0xf2, 0xe1, 0xf7, 0x0e, 0xd4, 0x4d, 0x4e, 0x0b, 0x27, 0xe4, 0xc3, 0x23, 0xc2,
	0x71, 0xd2, 0x5a, 0x43, 0x2d, 0x58, 0x97, 0x67, 0xd5, 0x3c, 0x46, 0x2d, 0x27, 0xa5, 0x3c, 0xc4,
	0x64, 0x14, 0x91, 0xb0, 0x55, 0x4a, 0x29, 0xfe, 0x94, 0x08, 0x1f, 0x5a, 0xae, 0xf0, 0x48, 0x52,
	0xee, 0xc9, 0x3e, 0xd9, 0x2a, 0xa3, 0x2b, 0xd0, 0x92, 0x84, 0x63, 0xcc, 0x26, 0x11, 0x09, 0xc4,
	0x6e, 0xd4, 0xaa, 0xa0, 0xb7, 0xa0, 0x21, 0xa9, 0x07, 0x94, 0xe0, 0x56, 0xf5, 0xc6, 0xff, 0x5c,
	0x00, 0xb1, 0xb7, 0x60, 0x36, 0x8b, 0x86, 0x18, 0xed, 0x43, 0x23, 0x6d, 0x59, 0x28, 0xf7, 0xb5,
	0x68, 0xf7, 0xb2, 0x4e, 0x31, 0xa3, 0xd1, 0xcf, 0xa1, 0xaa, 0x3a, 0x17, 0xca, 0x2d, 0x14, 0x69,
	0x3f, 0x5b, 0x85, 0xfa, 0x25, 0xd4, 0x4d, 0x6d, 0xa2, 0xdc, 0xf5, 0x59, 0xbd, 0xac, 0x73, 0x2e,
	0x8b, 0x0b, 0x9f, 0xd3, 0xca, 0xcb, 0xfb, 0x6c, 0x97, 0xe4, 0x2a, 0xeb, 0x1f, 0x43, 0xdd, 0x14,
	0x4f, 0xde, 0xba, 0x55, 0x54, 0xab, 0x90, 0xb7, 0xa0, 0xa6, 0x2b, 0x07, 0xb5, 0x0b, 0x1b, 0x75,
	0x7c, 0x3e, 0xee, 0x53, 0x68, 0xa4, 0x55, 0x93, 0xf7, 0xd6, 0x2e, 0xa7, 0xce, 0x66, 0xa1, 0x11,
	0xdc, 0x15, 0x03, 0x06, 0x1d, 0xc0, 0x46, 0xb6, 0x70, 0x50, 0xa1, 0xb1, 0xe7, 0xca, 0x6a, 0x85,
	0x1b, 0xfd, 0x4f, 0x9f, 0xff, 0x67, 0x7b, 0xed, 0xcf, 0x2f, 0xb6, 0xd7, 0x9e, 0xbf, 0xd8, 0x5e,
	0xfb, 0xd7, 0x8b, 0xed, 0xb5, 0x6f, 0x76, 0xc3, 0x28, 0xe9, 0xf1, 0x69, 0xcc, 0xf0, 0x24, 0x22,
	0xa3, 0x5e, 0x44, 0x4e, 0xe4, 0x9f, 0xbc, 0xd1, 0x74, 0x98, 0xf0, 0xbd, 0x20, 0xa1, 0x93, 0x3d,
	0xf3, 0x2b, 0x6f, 0x2f, 0x88, 0xa3, 0x41, 0x55, 0x9e, 0x6e, 0xfe, 0x3f, 0x00, 0x00, 0xff, 0xff,
	0x5e, 0x56, 0x36, 0x1e, 0x17, 0x14, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// JobServiceClient is the client API for JobService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type JobServiceClient interface {
	CreateJob(ctx context.Context, in *CreateJobReq, opts ...grpc.CallOption) (*Job, error)
	GetJob(ctx context.Context, in *GetJobReq, opts ...grpc.CallOption) (*Job, error)
	ListJobs(ctx context.Context, in *ListJobsReq, opts ...grpc.CallOption) (*ListJobsRes, error)
	UpdateJob(ctx context.Context, in *UpdateJobReq, opts ...grpc.CallOption) (*Job, error)
	StartJob(ctx context.Context, in *StartJobReq, opts ...grpc.CallOption) (*Job, error)
	StopJob(ctx context.Context, in *StopJobReq, opts ...grpc.CallOption) (*Job, error)
	RemoveJob(ctx context.Context, in *RemoveJobReq, opts ...grpc.CallOption) (*types.Empty, error)
	ReportProgress(ctx context.Context, in *ReportProgressReq, opts ...grpc.CallOption) (*Job, error)
}

type jobServiceClient struct {
	cc *grpc.ClientConn
}

func NewJobServiceClient(cc *grpc.ClientConn) JobServiceClient {
	return &jobServiceClient{cc}
}

func (c *jobServiceClient) CreateJob(ctx context.Context, in *CreateJobReq, opts ...grpc.CallOption) (*Job, error) {
	out := new(Job)
	err := c.cc.Invoke(ctx, "/apiserver.v2.JobService/CreateJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobServiceClient) GetJob(ctx context.Context, in *GetJobReq, opts ...grpc.CallOption) (*Job, error) {
	out := new(Job)
	err := c.cc.Invoke(ctx, "/apiserver.v2.JobService/GetJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobServiceClient) ListJobs(ctx context.Context, in *ListJobsReq, opts ...grpc.CallOption) (*ListJobsRes, error) {
	out := new(ListJobsRes)
	err := c.cc.Invoke(ctx, "/apiserver.v2.JobService/ListJobs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobServiceClient) UpdateJob(ctx context.Context, in *UpdateJobReq, opts ...grpc.CallOption) (*Job, error) {
	out := new(Job)
	err := c.cc.Invoke(ctx, "/apiserver.v2.JobService/UpdateJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobServiceClient) StartJob(ctx context.Context, in *StartJobReq, opts ...grpc.CallOption) (*Job, error) {
	out := new(Job)
	err := c.cc.Invoke(ctx, "/apiserver.v2.JobService/StartJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobServiceClient) StopJob(ctx context.Context, in *StopJobReq, opts ...grpc.CallOption) (*Job, error) {
	out := new(Job)
	err := c.cc.Invoke(ctx, "/apiserver.v2.JobService/StopJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobServiceClient) RemoveJob(ctx context.Context, in *RemoveJobReq, opts ...grpc.CallOption) (*types.Empty, error) {
	out := new(types.Empty)
	err := c.cc.Invoke(ctx, "/apiserver.v2.JobService/RemoveJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobServiceClient) ReportProgress(ctx context.Context, in *ReportProgressReq, opts ...grpc.CallOption) (*Job, error) {
	out := new(Job)
	err := c.cc.Invoke(ctx, "/apiserver.v2.JobService/ReportProgress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// JobServiceServer is the server API for JobService service.
type JobServiceServer interface {
	CreateJob(context.Context, *CreateJobReq) (*Job, error)
	GetJob(context.Context, *GetJobReq) (*Job, error)
	ListJobs(context.Context, *ListJobsReq) (*ListJobsRes, error)
	UpdateJob(context.Context, *UpdateJobReq) (*Job, error)
	StartJob(context.Context, *StartJobReq) (*Job, error)
	StopJob(context.Context, *StopJobReq) (*Job, error)
	RemoveJob(context.Context, *RemoveJobReq) (*types.Empty, error)
	ReportProgress(context.Context, *ReportProgressReq) (*Job, error)
}

// UnimplementedJobServiceServer can be embedded to have forward compatible implementations.
type UnimplementedJobServiceServer struct {
}

func (*UnimplementedJobServiceServer) CreateJob(ctx context.Context, req *CreateJobReq) (*Job, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateJob not implemented")
}
func (*UnimplementedJobServiceServer) GetJob(ctx context.Context, req *GetJobReq) (*Job, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetJob not implemented")
}
func (*UnimplementedJobServiceServer) ListJobs(ctx context.Context, req *ListJobsReq) (*ListJobsRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListJobs not implemented")
}
func (*UnimplementedJobServiceServer) UpdateJob(ctx context.Context, req *UpdateJobReq) (*Job, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateJob not implemented")
}
func (*UnimplementedJobServiceServer) StartJob(ctx context.Context, req *StartJobReq) (*Job, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StartJob not implemented")
}
func (*UnimplementedJobServiceServer) StopJob(ctx context.Context, req *StopJobReq) (*Job, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StopJob not implemented")
}
func (*UnimplementedJobServiceServer) RemoveJob(ctx context.Context, req *RemoveJobReq) (*types.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveJob not implemented")
}
func (*UnimplementedJobServiceServer) ReportProgress(ctx context.Context, req *ReportProgressReq) (*Job, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReportProgress not implemented")
}

func RegisterJobServiceServer(s *grpc.Server, srv JobServiceServer) {
	s.RegisterService(&_JobService_serviceDesc, srv)
}

func _JobService_CreateJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateJobReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobServiceServer).CreateJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apiserver.v2.JobService/CreateJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobServiceServer).CreateJob(ctx, req.(*CreateJobReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobService_GetJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetJobReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobServiceServer).GetJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apiserver.v2.JobService/GetJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobServiceServer).GetJob(ctx, req.(*GetJobReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobService_ListJobs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListJobsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobServiceServer).ListJobs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apiserver.v2.JobService/ListJobs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobServiceServer).ListJobs(ctx, req.(*ListJobsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobService_UpdateJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateJobReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobServiceServer).UpdateJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apiserver.v2.JobService/UpdateJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobServiceServer).UpdateJob(ctx, req.(*UpdateJobReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobService_StartJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartJobReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobServiceServer).StartJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apiserver.v2.JobService/StartJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobServiceServer).StartJob(ctx, req.(*StartJobReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobService_StopJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StopJobReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobServiceServer).StopJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apiserver.v2.JobService/StopJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobServiceServer).StopJob(ctx, req.(*StopJobReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobService_RemoveJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveJobReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobServiceServer).RemoveJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apiserver.v2.JobService/RemoveJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobServiceServer).RemoveJob(ctx, req.(*RemoveJobReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobService_ReportProgress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReportProgressReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobServiceServer).ReportProgress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apiserver.v2.JobService/ReportProgress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobServiceServer).ReportProgress(ctx, req.(*ReportProgressReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _JobService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "apiserver.v2.JobService",
	HandlerType: (*JobServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateJob",
			Handler:    _JobService_CreateJob_Handler,
		},
		{
			MethodName: "GetJob",
			Handler:    _JobService_GetJob_Handler,
		},
		{
			MethodName: "ListJobs",
			Handler:    _JobService_ListJobs_Handler,
		},
		{
			MethodName: "UpdateJob",
			Handler:    _JobService_UpdateJob_Handler,
		},
		{
			MethodName: "StartJob",
			Handler:    _JobService_StartJob_Handler,
		},
		{
			MethodName: "StopJob",
			Handler:    _JobService_StopJob_Handler,
		},
		{
			MethodName: "RemoveJob",
			Handler:    _JobService_RemoveJob_Handler,
		},
		{
			MethodName: "ReportProgress",
			Handler:    _JobService_ReportProgress_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "job.proto",
}

func (this *JobInstruction) GetValue() interface{} {
	if this.Dataflow != nil {
		return this.Dataflow
	}
	if this.Training != nil {
		return this.Training
	}
	if this.AnalyzerInference != nil {
		return this.AnalyzerInference
	}
	if this.Distributed != nil {
		return this.Distributed
	}
	return nil
}

func (this *JobInstruction) SetValue(value interface{}) bool {
	switch vt := value.(type) {
	case *Dataflow:
		this.Dataflow = vt
	case *TrainingSpec:
		this.Training = vt
	case *AnalyzerInferenceSpec:
		this.AnalyzerInference = vt
	case *DistributedSpec:
		this.Distributed = vt
	default:
		return false
	}
	return true
}
