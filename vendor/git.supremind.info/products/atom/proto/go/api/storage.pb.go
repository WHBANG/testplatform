// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: storage.proto

package api

import (
	context "context"
	fmt "fmt"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type StorageMode int32

const (
	ModeUnknown    StorageMode = 0
	ModeBlock      StorageMode = 1
	ModeFilesystem StorageMode = 2
	ModeLocal      StorageMode = 3
)

var StorageMode_name = map[int32]string{
	0: "ModeUnknown",
	1: "ModeBlock",
	2: "ModeFilesystem",
	3: "ModeLocal",
}

var StorageMode_value = map[string]int32{
	"ModeUnknown":    0,
	"ModeBlock":      1,
	"ModeFilesystem": 2,
	"ModeLocal":      3,
}

func (x StorageMode) String() string {
	return proto.EnumName(StorageMode_name, int32(x))
}

func (StorageMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0d2c4ccf1453ffdb, []int{0}
}

type Storage struct {
	*Metadata `protobuf:"bytes,1,opt,name=meta,proto3,embedded=meta" json:"meta,omitempty" bson:",inline"`
	Spec      *StorageSpec   `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty" bson:"spec"`
	Status    *StorageStatus `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty" bson:"status,omitempty"`
}

func (m *Storage) Reset()         { *m = Storage{} }
func (m *Storage) String() string { return proto.CompactTextString(m) }
func (*Storage) ProtoMessage()    {}
func (*Storage) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d2c4ccf1453ffdb, []int{0}
}
func (m *Storage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Storage.Unmarshal(m, b)
}
func (m *Storage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Storage.Marshal(b, m, deterministic)
}
func (m *Storage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Storage.Merge(m, src)
}
func (m *Storage) XXX_Size() int {
	return xxx_messageInfo_Storage.Size(m)
}
func (m *Storage) XXX_DiscardUnknown() {
	xxx_messageInfo_Storage.DiscardUnknown(m)
}

var xxx_messageInfo_Storage proto.InternalMessageInfo

func (m *Storage) GetSpec() *StorageSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *Storage) GetStatus() *StorageStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

type StorageSpec struct {
	Capacity int64       `protobuf:"varint,1,opt,name=capacity,proto3" json:"capacity,omitempty" bson:"capacity"`
	Mode     StorageMode `protobuf:"varint,2,opt,name=mode,proto3,enum=apiserver.v2.StorageMode" json:"mode,omitempty" bson:"mode"`
}

func (m *StorageSpec) Reset()         { *m = StorageSpec{} }
func (m *StorageSpec) String() string { return proto.CompactTextString(m) }
func (*StorageSpec) ProtoMessage()    {}
func (*StorageSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d2c4ccf1453ffdb, []int{1}
}
func (m *StorageSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StorageSpec.Unmarshal(m, b)
}
func (m *StorageSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StorageSpec.Marshal(b, m, deterministic)
}
func (m *StorageSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StorageSpec.Merge(m, src)
}
func (m *StorageSpec) XXX_Size() int {
	return xxx_messageInfo_StorageSpec.Size(m)
}
func (m *StorageSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_StorageSpec.DiscardUnknown(m)
}

var xxx_messageInfo_StorageSpec proto.InternalMessageInfo

func (m *StorageSpec) GetCapacity() int64 {
	if m != nil {
		return m.Capacity
	}
	return 0
}

func (m *StorageSpec) GetMode() StorageMode {
	if m != nil {
		return m.Mode
	}
	return ModeUnknown
}

type StorageStatus struct {
	UsedBy    []*StorageStatus_UsedBy  `protobuf:"bytes,1,rep,name=usedBy,proto3" json:"usedBy,omitempty" bson:"usedBy"`
	Available *StorageStatus_Available `protobuf:"bytes,2,opt,name=available,proto3" json:"available,omitempty" bson:"available"`
}

func (m *StorageStatus) Reset()         { *m = StorageStatus{} }
func (m *StorageStatus) String() string { return proto.CompactTextString(m) }
func (*StorageStatus) ProtoMessage()    {}
func (*StorageStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d2c4ccf1453ffdb, []int{2}
}
func (m *StorageStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StorageStatus.Unmarshal(m, b)
}
func (m *StorageStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StorageStatus.Marshal(b, m, deterministic)
}
func (m *StorageStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StorageStatus.Merge(m, src)
}
func (m *StorageStatus) XXX_Size() int {
	return xxx_messageInfo_StorageStatus.Size(m)
}
func (m *StorageStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_StorageStatus.DiscardUnknown(m)
}

var xxx_messageInfo_StorageStatus proto.InternalMessageInfo

func (m *StorageStatus) GetUsedBy() []*StorageStatus_UsedBy {
	if m != nil {
		return m.UsedBy
	}
	return nil
}

func (m *StorageStatus) GetAvailable() *StorageStatus_Available {
	if m != nil {
		return m.Available
	}
	return nil
}

type StorageStatus_UsedBy struct {
	Resource *ResourceReference `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty" bson:"resource"`
	ReadOnly bool               `protobuf:"varint,2,opt,name=readOnly,proto3" json:"readOnly,omitempty" bson:"readOnly"`
}

func (m *StorageStatus_UsedBy) Reset()         { *m = StorageStatus_UsedBy{} }
func (m *StorageStatus_UsedBy) String() string { return proto.CompactTextString(m) }
func (*StorageStatus_UsedBy) ProtoMessage()    {}
func (*StorageStatus_UsedBy) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d2c4ccf1453ffdb, []int{2, 0}
}
func (m *StorageStatus_UsedBy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StorageStatus_UsedBy.Unmarshal(m, b)
}
func (m *StorageStatus_UsedBy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StorageStatus_UsedBy.Marshal(b, m, deterministic)
}
func (m *StorageStatus_UsedBy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StorageStatus_UsedBy.Merge(m, src)
}
func (m *StorageStatus_UsedBy) XXX_Size() int {
	return xxx_messageInfo_StorageStatus_UsedBy.Size(m)
}
func (m *StorageStatus_UsedBy) XXX_DiscardUnknown() {
	xxx_messageInfo_StorageStatus_UsedBy.DiscardUnknown(m)
}

var xxx_messageInfo_StorageStatus_UsedBy proto.InternalMessageInfo

func (m *StorageStatus_UsedBy) GetResource() *ResourceReference {
	if m != nil {
		return m.Resource
	}
	return nil
}

func (m *StorageStatus_UsedBy) GetReadOnly() bool {
	if m != nil {
		return m.ReadOnly
	}
	return false
}

type StorageStatus_Available struct {
	ReadOnly  bool `protobuf:"varint,1,opt,name=readOnly,proto3" json:"readOnly,omitempty" bson:"readOnly"`
	ReadWrite bool `protobuf:"varint,2,opt,name=readWrite,proto3" json:"readWrite,omitempty" bson:"readWrite"`
}

func (m *StorageStatus_Available) Reset()         { *m = StorageStatus_Available{} }
func (m *StorageStatus_Available) String() string { return proto.CompactTextString(m) }
func (*StorageStatus_Available) ProtoMessage()    {}
func (*StorageStatus_Available) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d2c4ccf1453ffdb, []int{2, 1}
}
func (m *StorageStatus_Available) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StorageStatus_Available.Unmarshal(m, b)
}
func (m *StorageStatus_Available) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StorageStatus_Available.Marshal(b, m, deterministic)
}
func (m *StorageStatus_Available) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StorageStatus_Available.Merge(m, src)
}
func (m *StorageStatus_Available) XXX_Size() int {
	return xxx_messageInfo_StorageStatus_Available.Size(m)
}
func (m *StorageStatus_Available) XXX_DiscardUnknown() {
	xxx_messageInfo_StorageStatus_Available.DiscardUnknown(m)
}

var xxx_messageInfo_StorageStatus_Available proto.InternalMessageInfo

func (m *StorageStatus_Available) GetReadOnly() bool {
	if m != nil {
		return m.ReadOnly
	}
	return false
}

func (m *StorageStatus_Available) GetReadWrite() bool {
	if m != nil {
		return m.ReadWrite
	}
	return false
}

type CreateStorageReq struct {
	Storage *Storage `protobuf:"bytes,1,opt,name=storage,proto3" json:"storage,omitempty"`
}

func (m *CreateStorageReq) Reset()         { *m = CreateStorageReq{} }
func (m *CreateStorageReq) String() string { return proto.CompactTextString(m) }
func (*CreateStorageReq) ProtoMessage()    {}
func (*CreateStorageReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d2c4ccf1453ffdb, []int{3}
}
func (m *CreateStorageReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateStorageReq.Unmarshal(m, b)
}
func (m *CreateStorageReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateStorageReq.Marshal(b, m, deterministic)
}
func (m *CreateStorageReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateStorageReq.Merge(m, src)
}
func (m *CreateStorageReq) XXX_Size() int {
	return xxx_messageInfo_CreateStorageReq.Size(m)
}
func (m *CreateStorageReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateStorageReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateStorageReq proto.InternalMessageInfo

func (m *CreateStorageReq) GetStorage() *Storage {
	if m != nil {
		return m.Storage
	}
	return nil
}

type GetStorageReq struct {
	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Creator string `protobuf:"bytes,2,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *GetStorageReq) Reset()         { *m = GetStorageReq{} }
func (m *GetStorageReq) String() string { return proto.CompactTextString(m) }
func (*GetStorageReq) ProtoMessage()    {}
func (*GetStorageReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d2c4ccf1453ffdb, []int{4}
}
func (m *GetStorageReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetStorageReq.Unmarshal(m, b)
}
func (m *GetStorageReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetStorageReq.Marshal(b, m, deterministic)
}
func (m *GetStorageReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetStorageReq.Merge(m, src)
}
func (m *GetStorageReq) XXX_Size() int {
	return xxx_messageInfo_GetStorageReq.Size(m)
}
func (m *GetStorageReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetStorageReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetStorageReq proto.InternalMessageInfo

func (m *GetStorageReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetStorageReq) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

type ListStoragesReq struct {
	Creator string      `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Mode    StorageMode `protobuf:"varint,2,opt,name=mode,proto3,enum=apiserver.v2.StorageMode" json:"mode,omitempty"`
	Pager   *PagerReq   `protobuf:"bytes,3,opt,name=pager,proto3" json:"pager,omitempty"`
}

func (m *ListStoragesReq) Reset()         { *m = ListStoragesReq{} }
func (m *ListStoragesReq) String() string { return proto.CompactTextString(m) }
func (*ListStoragesReq) ProtoMessage()    {}
func (*ListStoragesReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d2c4ccf1453ffdb, []int{5}
}
func (m *ListStoragesReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListStoragesReq.Unmarshal(m, b)
}
func (m *ListStoragesReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListStoragesReq.Marshal(b, m, deterministic)
}
func (m *ListStoragesReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListStoragesReq.Merge(m, src)
}
func (m *ListStoragesReq) XXX_Size() int {
	return xxx_messageInfo_ListStoragesReq.Size(m)
}
func (m *ListStoragesReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListStoragesReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListStoragesReq proto.InternalMessageInfo

func (m *ListStoragesReq) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *ListStoragesReq) GetMode() StorageMode {
	if m != nil {
		return m.Mode
	}
	return ModeUnknown
}

func (m *ListStoragesReq) GetPager() *PagerReq {
	if m != nil {
		return m.Pager
	}
	return nil
}

type ListStoragesRes struct {
	Storages []*Storage `protobuf:"bytes,1,rep,name=storages,proto3" json:"storages,omitempty"`
	Pager    *PagerRes  `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager,omitempty"`
}

func (m *ListStoragesRes) Reset()         { *m = ListStoragesRes{} }
func (m *ListStoragesRes) String() string { return proto.CompactTextString(m) }
func (*ListStoragesRes) ProtoMessage()    {}
func (*ListStoragesRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d2c4ccf1453ffdb, []int{6}
}
func (m *ListStoragesRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListStoragesRes.Unmarshal(m, b)
}
func (m *ListStoragesRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListStoragesRes.Marshal(b, m, deterministic)
}
func (m *ListStoragesRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListStoragesRes.Merge(m, src)
}
func (m *ListStoragesRes) XXX_Size() int {
	return xxx_messageInfo_ListStoragesRes.Size(m)
}
func (m *ListStoragesRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ListStoragesRes.DiscardUnknown(m)
}

var xxx_messageInfo_ListStoragesRes proto.InternalMessageInfo

func (m *ListStoragesRes) GetStorages() []*Storage {
	if m != nil {
		return m.Storages
	}
	return nil
}

func (m *ListStoragesRes) GetPager() *PagerRes {
	if m != nil {
		return m.Pager
	}
	return nil
}

type RemoveStorageReq struct {
	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Creator string `protobuf:"bytes,2,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *RemoveStorageReq) Reset()         { *m = RemoveStorageReq{} }
func (m *RemoveStorageReq) String() string { return proto.CompactTextString(m) }
func (*RemoveStorageReq) ProtoMessage()    {}
func (*RemoveStorageReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d2c4ccf1453ffdb, []int{7}
}
func (m *RemoveStorageReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveStorageReq.Unmarshal(m, b)
}
func (m *RemoveStorageReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveStorageReq.Marshal(b, m, deterministic)
}
func (m *RemoveStorageReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveStorageReq.Merge(m, src)
}
func (m *RemoveStorageReq) XXX_Size() int {
	return xxx_messageInfo_RemoveStorageReq.Size(m)
}
func (m *RemoveStorageReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveStorageReq.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveStorageReq proto.InternalMessageInfo

func (m *RemoveStorageReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RemoveStorageReq) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func init() {
	proto.RegisterEnum("apiserver.v2.StorageMode", StorageMode_name, StorageMode_value)
	proto.RegisterType((*Storage)(nil), "apiserver.v2.Storage")
	proto.RegisterType((*StorageSpec)(nil), "apiserver.v2.StorageSpec")
	proto.RegisterType((*StorageStatus)(nil), "apiserver.v2.StorageStatus")
	proto.RegisterType((*StorageStatus_UsedBy)(nil), "apiserver.v2.StorageStatus.UsedBy")
	proto.RegisterType((*StorageStatus_Available)(nil), "apiserver.v2.StorageStatus.Available")
	proto.RegisterType((*CreateStorageReq)(nil), "apiserver.v2.CreateStorageReq")
	proto.RegisterType((*GetStorageReq)(nil), "apiserver.v2.GetStorageReq")
	proto.RegisterType((*ListStoragesReq)(nil), "apiserver.v2.ListStoragesReq")
	proto.RegisterType((*ListStoragesRes)(nil), "apiserver.v2.ListStoragesRes")
	proto.RegisterType((*RemoveStorageReq)(nil), "apiserver.v2.RemoveStorageReq")
}

func init() { proto.RegisterFile("storage.proto", fileDescriptor_0d2c4ccf1453ffdb) }

var fileDescriptor_0d2c4ccf1453ffdb = []byte{
	// 855 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x55, 0xcf, 0x6f, 0xe3, 0x44,
	0x14, 0x8e, 0x93, 0xb4, 0x4d, 0x5e, 0x36, 0xad, 0x19, 0x60, 0xb7, 0xa4, 0x22, 0x59, 0x46, 0x42,
	0x5a, 0xa1, 0xd6, 0x11, 0x41, 0xe2, 0xc0, 0x01, 0xb1, 0xae, 0xe8, 0x4a, 0xa8, 0xd5, 0x56, 0xb3,
	0x5a, 0x21, 0xb8, 0x4d, 0x9c, 0xd7, 0x60, 0xad, 0xed, 0xf1, 0x7a, 0x26, 0x81, 0x5c, 0x39, 0x21,
	0x10, 0x12, 0x7f, 0x06, 0x57, 0x8e, 0xfc, 0x17, 0x3d, 0x72, 0x8a, 0x04, 0x3d, 0x70, 0xcf, 0xb1,
	0x27, 0xe4, 0x99, 0x71, 0x12, 0x87, 0xb6, 0xea, 0x61, 0x4f, 0x9e, 0xf1, 0xfb, 0xbe, 0xef, 0xfd,
	0x98, 0x37, 0xf3, 0xa0, 0x2d, 0x95, 0xc8, 0xf8, 0x18, 0xbd, 0x34, 0x13, 0x4a, 0x90, 0x07, 0x3c,
	0x0d, 0x25, 0x66, 0x53, 0xcc, 0xbc, 0xe9, 0xa0, 0x73, 0x34, 0x0e, 0xd5, 0x77, 0x93, 0xa1, 0x17,
	0x88, 0xb8, 0x3f, 0x16, 0x63, 0xd1, 0xd7, 0xa0, 0xe1, 0xe4, 0x42, 0xef, 0xf4, 0x46, 0xaf, 0x0c,
	0xb9, 0xf3, 0x74, 0x0d, 0x8e, 0xc9, 0x54, 0xcc, 0xd2, 0x4c, 0xfc, 0x30, 0x33, 0xa4, 0xe0, 0x68,
	0x8c, 0xc9, 0xd1, 0x94, 0x47, 0xe1, 0x88, 0x2b, 0xec, 0xff, 0x6f, 0x61, 0x25, 0x0e, 0xc6, 0x42,
	0x8c, 0x23, 0x5c, 0x39, 0xc2, 0x38, 0x55, 0x33, 0x6b, 0x84, 0x18, 0x15, 0x37, 0x6b, 0xfa, 0xaf,
	0x03, 0x3b, 0x2f, 0x4c, 0xe8, 0xe4, 0x2b, 0xa8, 0xe7, 0x96, 0x7d, 0xe7, 0xb1, 0xf3, 0xa4, 0x35,
	0x78, 0xe8, 0xad, 0xe7, 0xe0, 0x9d, 0xa1, 0xe2, 0x23, 0xae, 0xb8, 0xdf, 0xbd, 0xf6, 0xb7, 0x7e,
	0x76, 0xaa, 0x0d, 0xe7, 0x72, 0xde, 0x73, 0x16, 0xf3, 0xde, 0xee, 0x50, 0x8a, 0xe4, 0x33, 0x7a,
	0x18, 0x26, 0x51, 0x98, 0x20, 0x65, 0x5a, 0x83, 0x7c, 0x0e, 0x75, 0x99, 0x62, 0xb0, 0x5f, 0xd5,
	0x5a, 0xef, 0x95, 0xb5, 0xac, 0xc3, 0x17, 0x29, 0x06, 0xfe, 0xde, 0x62, 0xde, 0x6b, 0x19, 0x89,
	0x9c, 0x40, 0x99, 0xe6, 0x91, 0x73, 0xd8, 0x96, 0x8a, 0xab, 0x89, 0xdc, 0xaf, 0x69, 0x85, 0x83,
	0x9b, 0x15, 0x34, 0xc4, 0x3f, 0x58, 0xcc, 0x7b, 0x8f, 0xac, 0x86, 0xfe, 0x73, 0x28, 0xe2, 0x50,
	0xe9, 0x94, 0x29, 0xb3, 0x3a, 0xf4, 0x57, 0x07, 0x5a, 0x6b, 0x8e, 0xc9, 0xa7, 0xd0, 0x08, 0x78,
	0xca, 0x83, 0x50, 0xcd, 0x74, 0xc6, 0x35, 0xbf, 0x73, 0xed, 0xd7, 0x69, 0xf5, 0x71, 0x65, 0x31,
	0xef, 0xed, 0x19, 0xb5, 0x02, 0x40, 0xd9, 0x12, 0x4b, 0x4e, 0xa0, 0x1e, 0x8b, 0x11, 0xea, 0xcc,
	0x76, 0x6f, 0xc9, 0xec, 0x4c, 0x8c, 0xd0, 0x7f, 0x74, 0xed, 0x6f, 0xfd, 0xe8, 0x54, 0x5d, 0x67,
	0x95, 0x61, 0x4e, 0xcc, 0x2b, 0x94, 0x7f, 0xfe, 0xac, 0x41, 0xbb, 0x94, 0x06, 0x39, 0x83, 0xed,
	0x89, 0xc4, 0x91, 0x9f, 0xc7, 0x53, 0x7b, 0xd2, 0x1a, 0xd0, 0x3b, 0x72, 0xf6, 0x5e, 0x6a, 0xa4,
	0xff, 0xd6, 0x62, 0xde, 0x6b, 0x1b, 0x71, 0xc3, 0xa5, 0xcc, 0x8a, 0x90, 0x6f, 0xa0, 0xc9, 0xa7,
	0x3c, 0x8c, 0xf8, 0x30, 0x42, 0x7b, 0x0e, 0x1f, 0xde, 0xa5, 0xf8, 0xb4, 0x00, 0xfb, 0xef, 0x2c,
	0xe6, 0x3d, 0xd7, 0x88, 0x2e, 0x15, 0x28, 0x5b, 0xa9, 0x75, 0x7e, 0x71, 0x60, 0xdb, 0x04, 0x40,
	0xce, 0xa1, 0x91, 0xa1, 0x14, 0x93, 0x2c, 0x40, 0xdb, 0x38, 0xbd, 0xb2, 0x13, 0x66, 0xad, 0x0c,
	0x2f, 0x30, 0xc3, 0x24, 0x40, 0xff, 0xed, 0x55, 0x81, 0x0b, 0x2a, 0x65, 0x4b, 0x15, 0xd2, 0xcf,
	0x15, 0xf9, 0xe8, 0x79, 0x12, 0xcd, 0x74, 0xd8, 0x8d, 0x32, 0xc1, 0x58, 0x34, 0xc1, 0x2c, 0x3b,
	0x29, 0x34, 0x97, 0xb1, 0x97, 0xd8, 0xce, 0x3d, 0xd8, 0x64, 0x00, 0xcd, 0x7c, 0xfd, 0x75, 0x16,
	0x2a, 0xb4, 0xfe, 0xd6, 0xf2, 0x5f, 0x9a, 0x28, 0x5b, 0xc1, 0xe8, 0x31, 0xb8, 0xc7, 0x19, 0x72,
	0x85, 0xb6, 0x82, 0x0c, 0x5f, 0x93, 0x3e, 0xec, 0xd8, 0x37, 0xc0, 0xd6, 0xe1, 0xdd, 0x1b, 0x8b,
	0xcd, 0x0a, 0x14, 0x7d, 0x0e, 0xed, 0x67, 0xa8, 0xd6, 0x14, 0x0e, 0xa0, 0x9e, 0xf0, 0xd8, 0xd0,
	0x9b, 0xfe, 0xce, 0xb5, 0x5f, 0xcf, 0xaa, 0xae, 0xc3, 0xf4, 0x4f, 0xf2, 0x01, 0xec, 0x04, 0xb9,
	0x4b, 0x91, 0xe9, 0x20, 0xd7, 0xec, 0xc5, 0x7f, 0xfa, 0x93, 0x03, 0x7b, 0xa7, 0xa1, 0x2c, 0x24,
	0x65, 0xae, 0xb9, 0xbf, 0xa2, 0x69, 0xd9, 0x25, 0x9a, 0x1c, 0xdd, 0xb3, 0x8f, 0x4d, 0xbb, 0x92,
	0x43, 0xd8, 0x4a, 0xf9, 0x18, 0x33, 0x7b, 0x1f, 0x37, 0x5e, 0x87, 0xf3, 0xdc, 0xc4, 0xf0, 0x35,
	0x33, 0x20, 0x9a, 0x6d, 0x46, 0x22, 0xc9, 0xc7, 0xd0, 0xb0, 0x99, 0x4b, 0xdb, 0xdf, 0xb7, 0x14,
	0x68, 0x09, 0x5b, 0xf9, 0xac, 0xde, 0xe1, 0x53, 0x16, 0x3e, 0x19, 0xb8, 0x0c, 0x63, 0x31, 0xc5,
	0x37, 0x57, 0xd2, 0x8f, 0xce, 0x97, 0x6f, 0x46, 0x5e, 0x0a, 0xb2, 0x07, 0xad, 0xfc, 0xfb, 0x32,
	0x79, 0x95, 0x88, 0xef, 0x13, 0xb7, 0x42, 0xda, 0xd0, 0xd4, 0x77, 0x3d, 0x12, 0xc1, 0x2b, 0xd7,
	0x21, 0x04, 0x76, 0xf3, 0xed, 0x49, 0x18, 0xa1, 0x9c, 0x49, 0x85, 0xb1, 0x5b, 0x2d, 0x20, 0xa7,
	0x22, 0xe0, 0x91, 0x5b, 0x1b, 0xfc, 0x51, 0x85, 0xdd, 0xe2, 0xde, 0x61, 0x36, 0x0d, 0x03, 0x24,
	0xa7, 0xf0, 0x60, 0xbd, 0x58, 0xe4, 0xfd, 0x72, 0x9e, 0x1b, 0x47, 0xda, 0xb9, 0xd3, 0x2c, 0xc9,
	0x17, 0x00, 0xab, 0xb6, 0x22, 0x1b, 0xef, 0x66, 0xa9, 0xe1, 0x3a, 0x37, 0x1f, 0x00, 0x39, 0x81,
	0x76, 0xa9, 0xbb, 0x49, 0xb7, 0x8c, 0xdb, 0x6c, 0xfd, 0xdb, 0x74, 0x9e, 0x41, 0xbb, 0x74, 0x20,
	0x9b, 0x3a, 0x9b, 0xa7, 0xd5, 0x79, 0xe8, 0x99, 0xb1, 0xe5, 0x15, 0x63, 0xcb, 0xfb, 0x32, 0x7f,
	0xc3, 0xfd, 0xe3, 0xcb, 0xbf, 0xbb, 0x95, 0xdf, 0xff, 0xe9, 0x3a, 0xbf, 0x5d, 0x75, 0x2b, 0x97,
	0x57, 0xdd, 0xca, 0x5f, 0x57, 0xdd, 0xca, 0xb7, 0xf9, 0x54, 0xf5, 0xe4, 0x24, 0xcd, 0x30, 0x0e,
	0x93, 0x91, 0x17, 0x26, 0x17, 0x7a, 0xb0, 0x8e, 0x26, 0x81, 0x92, 0x7d, 0xae, 0x44, 0xdc, 0x2f,
	0x26, 0x6b, 0x9f, 0xa7, 0xe1, 0x70, 0x5b, 0xef, 0x3e, 0xf9, 0x2f, 0x00, 0x00, 0xff, 0xff, 0xf1,
	0xc1, 0xf5, 0x99, 0xaa, 0x07, 0x00, 0x00,
}

func (this *Storage) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Storage)
	if !ok {
		that2, ok := that.(Storage)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Metadata.Equal(that1.Metadata) {
		return false
	}
	if !this.Spec.Equal(that1.Spec) {
		return false
	}
	if !this.Status.Equal(that1.Status) {
		return false
	}
	return true
}
func (this *StorageSpec) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*StorageSpec)
	if !ok {
		that2, ok := that.(StorageSpec)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Capacity != that1.Capacity {
		return false
	}
	if this.Mode != that1.Mode {
		return false
	}
	return true
}
func (this *StorageStatus) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*StorageStatus)
	if !ok {
		that2, ok := that.(StorageStatus)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.UsedBy) != len(that1.UsedBy) {
		return false
	}
	for i := range this.UsedBy {
		if !this.UsedBy[i].Equal(that1.UsedBy[i]) {
			return false
		}
	}
	if !this.Available.Equal(that1.Available) {
		return false
	}
	return true
}
func (this *StorageStatus_UsedBy) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*StorageStatus_UsedBy)
	if !ok {
		that2, ok := that.(StorageStatus_UsedBy)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Resource.Equal(that1.Resource) {
		return false
	}
	if this.ReadOnly != that1.ReadOnly {
		return false
	}
	return true
}
func (this *StorageStatus_Available) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*StorageStatus_Available)
	if !ok {
		that2, ok := that.(StorageStatus_Available)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.ReadOnly != that1.ReadOnly {
		return false
	}
	if this.ReadWrite != that1.ReadWrite {
		return false
	}
	return true
}
func (this *CreateStorageReq) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateStorageReq)
	if !ok {
		that2, ok := that.(CreateStorageReq)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Storage.Equal(that1.Storage) {
		return false
	}
	return true
}
func (this *GetStorageReq) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetStorageReq)
	if !ok {
		that2, ok := that.(GetStorageReq)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Name != that1.Name {
		return false
	}
	if this.Creator != that1.Creator {
		return false
	}
	return true
}
func (this *ListStoragesReq) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ListStoragesReq)
	if !ok {
		that2, ok := that.(ListStoragesReq)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Creator != that1.Creator {
		return false
	}
	if this.Mode != that1.Mode {
		return false
	}
	if !this.Pager.Equal(that1.Pager) {
		return false
	}
	return true
}
func (this *ListStoragesRes) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ListStoragesRes)
	if !ok {
		that2, ok := that.(ListStoragesRes)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.Storages) != len(that1.Storages) {
		return false
	}
	for i := range this.Storages {
		if !this.Storages[i].Equal(that1.Storages[i]) {
			return false
		}
	}
	if !this.Pager.Equal(that1.Pager) {
		return false
	}
	return true
}
func (this *RemoveStorageReq) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*RemoveStorageReq)
	if !ok {
		that2, ok := that.(RemoveStorageReq)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Name != that1.Name {
		return false
	}
	if this.Creator != that1.Creator {
		return false
	}
	return true
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// StorageServiceClient is the client API for StorageService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StorageServiceClient interface {
	ListStorages(ctx context.Context, in *ListStoragesReq, opts ...grpc.CallOption) (*ListStoragesRes, error)
	GetStorage(ctx context.Context, in *GetStorageReq, opts ...grpc.CallOption) (*Storage, error)
	CreateStorage(ctx context.Context, in *CreateStorageReq, opts ...grpc.CallOption) (*Storage, error)
	RemoveStorage(ctx context.Context, in *RemoveStorageReq, opts ...grpc.CallOption) (*types.Empty, error)
}

type storageServiceClient struct {
	cc *grpc.ClientConn
}

func NewStorageServiceClient(cc *grpc.ClientConn) StorageServiceClient {
	return &storageServiceClient{cc}
}

func (c *storageServiceClient) ListStorages(ctx context.Context, in *ListStoragesReq, opts ...grpc.CallOption) (*ListStoragesRes, error) {
	out := new(ListStoragesRes)
	err := c.cc.Invoke(ctx, "/apiserver.v2.StorageService/ListStorages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageServiceClient) GetStorage(ctx context.Context, in *GetStorageReq, opts ...grpc.CallOption) (*Storage, error) {
	out := new(Storage)
	err := c.cc.Invoke(ctx, "/apiserver.v2.StorageService/GetStorage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageServiceClient) CreateStorage(ctx context.Context, in *CreateStorageReq, opts ...grpc.CallOption) (*Storage, error) {
	out := new(Storage)
	err := c.cc.Invoke(ctx, "/apiserver.v2.StorageService/CreateStorage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageServiceClient) RemoveStorage(ctx context.Context, in *RemoveStorageReq, opts ...grpc.CallOption) (*types.Empty, error) {
	out := new(types.Empty)
	err := c.cc.Invoke(ctx, "/apiserver.v2.StorageService/RemoveStorage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StorageServiceServer is the server API for StorageService service.
type StorageServiceServer interface {
	ListStorages(context.Context, *ListStoragesReq) (*ListStoragesRes, error)
	GetStorage(context.Context, *GetStorageReq) (*Storage, error)
	CreateStorage(context.Context, *CreateStorageReq) (*Storage, error)
	RemoveStorage(context.Context, *RemoveStorageReq) (*types.Empty, error)
}

// UnimplementedStorageServiceServer can be embedded to have forward compatible implementations.
type UnimplementedStorageServiceServer struct {
}

func (*UnimplementedStorageServiceServer) ListStorages(ctx context.Context, req *ListStoragesReq) (*ListStoragesRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListStorages not implemented")
}
func (*UnimplementedStorageServiceServer) GetStorage(ctx context.Context, req *GetStorageReq) (*Storage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStorage not implemented")
}
func (*UnimplementedStorageServiceServer) CreateStorage(ctx context.Context, req *CreateStorageReq) (*Storage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateStorage not implemented")
}
func (*UnimplementedStorageServiceServer) RemoveStorage(ctx context.Context, req *RemoveStorageReq) (*types.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveStorage not implemented")
}

func RegisterStorageServiceServer(s *grpc.Server, srv StorageServiceServer) {
	s.RegisterService(&_StorageService_serviceDesc, srv)
}

func _StorageService_ListStorages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListStoragesReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServiceServer).ListStorages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apiserver.v2.StorageService/ListStorages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServiceServer).ListStorages(ctx, req.(*ListStoragesReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _StorageService_GetStorage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStorageReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServiceServer).GetStorage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apiserver.v2.StorageService/GetStorage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServiceServer).GetStorage(ctx, req.(*GetStorageReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _StorageService_CreateStorage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateStorageReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServiceServer).CreateStorage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apiserver.v2.StorageService/CreateStorage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServiceServer).CreateStorage(ctx, req.(*CreateStorageReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _StorageService_RemoveStorage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveStorageReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServiceServer).RemoveStorage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apiserver.v2.StorageService/RemoveStorage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServiceServer).RemoveStorage(ctx, req.(*RemoveStorageReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _StorageService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "apiserver.v2.StorageService",
	HandlerType: (*StorageServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListStorages",
			Handler:    _StorageService_ListStorages_Handler,
		},
		{
			MethodName: "GetStorage",
			Handler:    _StorageService_GetStorage_Handler,
		},
		{
			MethodName: "CreateStorage",
			Handler:    _StorageService_CreateStorage_Handler,
		},
		{
			MethodName: "RemoveStorage",
			Handler:    _StorageService_RemoveStorage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "storage.proto",
}
